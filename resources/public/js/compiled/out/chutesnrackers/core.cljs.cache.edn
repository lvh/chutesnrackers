;; Analyzed by ClojureScript 0.0-2755
{:defs {initial-state {:protocol-inline nil, :name chutesnrackers.core/initial-state, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 0}), :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, t15847 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name chutesnrackers.core/t15847, :file "src/chutesnrackers/core.cljs", :type true, :anonymous true, :column 5, :line 69, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, peon {:protocol-inline nil, :name chutesnrackers.core/peon, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 12, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, gutter-width {:file "src/chutesnrackers/core.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :test true, :name chutesnrackers.core/gutter-width}, ->t15847 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name chutesnrackers.core/->t15847, :variadic false, :file "src/chutesnrackers/core.cljs", :method-params ([owner app meta15848]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag chutesnrackers.core/t15847, :variadic false, :max-fixed-arity 3}), :line 69, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner app meta15848])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, grid {:protocol-inline nil, :name chutesnrackers.core/grid, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 12, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app])), :test true}, colors {:file "src/chutesnrackers/core.cljs", :line 19, :column 1, :end-line 19, :end-column 13, :test true, :name chutesnrackers.core/colors}, grid-square {:protocol-inline nil, :name chutesnrackers.core/grid-square, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 19, :method-params ([i color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i color])), :test true}, rows {:file "src/chutesnrackers/core.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :test true, :name chutesnrackers.core/rows}, cols {:file "src/chutesnrackers/core.cljs", :line 16, :column 1, :end-line 16, :end-column 11, :test true, :name chutesnrackers.core/cols}, grid-loc {:protocol-inline nil, :name chutesnrackers.core/grid-loc, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 16, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, app-state {:file "src/chutesnrackers/core.cljs", :line 25, :column 1, :end-line 25, :end-column 20, :test true, :name chutesnrackers.core/app-state}, position-style {:protocol-inline nil, :name chutesnrackers.core/position-style, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 22, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag object, :variadic false, :max-fixed-arity 1}), :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, grid-squares {:file "src/chutesnrackers/core.cljs", :line 17, :column 1, :end-line 17, :end-column 19, :test true, :name chutesnrackers.core/grid-squares}, pixel-loc {:protocol-inline nil, :name chutesnrackers.core/pixel-loc, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 17, :method-params ([p__15842]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[col row]])), :test true}, square-px {:file "src/chutesnrackers/core.cljs", :line 12, :column 1, :end-line 12, :end-column 16, :test true, :name chutesnrackers.core/square-px}}, :name chutesnrackers.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :requires {dom om.dom, om.dom om.dom, om om.core, om.core om.core, fw figwheel.client, figwheel.client figwheel.client, clojure.string clojure.string, s clojure.string}, :imports nil}