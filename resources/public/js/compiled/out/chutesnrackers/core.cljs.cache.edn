;; Analyzed by ClojureScript 0.0-2755
{:defs {in-between-decoration {:protocol-inline nil, :name chutesnrackers.core/in-between-decoration, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 29, :method-params ([n img-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n img-name])), :test true}, values-list {:protocol-inline nil, :name chutesnrackers.core/values-list, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 19, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app])), :test true}, initial-state {:protocol-inline nil, :name chutesnrackers.core/initial-state, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IMap, :variadic false, :max-fixed-arity 0}), :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, peon {:protocol-inline nil, :name chutesnrackers.core/peon, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 12, :method-params ([i img]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([i img])), :test true}, ->t33237 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name chutesnrackers.core/->t33237, :variadic false, :file "src/chutesnrackers/core.cljs", :method-params ([owner app meta33238]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag chutesnrackers.core/t33237, :variadic false, :max-fixed-arity 3}), :line 210, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner app meta33238])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, arrow {:protocol-inline nil, :name chutesnrackers.core/arrow, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 0}), :line 120, :end-line 120, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, gutter-width {:file "src/chutesnrackers/core.cljs", :line 13, :column 1, :end-line 13, :end-column 19, :test true, :name chutesnrackers.core/gutter-width}, grid {:protocol-inline nil, :name chutesnrackers.core/grid, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 12, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app])), :test true}, t33237 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name chutesnrackers.core/t33237, :file "src/chutesnrackers/core.cljs", :type true, :anonymous true, :column 5, :line 210, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, colors {:file "src/chutesnrackers/core.cljs", :line 19, :column 1, :end-line 19, :end-column 13, :test true, :name chutesnrackers.core/colors}, happy-customer {:file "src/chutesnrackers/core.cljs", :line 110, :column 1, :end-line 110, :end-column 21, :test true, :name chutesnrackers.core/happy-customer}, grid-square {:protocol-inline nil, :name chutesnrackers.core/grid-square, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 19, :method-params ([p__33190]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{i :i, color :color, square-type :square-type, img-attrs :img-attrs}])), :test true}, hud {:protocol-inline nil, :name chutesnrackers.core/hud, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 11, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app])), :test true}, values-by-color {:file "src/chutesnrackers/core.cljs", :line 26, :column 1, :end-line 26, :end-column 22, :test true, :name chutesnrackers.core/values-by-color}, rows {:file "src/chutesnrackers/core.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :test true, :name chutesnrackers.core/rows}, cols {:file "src/chutesnrackers/core.cljs", :line 16, :column 1, :end-line 16, :end-column 11, :test true, :name chutesnrackers.core/cols}, in-between-style {:protocol-inline nil, :name chutesnrackers.core/in-between-style, :variadic true, :file "src/chutesnrackers/core.cljs", :end-column 24, :method-params ([below-row center]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag object, :variadic true, :max-fixed-arity 1}), :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([below-row & center])), :test true}, grid-loc {:protocol-inline nil, :name chutesnrackers.core/grid-loc, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 16, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, app-state {:file "src/chutesnrackers/core.cljs", :line 60, :column 1, :end-line 60, :end-column 20, :test true, :name chutesnrackers.core/app-state}, position-style {:protocol-inline nil, :name chutesnrackers.core/position-style, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 22, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag object, :variadic false, :max-fixed-arity 1}), :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, values {:file "src/chutesnrackers/core.cljs", :line 20, :column 1, :end-line 20, :end-column 13, :test true, :name chutesnrackers.core/values}, messages-list {:protocol-inline nil, :name chutesnrackers.core/messages-list, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 21, :method-params ([app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app])), :test true}, square-types {:doc "Square types, frequency weighted by probability.", :file "src/chutesnrackers/core.cljs", :line 31, :column 1, :end-line 31, :end-column 19, :test true, :name chutesnrackers.core/square-types}, grid-squares {:file "src/chutesnrackers/core.cljs", :line 17, :column 1, :end-line 17, :end-column 19, :test true, :name chutesnrackers.core/grid-squares}, pixel-loc {:protocol-inline nil, :name chutesnrackers.core/pixel-loc, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 17, :method-params ([p__33181]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[col row]])), :test true}, steps-to-go-msg {:protocol-inline nil, :name chutesnrackers.core/steps-to-go-msg, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 23, :method-params ([i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 185, :end-line 185, :max-fixed-arity 1, :fn-var true, :arglists (quote ([i])), :test true}, img-attrs {:protocol-inline nil, :name chutesnrackers.core/img-attrs, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 17, :method-params ([square-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{object clj-nil}, :variadic false, :max-fixed-arity 1}), :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([square-type])), :test true}, roll {:protocol-inline nil, :name chutesnrackers.core/roll, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj any}, :variadic false, :max-fixed-arity 1}), :line 162, :end-line 162, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state])), :test true}, square-px {:file "src/chutesnrackers/core.cljs", :line 12, :column 1, :end-line 12, :end-column 16, :test true, :name chutesnrackers.core/square-px}, teleport {:protocol-inline nil, :name chutesnrackers.core/teleport, :variadic false, :file "src/chutesnrackers/core.cljs", :end-column 16, :method-params ([p__33210]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil clj any}, :variadic false, :max-fixed-arity 1}), :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{curr-i :i, squares :squares, :as state}])), :doc "Possibly get teleported by a chute or Racker.", :test true}, faces {:file "src/chutesnrackers/core.cljs", :line 28, :column 1, :end-line 28, :end-column 12, :test true, :name chutesnrackers.core/faces}}, :name chutesnrackers.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :requires {dom om.dom, om.dom om.dom, om om.core, om.core om.core, fw figwheel.client, figwheel.client figwheel.client, clojure.string clojure.string, s clojure.string}, :imports nil}