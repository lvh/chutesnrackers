;; Analyzed by ClojureScript 0.0-2755
{:defs {open {:protocol-inline nil, :name figwheel.client.socket/open, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 12, :method-params ([p__26758]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any js/WebSocket}, :variadic false, :max-fixed-arity 1}), :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [retry-count retried-count websocket-url build-id], :as opts}])), :test true}, proper-build-id {:protocol-inline nil, :name figwheel.client.socket/proper-build-id, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 23, :method-params ([build-id msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 2}), :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([build-id msg])), :test true}, close! {:protocol-inline nil, :name figwheel.client.socket/close!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, send! {:protocol-inline nil, :name figwheel.client.socket/send!, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 13, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :doc "Send a end message to the server.", :test true}, socket-atom {:file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :line 34, :column 1, :end-line 34, :end-column 22, :test true, :name figwheel.client.socket/socket-atom}, message-history-atom {:file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :line 32, :column 1, :end-line 32, :end-column 31, :test true, :name figwheel.client.socket/message-history-atom}, have-websockets? {:protocol-inline nil, :name figwheel.client.socket/have-websockets?, :variadic false, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, log {:protocol-inline nil, :name figwheel.client.socket/log, :variadic true, :file "resources/public/js/compiled/out/figwheel/client/socket.cljs", :end-column 11, :method-params ([p__26753 args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic true, :max-fixed-arity 1}), :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [debug]} & args])), :test true}}, :name figwheel.client.socket, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses {read-string cljs.reader}, :requires {cljs.reader cljs.reader}, :imports nil}