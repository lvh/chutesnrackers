// Compiled by ClojureScript 0.0-2755 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2755";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__19763__delegate = function (args){
return console.log.apply(console,(function (){var G__19762 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__19762) : cljs.core.into_array.call(null,G__19762));
})());
};
var G__19763 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__19764__i = 0, G__19764__a = new Array(arguments.length -  0);
while (G__19764__i < G__19764__a.length) {G__19764__a[G__19764__i] = arguments[G__19764__i + 0]; ++G__19764__i;}
  args = new cljs.core.IndexedSeq(G__19764__a,0);
} 
return G__19763__delegate.call(this,args);};
G__19763.cljs$lang$maxFixedArity = 0;
G__19763.cljs$lang$applyTo = (function (arglist__19765){
var args = cljs.core.seq(arglist__19765);
return G__19763__delegate(args);
});
G__19763.cljs$core$IFn$_invoke$arity$variadic = G__19763__delegate;
return G__19763;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__19767 = x;
return goog.isString(G__19767);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__19769 = x__$1;
return goog.typeOf(G__19769);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__12631__auto__ = ty;
if(cljs.core.truth_(and__12631__auto__)){
return ty.cljs$lang$type;
} else {
return and__12631__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__19771 = obj;
return goog.typeOf(G__19771);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__19773 = Symbol;
return goog.typeOf(G__19773);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__13530__auto___19775 = len;
var i_19776 = (0);
while(true){
if((i_19776 < n__13530__auto___19775)){
(new_arr[i_19776] = (arr[i_19776]));

var G__19777 = (i_19776 + (1));
i_19776 = G__19777;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__19778 = (i + (1));
i = G__19778;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__19787__delegate = function (array,i,idxs){
var G__19784 = aget;
var G__19785 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__19786 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__19784,G__19785,G__19786) : cljs.core.apply.call(null,G__19784,G__19785,G__19786));
};
var G__19787 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__19788__i = 0, G__19788__a = new Array(arguments.length -  2);
while (G__19788__i < G__19788__a.length) {G__19788__a[G__19788__i] = arguments[G__19788__i + 2]; ++G__19788__i;}
  idxs = new cljs.core.IndexedSeq(G__19788__a,0);
} 
return G__19787__delegate.call(this,array,i,idxs);};
G__19787.cljs$lang$maxFixedArity = 2;
G__19787.cljs$lang$applyTo = (function (arglist__19789){
var array = cljs.core.first(arglist__19789);
arglist__19789 = cljs.core.next(arglist__19789);
var i = cljs.core.first(arglist__19789);
var idxs = cljs.core.rest(arglist__19789);
return G__19787__delegate(array,i,idxs);
});
G__19787.cljs$core$IFn$_invoke$arity$variadic = G__19787__delegate;
return G__19787;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__19790 = null;
if (arguments.length > 2) {
var G__19791__i = 0, G__19791__a = new Array(arguments.length -  2);
while (G__19791__i < G__19791__a.length) {G__19791__a[G__19791__i] = arguments[G__19791__i + 2]; ++G__19791__i;}
G__19790 = new cljs.core.IndexedSeq(G__19791__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__19790);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__19800__delegate = function (array,idx,idx2,idxv){
var G__19796 = aset;
var G__19797 = (array[idx]);
var G__19798 = idx2;
var G__19799 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__19796,G__19797,G__19798,G__19799) : cljs.core.apply.call(null,G__19796,G__19797,G__19798,G__19799));
};
var G__19800 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__19801__i = 0, G__19801__a = new Array(arguments.length -  3);
while (G__19801__i < G__19801__a.length) {G__19801__a[G__19801__i] = arguments[G__19801__i + 3]; ++G__19801__i;}
  idxv = new cljs.core.IndexedSeq(G__19801__a,0);
} 
return G__19800__delegate.call(this,array,idx,idx2,idxv);};
G__19800.cljs$lang$maxFixedArity = 3;
G__19800.cljs$lang$applyTo = (function (arglist__19802){
var array = cljs.core.first(arglist__19802);
arglist__19802 = cljs.core.next(arglist__19802);
var idx = cljs.core.first(arglist__19802);
arglist__19802 = cljs.core.next(arglist__19802);
var idx2 = cljs.core.first(arglist__19802);
var idxv = cljs.core.rest(arglist__19802);
return G__19800__delegate(array,idx,idx2,idxv);
});
G__19800.cljs$core$IFn$_invoke$arity$variadic = G__19800__delegate;
return G__19800;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__19803 = null;
if (arguments.length > 3) {
var G__19804__i = 0, G__19804__a = new Array(arguments.length -  3);
while (G__19804__i < G__19804__a.length) {G__19804__a[G__19804__i] = arguments[G__19804__i + 3]; ++G__19804__i;}
G__19803 = new cljs.core.IndexedSeq(G__19804__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__19803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__19810 = (function (a,x){
a.push(x);

return a;
});
var G__19811 = [];
var G__19812 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19810,G__19811,G__19812) : cljs.core.reduce.call(null,G__19810,G__19811,G__19812));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__19813__i = 0, G__19813__a = new Array(arguments.length -  2);
while (G__19813__i < G__19813__a.length) {G__19813__a[G__19813__i] = arguments[G__19813__i + 2]; ++G__19813__i;}
  args = new cljs.core.IndexedSeq(G__19813__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__19814){
var obj = cljs.core.first(arglist__19814);
arglist__19814 = cljs.core.next(arglist__19814);
var s = cljs.core.first(arglist__19814);
var args = cljs.core.rest(arglist__19814);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj19816 = {};
return obj19816;
})();


cljs.core.IFn = (function (){var obj19818 = {};
return obj19818;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19864 = x__13287__auto__;
return goog.typeOf(G__19864);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19866 = x__13287__auto__;
return goog.typeOf(G__19866);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19868 = x__13287__auto__;
return goog.typeOf(G__19868);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19870 = x__13287__auto__;
return goog.typeOf(G__19870);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19872 = x__13287__auto__;
return goog.typeOf(G__19872);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19874 = x__13287__auto__;
return goog.typeOf(G__19874);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19876 = x__13287__auto__;
return goog.typeOf(G__19876);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19878 = x__13287__auto__;
return goog.typeOf(G__19878);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19880 = x__13287__auto__;
return goog.typeOf(G__19880);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19882 = x__13287__auto__;
return goog.typeOf(G__19882);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19884 = x__13287__auto__;
return goog.typeOf(G__19884);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19886 = x__13287__auto__;
return goog.typeOf(G__19886);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19888 = x__13287__auto__;
return goog.typeOf(G__19888);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19890 = x__13287__auto__;
return goog.typeOf(G__19890);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19892 = x__13287__auto__;
return goog.typeOf(G__19892);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19894 = x__13287__auto__;
return goog.typeOf(G__19894);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19896 = x__13287__auto__;
return goog.typeOf(G__19896);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19898 = x__13287__auto__;
return goog.typeOf(G__19898);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19900 = x__13287__auto__;
return goog.typeOf(G__19900);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19902 = x__13287__auto__;
return goog.typeOf(G__19902);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19904 = x__13287__auto__;
return goog.typeOf(G__19904);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._invoke[(function (){var G__19906 = x__13287__auto__;
return goog.typeOf(G__19906);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._invoke["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj19908 = {};
return obj19908;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__12631__auto__ = value;
if(and__12631__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__12631__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13287__auto__ = (((value == null))?null:value);
return (function (){var or__12643__auto__ = (cljs.core._clone[(function (){var G__19912 = x__13287__auto__;
return goog.typeOf(G__19912);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._clone["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj19914 = {};
return obj19914;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._count[(function (){var G__19918 = x__13287__auto__;
return goog.typeOf(G__19918);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._count["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj19920 = {};
return obj19920;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._empty[(function (){var G__19924 = x__13287__auto__;
return goog.typeOf(G__19924);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._empty["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj19926 = {};
return obj19926;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._conj[(function (){var G__19930 = x__13287__auto__;
return goog.typeOf(G__19930);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._conj["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj19932 = {};
return obj19932;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._nth[(function (){var G__19938 = x__13287__auto__;
return goog.typeOf(G__19938);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._nth["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._nth[(function (){var G__19940 = x__13287__auto__;
return goog.typeOf(G__19940);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._nth["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj19942 = {};
return obj19942;
})();


cljs.core.ISeq = (function (){var obj19944 = {};
return obj19944;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._first[(function (){var G__19948 = x__13287__auto__;
return goog.typeOf(G__19948);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._first["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._rest[(function (){var G__19952 = x__13287__auto__;
return goog.typeOf(G__19952);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._rest["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj19954 = {};
return obj19954;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._next[(function (){var G__19958 = x__13287__auto__;
return goog.typeOf(G__19958);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._next["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj19960 = {};
return obj19960;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._lookup[(function (){var G__19966 = x__13287__auto__;
return goog.typeOf(G__19966);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._lookup["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._lookup[(function (){var G__19968 = x__13287__auto__;
return goog.typeOf(G__19968);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._lookup["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj19970 = {};
return obj19970;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__19974 = x__13287__auto__;
return goog.typeOf(G__19974);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._assoc[(function (){var G__19978 = x__13287__auto__;
return goog.typeOf(G__19978);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._assoc["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj19980 = {};
return obj19980;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._dissoc[(function (){var G__19984 = x__13287__auto__;
return goog.typeOf(G__19984);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._dissoc["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj19986 = {};
return obj19986;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._key[(function (){var G__19990 = x__13287__auto__;
return goog.typeOf(G__19990);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._key["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._val[(function (){var G__19994 = x__13287__auto__;
return goog.typeOf(G__19994);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._val["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj19996 = {};
return obj19996;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._disjoin[(function (){var G__20000 = x__13287__auto__;
return goog.typeOf(G__20000);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._disjoin["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj20002 = {};
return obj20002;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._peek[(function (){var G__20006 = x__13287__auto__;
return goog.typeOf(G__20006);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._peek["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._pop[(function (){var G__20010 = x__13287__auto__;
return goog.typeOf(G__20010);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._pop["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj20012 = {};
return obj20012;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._assoc_n[(function (){var G__20016 = x__13287__auto__;
return goog.typeOf(G__20016);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj20018 = {};
return obj20018;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._deref[(function (){var G__20022 = x__13287__auto__;
return goog.typeOf(G__20022);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._deref["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj20024 = {};
return obj20024;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._deref_with_timeout[(function (){var G__20028 = x__13287__auto__;
return goog.typeOf(G__20028);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj20030 = {};
return obj20030;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._meta[(function (){var G__20034 = x__13287__auto__;
return goog.typeOf(G__20034);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._meta["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj20036 = {};
return obj20036;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._with_meta[(function (){var G__20040 = x__13287__auto__;
return goog.typeOf(G__20040);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._with_meta["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj20042 = {};
return obj20042;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._reduce[(function (){var G__20048 = x__13287__auto__;
return goog.typeOf(G__20048);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._reduce["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._reduce[(function (){var G__20050 = x__13287__auto__;
return goog.typeOf(G__20050);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._reduce["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj20052 = {};
return obj20052;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._kv_reduce[(function (){var G__20056 = x__13287__auto__;
return goog.typeOf(G__20056);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj20058 = {};
return obj20058;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._equiv[(function (){var G__20062 = x__13287__auto__;
return goog.typeOf(G__20062);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._equiv["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj20064 = {};
return obj20064;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._hash[(function (){var G__20068 = x__13287__auto__;
return goog.typeOf(G__20068);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._hash["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj20070 = {};
return obj20070;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._seq[(function (){var G__20074 = x__13287__auto__;
return goog.typeOf(G__20074);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._seq["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj20076 = {};
return obj20076;
})();


cljs.core.IList = (function (){var obj20078 = {};
return obj20078;
})();


cljs.core.IRecord = (function (){var obj20080 = {};
return obj20080;
})();


cljs.core.IReversible = (function (){var obj20082 = {};
return obj20082;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._rseq[(function (){var G__20086 = x__13287__auto__;
return goog.typeOf(G__20086);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._rseq["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj20088 = {};
return obj20088;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._sorted_seq[(function (){var G__20092 = x__13287__auto__;
return goog.typeOf(G__20092);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._sorted_seq_from[(function (){var G__20096 = x__13287__auto__;
return goog.typeOf(G__20096);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._entry_key[(function (){var G__20100 = x__13287__auto__;
return goog.typeOf(G__20100);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._entry_key["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._comparator[(function (){var G__20104 = x__13287__auto__;
return goog.typeOf(G__20104);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._comparator["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj20106 = {};
return obj20106;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__12631__auto__ = writer;
if(and__12631__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__12631__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13287__auto__ = (((writer == null))?null:writer);
return (function (){var or__12643__auto__ = (cljs.core._write[(function (){var G__20110 = x__13287__auto__;
return goog.typeOf(G__20110);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._write["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__12631__auto__ = writer;
if(and__12631__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__12631__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13287__auto__ = (((writer == null))?null:writer);
return (function (){var or__12643__auto__ = (cljs.core._flush[(function (){var G__20114 = x__13287__auto__;
return goog.typeOf(G__20114);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._flush["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj20116 = {};
return obj20116;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._pr_writer[(function (){var G__20120 = x__13287__auto__;
return goog.typeOf(G__20120);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj20122 = {};
return obj20122;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__12631__auto__ = d;
if(and__12631__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__12631__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13287__auto__ = (((d == null))?null:d);
return (function (){var or__12643__auto__ = (cljs.core._realized_QMARK_[(function (){var G__20126 = x__13287__auto__;
return goog.typeOf(G__20126);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj20128 = {};
return obj20128;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._notify_watches[(function (){var G__20132 = x__13287__auto__;
return goog.typeOf(G__20132);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._add_watch[(function (){var G__20136 = x__13287__auto__;
return goog.typeOf(G__20136);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._add_watch["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__12631__auto__ = this$;
if(and__12631__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__12631__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13287__auto__ = (((this$ == null))?null:this$);
return (function (){var or__12643__auto__ = (cljs.core._remove_watch[(function (){var G__20140 = x__13287__auto__;
return goog.typeOf(G__20140);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj20142 = {};
return obj20142;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._as_transient[(function (){var G__20146 = x__13287__auto__;
return goog.typeOf(G__20146);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._as_transient["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj20148 = {};
return obj20148;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._conj_BANG_[(function (){var G__20152 = x__13287__auto__;
return goog.typeOf(G__20152);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._persistent_BANG_[(function (){var G__20156 = x__13287__auto__;
return goog.typeOf(G__20156);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj20158 = {};
return obj20158;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._assoc_BANG_[(function (){var G__20162 = x__13287__auto__;
return goog.typeOf(G__20162);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj20164 = {};
return obj20164;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__20168 = x__13287__auto__;
return goog.typeOf(G__20168);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj20170 = {};
return obj20170;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__20174 = x__13287__auto__;
return goog.typeOf(G__20174);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._pop_BANG_[(function (){var G__20178 = x__13287__auto__;
return goog.typeOf(G__20178);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj20180 = {};
return obj20180;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__12631__auto__ = tcoll;
if(and__12631__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13287__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__12643__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__20184 = x__13287__auto__;
return goog.typeOf(G__20184);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj20186 = {};
return obj20186;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._compare[(function (){var G__20190 = x__13287__auto__;
return goog.typeOf(G__20190);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._compare["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj20192 = {};
return obj20192;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._drop_first[(function (){var G__20196 = x__13287__auto__;
return goog.typeOf(G__20196);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._drop_first["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj20198 = {};
return obj20198;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._chunked_first[(function (){var G__20202 = x__13287__auto__;
return goog.typeOf(G__20202);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._chunked_rest[(function (){var G__20206 = x__13287__auto__;
return goog.typeOf(G__20206);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj20208 = {};
return obj20208;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._chunked_next[(function (){var G__20212 = x__13287__auto__;
return goog.typeOf(G__20212);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj20214 = {};
return obj20214;
})();

cljs.core._name = (function _name(x){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._name[(function (){var G__20218 = x__13287__auto__;
return goog.typeOf(G__20218);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._name["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._namespace[(function (){var G__20222 = x__13287__auto__;
return goog.typeOf(G__20222);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._namespace["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj20224 = {};
return obj20224;
})();


cljs.core.IReset = (function (){var obj20226 = {};
return obj20226;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._reset_BANG_[(function (){var G__20230 = x__13287__auto__;
return goog.typeOf(G__20230);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj20232 = {};
return obj20232;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._swap_BANG_[(function (){var G__20242 = x__13287__auto__;
return goog.typeOf(G__20242);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._swap_BANG_[(function (){var G__20244 = x__13287__auto__;
return goog.typeOf(G__20244);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._swap_BANG_[(function (){var G__20246 = x__13287__auto__;
return goog.typeOf(G__20246);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._swap_BANG_[(function (){var G__20248 = x__13287__auto__;
return goog.typeOf(G__20248);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj20250 = {};
return obj20250;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__12631__auto__ = o;
if(and__12631__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__12631__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13287__auto__ = (((o == null))?null:o);
return (function (){var or__12643__auto__ = (cljs.core._vreset_BANG_[(function (){var G__20254 = x__13287__auto__;
return goog.typeOf(G__20254);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj20256 = {};
return obj20256;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__12631__auto__ = coll;
if(and__12631__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__12631__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13287__auto__ = (((coll == null))?null:coll);
return (function (){var or__12643__auto__ = (cljs.core._iterator[(function (){var G__20260 = x__13287__auto__;
return goog.typeOf(G__20260);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._iterator["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__20263 = (4294967295);
var G__20264 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20263,G__20264) : Math.imul.call(null,G__20263,G__20264));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__20267 = a;
var G__20268 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__20267,G__20268) : Math.imul.call(null,G__20267,G__20268));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__20269 = (i + (2));
var G__20270 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__20269;
h1 = G__20270;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj20272 = {};
return obj20272;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__20273 = (i + (1));
var G__20274 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__20273;
hash = G__20274;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj20278 = {};
return obj20278;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__20281 = o;
if(G__20281){
var bit__13317__auto__ = (G__20281.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13317__auto__) || (G__20281.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__20282 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20282) : Math.floor.call(null,G__20282));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12631__auto__ = cljs.core.not(a.ns);
if(and__12631__auto__){
return b.ns;
} else {
return and__12631__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20289 = a.ns;
var G__20290 = b.ns;
return goog.array.defaultCompare(G__20289,G__20290);
})();
if(((0) === nsc)){
var G__20291 = a.name;
var G__20292 = b.name;
return goog.array.defaultCompare(G__20291,G__20292);
} else {
return nsc;
}
}
} else {
var G__20293 = a.name;
var G__20294 = b.name;
return goog.array.defaultCompare(G__20293,G__20294);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13064__auto__ = self__._hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__20296 = null;
var G__20296__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__20296__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__20296 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20296__2.call(this,self__,coll);
case 3:
return G__20296__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20296.cljs$core$IFn$_invoke$arity$2 = G__20296__2;
G__20296.cljs$core$IFn$_invoke$arity$3 = G__20296__3;
return G__20296;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args20295){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20295)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__20344 = null;
var G__20344__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__20344__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__20344__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__20344__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__20344__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__20344__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__20344__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__20344__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__20344__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__20344__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__20344__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__20344__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__20344__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__20344__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__20344__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__20344__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__20344__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__20344__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__20344__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__20344__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__20344__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__20344__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20300 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20301 = a;
var G__20302 = b;
var G__20303 = c;
var G__20304 = d;
var G__20305 = e;
var G__20306 = f;
var G__20307 = g;
var G__20308 = h;
var G__20309 = i;
var G__20310 = j;
var G__20311 = k;
var G__20312 = l;
var G__20313 = m;
var G__20314 = n;
var G__20315 = o;
var G__20316 = p;
var G__20317 = q;
var G__20318 = r;
var G__20319 = s;
var G__20320 = t;
var G__20321 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20300,G__20301,G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316,G__20317,G__20318,G__20319,G__20320,G__20321) : cljs.core.apply.call(null,G__20300,G__20301,G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314,G__20315,G__20316,G__20317,G__20318,G__20319,G__20320,G__20321));
});
G__20344 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20344__1.call(this,self__);
case 2:
return G__20344__2.call(this,self__,a);
case 3:
return G__20344__3.call(this,self__,a,b);
case 4:
return G__20344__4.call(this,self__,a,b,c);
case 5:
return G__20344__5.call(this,self__,a,b,c,d);
case 6:
return G__20344__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20344__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20344__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20344__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20344__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20344__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20344__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20344__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20344__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20344__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20344__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20344__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20344__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20344__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20344__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20344__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20344__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20344.cljs$core$IFn$_invoke$arity$1 = G__20344__1;
G__20344.cljs$core$IFn$_invoke$arity$2 = G__20344__2;
G__20344.cljs$core$IFn$_invoke$arity$3 = G__20344__3;
G__20344.cljs$core$IFn$_invoke$arity$4 = G__20344__4;
G__20344.cljs$core$IFn$_invoke$arity$5 = G__20344__5;
G__20344.cljs$core$IFn$_invoke$arity$6 = G__20344__6;
G__20344.cljs$core$IFn$_invoke$arity$7 = G__20344__7;
G__20344.cljs$core$IFn$_invoke$arity$8 = G__20344__8;
G__20344.cljs$core$IFn$_invoke$arity$9 = G__20344__9;
G__20344.cljs$core$IFn$_invoke$arity$10 = G__20344__10;
G__20344.cljs$core$IFn$_invoke$arity$11 = G__20344__11;
G__20344.cljs$core$IFn$_invoke$arity$12 = G__20344__12;
G__20344.cljs$core$IFn$_invoke$arity$13 = G__20344__13;
G__20344.cljs$core$IFn$_invoke$arity$14 = G__20344__14;
G__20344.cljs$core$IFn$_invoke$arity$15 = G__20344__15;
G__20344.cljs$core$IFn$_invoke$arity$16 = G__20344__16;
G__20344.cljs$core$IFn$_invoke$arity$17 = G__20344__17;
G__20344.cljs$core$IFn$_invoke$arity$18 = G__20344__18;
G__20344.cljs$core$IFn$_invoke$arity$19 = G__20344__19;
G__20344.cljs$core$IFn$_invoke$arity$20 = G__20344__20;
G__20344.cljs$core$IFn$_invoke$arity$21 = G__20344__21;
G__20344.cljs$core$IFn$_invoke$arity$22 = G__20344__22;
return G__20344;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args20299){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20299)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20322 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__20323 = a;
var G__20324 = b;
var G__20325 = c;
var G__20326 = d;
var G__20327 = e;
var G__20328 = f;
var G__20329 = g;
var G__20330 = h;
var G__20331 = i;
var G__20332 = j;
var G__20333 = k;
var G__20334 = l;
var G__20335 = m;
var G__20336 = n;
var G__20337 = o;
var G__20338 = p;
var G__20339 = q;
var G__20340 = r;
var G__20341 = s;
var G__20342 = t;
var G__20343 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343) : cljs.core.apply.call(null,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328,G__20329,G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__20346 = x;
if(G__20346){
var bit__13324__auto__ = null;
if(cljs.core.truth_((function (){var or__12643__auto__ = bit__13324__auto__;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return G__20346.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__20346.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20346);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__20346);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__20348 = value;
if(G__20348){
var bit__13324__auto__ = (G__20348.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__13324__auto__) || (G__20348.cljs$core$ICloneable$)){
return true;
} else {
if((!G__20348.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20348);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__20348);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20350 = coll;
if(G__20350){
var bit__13317__auto__ = (G__20350.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13317__auto__) || (G__20350.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20352 = coll;
if(G__20352){
var bit__13317__auto__ = (G__20352.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13317__auto__) || (G__20352.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__20354 = coll;
if(G__20354){
var bit__13317__auto__ = (G__20354.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13317__auto__) || (G__20354.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__20356 = coll;
if(G__20356){
var bit__13317__auto__ = (G__20356.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13317__auto__) || (G__20356.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__20361__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__20362 = y;
var G__20363 = cljs.core.first(more);
var G__20364 = cljs.core.next(more);
x = G__20362;
y = G__20363;
more = G__20364;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__20361 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20365__i = 0, G__20365__a = new Array(arguments.length -  2);
while (G__20365__i < G__20365__a.length) {G__20365__a[G__20365__i] = arguments[G__20365__i + 2]; ++G__20365__i;}
  more = new cljs.core.IndexedSeq(G__20365__a,0);
} 
return G__20361__delegate.call(this,x,y,more);};
G__20361.cljs$lang$maxFixedArity = 2;
G__20361.cljs$lang$applyTo = (function (arglist__20366){
var x = cljs.core.first(arglist__20366);
arglist__20366 = cljs.core.next(arglist__20366);
var y = cljs.core.first(arglist__20366);
var more = cljs.core.rest(arglist__20366);
return G__20361__delegate(x,y,more);
});
G__20361.cljs$core$IFn$_invoke$arity$variadic = G__20361__delegate;
return G__20361;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__20367 = null;
if (arguments.length > 2) {
var G__20368__i = 0, G__20368__a = new Array(arguments.length -  2);
while (G__20368__i < G__20368__a.length) {G__20368__a[G__20368__i] = arguments[G__20368__i + 2]; ++G__20368__i;}
G__20367 = new cljs.core.IndexedSeq(G__20368__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__20369 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__20369) : cljs.core.es6_iterator_seq.call(null,G__20369));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20370 = (n + (1));
var G__20371 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20372 = cljs.core.next(coll__$1);
n = G__20370;
hash_code = G__20371;
coll__$1 = G__20372;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__20373 = (n + (1));
var G__20374 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__20375 = cljs.core.next(coll__$1);
n = G__20373;
hash_code = G__20374;
coll__$1 = G__20375;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__20376 = o;
return goog.getUid(G__20376);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__20378 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20378) : cljs.core.deref.call(null,G__20378));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20385 = val;
var G__20386 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20385,G__20386) : f.call(null,G__20385,G__20386));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20391 = nval;
var G__20392 = (n + (1));
val = G__20391;
n = G__20392;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20387 = val__$1;
var G__20388 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20387,G__20388) : f.call(null,G__20387,G__20388));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20393 = nval;
var G__20394 = (n + (1));
val__$1 = G__20393;
n = G__20394;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20389 = val__$1;
var G__20390 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20389,G__20390) : f.call(null,G__20389,G__20390));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20395 = nval;
var G__20396 = (n + (1));
val__$1 = G__20395;
n = G__20396;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__20403 = val;
var G__20404 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20403,G__20404) : f.call(null,G__20403,G__20404));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20409 = nval;
var G__20410 = (n + (1));
val = G__20409;
n = G__20410;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__20405 = val__$1;
var G__20406 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20405,G__20406) : f.call(null,G__20405,G__20406));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20411 = nval;
var G__20412 = (n + (1));
val__$1 = G__20411;
n = G__20412;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__20407 = val__$1;
var G__20408 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20407,G__20408) : f.call(null,G__20407,G__20408));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__20413 = nval;
var G__20414 = (n + (1));
val__$1 = G__20413;
n = G__20414;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__20416 = x;
if(G__20416){
var bit__13324__auto__ = (G__20416.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13324__auto__) || (G__20416.cljs$core$ICounted$)){
return true;
} else {
if((!G__20416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__20416);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__20418 = x;
if(G__20418){
var bit__13324__auto__ = (G__20418.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13324__auto__) || (G__20418.cljs$core$IIndexed$)){
return true;
} else {
if((!G__20418.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20418);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__20418);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20419 = coll__$1;
var G__20420 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20419,G__20420) : cljs.core.equiv_sequential.call(null,G__20419,G__20420));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20421 = o;
var G__20422 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20421,G__20422) : cljs.core.cons.call(null,G__20421,G__20422));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__20425 = coll__$1;
var G__20426 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__20425,G__20426) : cljs.core.equiv_sequential.call(null,G__20425,G__20426));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__20427 = cljs.core.List.EMPTY;
var G__20428 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__20427,G__20428) : cljs.core.with_meta.call(null,G__20427,G__20428));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__20429 = f;
var G__20430 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__20429,G__20430) : cljs.core.seq_reduce.call(null,G__20429,G__20430));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__20431 = f;
var G__20432 = start;
var G__20433 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__20431,G__20432,G__20433) : cljs.core.seq_reduce.call(null,G__20431,G__20432,G__20433));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__20434 = o;
var G__20435 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__20434,G__20435) : cljs.core.cons.call(null,G__20434,G__20435));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__20436 = sn;
s = G__20436;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__20441__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__20442 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__20443 = cljs.core.first(xs);
var G__20444 = cljs.core.next(xs);
coll = G__20442;
x = G__20443;
xs = G__20444;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__20441 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__20445__i = 0, G__20445__a = new Array(arguments.length -  2);
while (G__20445__i < G__20445__a.length) {G__20445__a[G__20445__i] = arguments[G__20445__i + 2]; ++G__20445__i;}
  xs = new cljs.core.IndexedSeq(G__20445__a,0);
} 
return G__20441__delegate.call(this,coll,x,xs);};
G__20441.cljs$lang$maxFixedArity = 2;
G__20441.cljs$lang$applyTo = (function (arglist__20446){
var coll = cljs.core.first(arglist__20446);
arglist__20446 = cljs.core.next(arglist__20446);
var x = cljs.core.first(arglist__20446);
var xs = cljs.core.rest(arglist__20446);
return G__20441__delegate(coll,x,xs);
});
G__20441.cljs$core$IFn$_invoke$arity$variadic = G__20441__delegate;
return G__20441;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__20447 = null;
if (arguments.length > 2) {
var G__20448__i = 0, G__20448__a = new Array(arguments.length -  2);
while (G__20448__i < G__20448__a.length) {G__20448__a[G__20448__i] = arguments[G__20448__i + 2]; ++G__20448__i;}
G__20447 = new cljs.core.IndexedSeq(G__20448__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__20447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__20449 = cljs.core.next(s);
var G__20450 = (acc + (1));
s = G__20449;
acc = G__20450;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__20452 = coll;
if(G__20452){
var bit__13317__auto__ = (G__20452.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13317__auto__) || (G__20452.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__20453 = cljs.core.next(coll);
var G__20454 = (n - (1));
coll = G__20453;
n = G__20454;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__20455 = cljs.core.next(coll);
var G__20456 = (n - (1));
var G__20457 = not_found;
coll = G__20455;
n = G__20456;
not_found = G__20457;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__20462 = coll;
if(G__20462){
var bit__13317__auto__ = (G__20462.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13317__auto__) || (G__20462.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20463 = coll;
if(G__20463){
var bit__13324__auto__ = (G__20463.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13324__auto__) || (G__20463.cljs$core$ISeq$)){
return true;
} else {
if((!G__20463.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20463);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20463);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__20464 = coll;
if(G__20464){
var bit__13317__auto__ = (G__20464.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13317__auto__) || (G__20464.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__20465 = coll;
if(G__20465){
var bit__13324__auto__ = (G__20465.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13324__auto__) || (G__20465.cljs$core$ISeq$)){
return true;
} else {
if((!G__20465.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20465);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__20465);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__20466 = (n__$1 - (1));
var G__20467 = cljs.core.rest(xs);
n__$1 = G__20466;
xs = G__20467;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__20470 = o;
if(G__20470){
var bit__13317__auto__ = (G__20470.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13317__auto__) || (G__20470.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__20471 = o;
if(G__20471){
var bit__13317__auto__ = (G__20471.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13317__auto__) || (G__20471.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__20475__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__20476 = ret;
var G__20477 = cljs.core.first(kvs);
var G__20478 = cljs.core.second(kvs);
var G__20479 = cljs.core.nnext(kvs);
coll = G__20476;
k = G__20477;
v = G__20478;
kvs = G__20479;
continue;
} else {
return ret;
}
break;
}
};
var G__20475 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20480__i = 0, G__20480__a = new Array(arguments.length -  3);
while (G__20480__i < G__20480__a.length) {G__20480__a[G__20480__i] = arguments[G__20480__i + 3]; ++G__20480__i;}
  kvs = new cljs.core.IndexedSeq(G__20480__a,0);
} 
return G__20475__delegate.call(this,coll,k,v,kvs);};
G__20475.cljs$lang$maxFixedArity = 3;
G__20475.cljs$lang$applyTo = (function (arglist__20481){
var coll = cljs.core.first(arglist__20481);
arglist__20481 = cljs.core.next(arglist__20481);
var k = cljs.core.first(arglist__20481);
arglist__20481 = cljs.core.next(arglist__20481);
var v = cljs.core.first(arglist__20481);
var kvs = cljs.core.rest(arglist__20481);
return G__20475__delegate(coll,k,v,kvs);
});
G__20475.cljs$core$IFn$_invoke$arity$variadic = G__20475__delegate;
return G__20475;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__20482 = null;
if (arguments.length > 3) {
var G__20483__i = 0, G__20483__a = new Array(arguments.length -  3);
while (G__20483__i < G__20483__a.length) {G__20483__a[G__20483__i] = arguments[G__20483__i + 3]; ++G__20483__i;}
G__20482 = new cljs.core.IndexedSeq(G__20483__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__20482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__20486__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20487 = ret;
var G__20488 = cljs.core.first(ks);
var G__20489 = cljs.core.next(ks);
coll = G__20487;
k = G__20488;
ks = G__20489;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20486 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20490__i = 0, G__20490__a = new Array(arguments.length -  2);
while (G__20490__i < G__20490__a.length) {G__20490__a[G__20490__i] = arguments[G__20490__i + 2]; ++G__20490__i;}
  ks = new cljs.core.IndexedSeq(G__20490__a,0);
} 
return G__20486__delegate.call(this,coll,k,ks);};
G__20486.cljs$lang$maxFixedArity = 2;
G__20486.cljs$lang$applyTo = (function (arglist__20491){
var coll = cljs.core.first(arglist__20491);
arglist__20491 = cljs.core.next(arglist__20491);
var k = cljs.core.first(arglist__20491);
var ks = cljs.core.rest(arglist__20491);
return G__20486__delegate(coll,k,ks);
});
G__20486.cljs$core$IFn$_invoke$arity$variadic = G__20486__delegate;
return G__20486;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__20492 = null;
if (arguments.length > 2) {
var G__20493__i = 0, G__20493__a = new Array(arguments.length -  2);
while (G__20493__i < G__20493__a.length) {G__20493__a[G__20493__i] = arguments[G__20493__i + 2]; ++G__20493__i;}
G__20492 = new cljs.core.IndexedSeq(G__20493__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__12643__auto__ = (function (){var G__20498 = f;
return goog.isFunction(G__20498);
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var G__20499 = f;
if(G__20499){
var bit__13324__auto__ = null;
if(cljs.core.truth_((function (){var or__12643__auto____$1 = bit__13324__auto__;
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
return G__20499.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__20499.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__20499);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__20965 = null;
var G__20965__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__20965__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20501 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20501) : self__.afn.call(null,G__20501));
});
var G__20965__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20502 = a;
var G__20503 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20502,G__20503) : self__.afn.call(null,G__20502,G__20503));
});
var G__20965__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20504 = a;
var G__20505 = b;
var G__20506 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20504,G__20505,G__20506) : self__.afn.call(null,G__20504,G__20505,G__20506));
});
var G__20965__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20507 = a;
var G__20508 = b;
var G__20509 = c;
var G__20510 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20507,G__20508,G__20509,G__20510) : self__.afn.call(null,G__20507,G__20508,G__20509,G__20510));
});
var G__20965__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20511 = a;
var G__20512 = b;
var G__20513 = c;
var G__20514 = d;
var G__20515 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20511,G__20512,G__20513,G__20514,G__20515) : self__.afn.call(null,G__20511,G__20512,G__20513,G__20514,G__20515));
});
var G__20965__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20516 = a;
var G__20517 = b;
var G__20518 = c;
var G__20519 = d;
var G__20520 = e;
var G__20521 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20516,G__20517,G__20518,G__20519,G__20520,G__20521) : self__.afn.call(null,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521));
});
var G__20965__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20522 = a;
var G__20523 = b;
var G__20524 = c;
var G__20525 = d;
var G__20526 = e;
var G__20527 = f;
var G__20528 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20522,G__20523,G__20524,G__20525,G__20526,G__20527,G__20528) : self__.afn.call(null,G__20522,G__20523,G__20524,G__20525,G__20526,G__20527,G__20528));
});
var G__20965__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20529 = a;
var G__20530 = b;
var G__20531 = c;
var G__20532 = d;
var G__20533 = e;
var G__20534 = f;
var G__20535 = g;
var G__20536 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536) : self__.afn.call(null,G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536));
});
var G__20965__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20537 = a;
var G__20538 = b;
var G__20539 = c;
var G__20540 = d;
var G__20541 = e;
var G__20542 = f;
var G__20543 = g;
var G__20544 = h;
var G__20545 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545) : self__.afn.call(null,G__20537,G__20538,G__20539,G__20540,G__20541,G__20542,G__20543,G__20544,G__20545));
});
var G__20965__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20546 = a;
var G__20547 = b;
var G__20548 = c;
var G__20549 = d;
var G__20550 = e;
var G__20551 = f;
var G__20552 = g;
var G__20553 = h;
var G__20554 = i;
var G__20555 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555) : self__.afn.call(null,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555));
});
var G__20965__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20556 = a;
var G__20557 = b;
var G__20558 = c;
var G__20559 = d;
var G__20560 = e;
var G__20561 = f;
var G__20562 = g;
var G__20563 = h;
var G__20564 = i;
var G__20565 = j;
var G__20566 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20556,G__20557,G__20558,G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566) : self__.afn.call(null,G__20556,G__20557,G__20558,G__20559,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566));
});
var G__20965__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20567 = a;
var G__20568 = b;
var G__20569 = c;
var G__20570 = d;
var G__20571 = e;
var G__20572 = f;
var G__20573 = g;
var G__20574 = h;
var G__20575 = i;
var G__20576 = j;
var G__20577 = k;
var G__20578 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578) : self__.afn.call(null,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578));
});
var G__20965__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20579 = a;
var G__20580 = b;
var G__20581 = c;
var G__20582 = d;
var G__20583 = e;
var G__20584 = f;
var G__20585 = g;
var G__20586 = h;
var G__20587 = i;
var G__20588 = j;
var G__20589 = k;
var G__20590 = l;
var G__20591 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591) : self__.afn.call(null,G__20579,G__20580,G__20581,G__20582,G__20583,G__20584,G__20585,G__20586,G__20587,G__20588,G__20589,G__20590,G__20591));
});
var G__20965__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20592 = a;
var G__20593 = b;
var G__20594 = c;
var G__20595 = d;
var G__20596 = e;
var G__20597 = f;
var G__20598 = g;
var G__20599 = h;
var G__20600 = i;
var G__20601 = j;
var G__20602 = k;
var G__20603 = l;
var G__20604 = m;
var G__20605 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20592,G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605) : self__.afn.call(null,G__20592,G__20593,G__20594,G__20595,G__20596,G__20597,G__20598,G__20599,G__20600,G__20601,G__20602,G__20603,G__20604,G__20605));
});
var G__20965__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20606 = a;
var G__20607 = b;
var G__20608 = c;
var G__20609 = d;
var G__20610 = e;
var G__20611 = f;
var G__20612 = g;
var G__20613 = h;
var G__20614 = i;
var G__20615 = j;
var G__20616 = k;
var G__20617 = l;
var G__20618 = m;
var G__20619 = n;
var G__20620 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620) : self__.afn.call(null,G__20606,G__20607,G__20608,G__20609,G__20610,G__20611,G__20612,G__20613,G__20614,G__20615,G__20616,G__20617,G__20618,G__20619,G__20620));
});
var G__20965__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20621 = a;
var G__20622 = b;
var G__20623 = c;
var G__20624 = d;
var G__20625 = e;
var G__20626 = f;
var G__20627 = g;
var G__20628 = h;
var G__20629 = i;
var G__20630 = j;
var G__20631 = k;
var G__20632 = l;
var G__20633 = m;
var G__20634 = n;
var G__20635 = o;
var G__20636 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20621,G__20622,G__20623,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634,G__20635,G__20636) : self__.afn.call(null,G__20621,G__20622,G__20623,G__20624,G__20625,G__20626,G__20627,G__20628,G__20629,G__20630,G__20631,G__20632,G__20633,G__20634,G__20635,G__20636));
});
var G__20965__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20637 = a;
var G__20638 = b;
var G__20639 = c;
var G__20640 = d;
var G__20641 = e;
var G__20642 = f;
var G__20643 = g;
var G__20644 = h;
var G__20645 = i;
var G__20646 = j;
var G__20647 = k;
var G__20648 = l;
var G__20649 = m;
var G__20650 = n;
var G__20651 = o;
var G__20652 = p;
var G__20653 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653) : self__.afn.call(null,G__20637,G__20638,G__20639,G__20640,G__20641,G__20642,G__20643,G__20644,G__20645,G__20646,G__20647,G__20648,G__20649,G__20650,G__20651,G__20652,G__20653));
});
var G__20965__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20654 = a;
var G__20655 = b;
var G__20656 = c;
var G__20657 = d;
var G__20658 = e;
var G__20659 = f;
var G__20660 = g;
var G__20661 = h;
var G__20662 = i;
var G__20663 = j;
var G__20664 = k;
var G__20665 = l;
var G__20666 = m;
var G__20667 = n;
var G__20668 = o;
var G__20669 = p;
var G__20670 = q;
var G__20671 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671) : self__.afn.call(null,G__20654,G__20655,G__20656,G__20657,G__20658,G__20659,G__20660,G__20661,G__20662,G__20663,G__20664,G__20665,G__20666,G__20667,G__20668,G__20669,G__20670,G__20671));
});
var G__20965__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20672 = a;
var G__20673 = b;
var G__20674 = c;
var G__20675 = d;
var G__20676 = e;
var G__20677 = f;
var G__20678 = g;
var G__20679 = h;
var G__20680 = i;
var G__20681 = j;
var G__20682 = k;
var G__20683 = l;
var G__20684 = m;
var G__20685 = n;
var G__20686 = o;
var G__20687 = p;
var G__20688 = q;
var G__20689 = r;
var G__20690 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689,G__20690) : self__.afn.call(null,G__20672,G__20673,G__20674,G__20675,G__20676,G__20677,G__20678,G__20679,G__20680,G__20681,G__20682,G__20683,G__20684,G__20685,G__20686,G__20687,G__20688,G__20689,G__20690));
});
var G__20965__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20691 = a;
var G__20692 = b;
var G__20693 = c;
var G__20694 = d;
var G__20695 = e;
var G__20696 = f;
var G__20697 = g;
var G__20698 = h;
var G__20699 = i;
var G__20700 = j;
var G__20701 = k;
var G__20702 = l;
var G__20703 = m;
var G__20704 = n;
var G__20705 = o;
var G__20706 = p;
var G__20707 = q;
var G__20708 = r;
var G__20709 = s;
var G__20710 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710) : self__.afn.call(null,G__20691,G__20692,G__20693,G__20694,G__20695,G__20696,G__20697,G__20698,G__20699,G__20700,G__20701,G__20702,G__20703,G__20704,G__20705,G__20706,G__20707,G__20708,G__20709,G__20710));
});
var G__20965__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__20711 = self__.afn;
var G__20712 = a;
var G__20713 = b;
var G__20714 = c;
var G__20715 = d;
var G__20716 = e;
var G__20717 = f;
var G__20718 = g;
var G__20719 = h;
var G__20720 = i;
var G__20721 = j;
var G__20722 = k;
var G__20723 = l;
var G__20724 = m;
var G__20725 = n;
var G__20726 = o;
var G__20727 = p;
var G__20728 = q;
var G__20729 = r;
var G__20730 = s;
var G__20731 = t;
var G__20732 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20711,G__20712,G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725,G__20726,G__20727,G__20728,G__20729,G__20730,G__20731,G__20732) : cljs.core.apply.call(null,G__20711,G__20712,G__20713,G__20714,G__20715,G__20716,G__20717,G__20718,G__20719,G__20720,G__20721,G__20722,G__20723,G__20724,G__20725,G__20726,G__20727,G__20728,G__20729,G__20730,G__20731,G__20732));
});
G__20965 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__20965__1.call(this,self__);
case 2:
return G__20965__2.call(this,self__,a);
case 3:
return G__20965__3.call(this,self__,a,b);
case 4:
return G__20965__4.call(this,self__,a,b,c);
case 5:
return G__20965__5.call(this,self__,a,b,c,d);
case 6:
return G__20965__6.call(this,self__,a,b,c,d,e);
case 7:
return G__20965__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__20965__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__20965__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__20965__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__20965__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__20965__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__20965__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__20965__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__20965__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__20965__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__20965__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__20965__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__20965__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__20965__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__20965__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__20965__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20965.cljs$core$IFn$_invoke$arity$1 = G__20965__1;
G__20965.cljs$core$IFn$_invoke$arity$2 = G__20965__2;
G__20965.cljs$core$IFn$_invoke$arity$3 = G__20965__3;
G__20965.cljs$core$IFn$_invoke$arity$4 = G__20965__4;
G__20965.cljs$core$IFn$_invoke$arity$5 = G__20965__5;
G__20965.cljs$core$IFn$_invoke$arity$6 = G__20965__6;
G__20965.cljs$core$IFn$_invoke$arity$7 = G__20965__7;
G__20965.cljs$core$IFn$_invoke$arity$8 = G__20965__8;
G__20965.cljs$core$IFn$_invoke$arity$9 = G__20965__9;
G__20965.cljs$core$IFn$_invoke$arity$10 = G__20965__10;
G__20965.cljs$core$IFn$_invoke$arity$11 = G__20965__11;
G__20965.cljs$core$IFn$_invoke$arity$12 = G__20965__12;
G__20965.cljs$core$IFn$_invoke$arity$13 = G__20965__13;
G__20965.cljs$core$IFn$_invoke$arity$14 = G__20965__14;
G__20965.cljs$core$IFn$_invoke$arity$15 = G__20965__15;
G__20965.cljs$core$IFn$_invoke$arity$16 = G__20965__16;
G__20965.cljs$core$IFn$_invoke$arity$17 = G__20965__17;
G__20965.cljs$core$IFn$_invoke$arity$18 = G__20965__18;
G__20965.cljs$core$IFn$_invoke$arity$19 = G__20965__19;
G__20965.cljs$core$IFn$_invoke$arity$20 = G__20965__20;
G__20965.cljs$core$IFn$_invoke$arity$21 = G__20965__21;
G__20965.cljs$core$IFn$_invoke$arity$22 = G__20965__22;
return G__20965;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args20500){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20500)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__20733 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__20733) : self__.afn.call(null,G__20733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__20734 = a;
var G__20735 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__20734,G__20735) : self__.afn.call(null,G__20734,G__20735));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__20736 = a;
var G__20737 = b;
var G__20738 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__20736,G__20737,G__20738) : self__.afn.call(null,G__20736,G__20737,G__20738));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__20739 = a;
var G__20740 = b;
var G__20741 = c;
var G__20742 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__20739,G__20740,G__20741,G__20742) : self__.afn.call(null,G__20739,G__20740,G__20741,G__20742));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__20743 = a;
var G__20744 = b;
var G__20745 = c;
var G__20746 = d;
var G__20747 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__20743,G__20744,G__20745,G__20746,G__20747) : self__.afn.call(null,G__20743,G__20744,G__20745,G__20746,G__20747));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__20748 = a;
var G__20749 = b;
var G__20750 = c;
var G__20751 = d;
var G__20752 = e;
var G__20753 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__20748,G__20749,G__20750,G__20751,G__20752,G__20753) : self__.afn.call(null,G__20748,G__20749,G__20750,G__20751,G__20752,G__20753));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__20754 = a;
var G__20755 = b;
var G__20756 = c;
var G__20757 = d;
var G__20758 = e;
var G__20759 = f;
var G__20760 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__20754,G__20755,G__20756,G__20757,G__20758,G__20759,G__20760) : self__.afn.call(null,G__20754,G__20755,G__20756,G__20757,G__20758,G__20759,G__20760));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__20761 = a;
var G__20762 = b;
var G__20763 = c;
var G__20764 = d;
var G__20765 = e;
var G__20766 = f;
var G__20767 = g;
var G__20768 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768) : self__.afn.call(null,G__20761,G__20762,G__20763,G__20764,G__20765,G__20766,G__20767,G__20768));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__20769 = a;
var G__20770 = b;
var G__20771 = c;
var G__20772 = d;
var G__20773 = e;
var G__20774 = f;
var G__20775 = g;
var G__20776 = h;
var G__20777 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__20769,G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776,G__20777) : self__.afn.call(null,G__20769,G__20770,G__20771,G__20772,G__20773,G__20774,G__20775,G__20776,G__20777));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__20778 = a;
var G__20779 = b;
var G__20780 = c;
var G__20781 = d;
var G__20782 = e;
var G__20783 = f;
var G__20784 = g;
var G__20785 = h;
var G__20786 = i;
var G__20787 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787) : self__.afn.call(null,G__20778,G__20779,G__20780,G__20781,G__20782,G__20783,G__20784,G__20785,G__20786,G__20787));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__20788 = a;
var G__20789 = b;
var G__20790 = c;
var G__20791 = d;
var G__20792 = e;
var G__20793 = f;
var G__20794 = g;
var G__20795 = h;
var G__20796 = i;
var G__20797 = j;
var G__20798 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__20788,G__20789,G__20790,G__20791,G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798) : self__.afn.call(null,G__20788,G__20789,G__20790,G__20791,G__20792,G__20793,G__20794,G__20795,G__20796,G__20797,G__20798));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__20799 = a;
var G__20800 = b;
var G__20801 = c;
var G__20802 = d;
var G__20803 = e;
var G__20804 = f;
var G__20805 = g;
var G__20806 = h;
var G__20807 = i;
var G__20808 = j;
var G__20809 = k;
var G__20810 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810) : self__.afn.call(null,G__20799,G__20800,G__20801,G__20802,G__20803,G__20804,G__20805,G__20806,G__20807,G__20808,G__20809,G__20810));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__20811 = a;
var G__20812 = b;
var G__20813 = c;
var G__20814 = d;
var G__20815 = e;
var G__20816 = f;
var G__20817 = g;
var G__20818 = h;
var G__20819 = i;
var G__20820 = j;
var G__20821 = k;
var G__20822 = l;
var G__20823 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823) : self__.afn.call(null,G__20811,G__20812,G__20813,G__20814,G__20815,G__20816,G__20817,G__20818,G__20819,G__20820,G__20821,G__20822,G__20823));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__20824 = a;
var G__20825 = b;
var G__20826 = c;
var G__20827 = d;
var G__20828 = e;
var G__20829 = f;
var G__20830 = g;
var G__20831 = h;
var G__20832 = i;
var G__20833 = j;
var G__20834 = k;
var G__20835 = l;
var G__20836 = m;
var G__20837 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837) : self__.afn.call(null,G__20824,G__20825,G__20826,G__20827,G__20828,G__20829,G__20830,G__20831,G__20832,G__20833,G__20834,G__20835,G__20836,G__20837));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__20838 = a;
var G__20839 = b;
var G__20840 = c;
var G__20841 = d;
var G__20842 = e;
var G__20843 = f;
var G__20844 = g;
var G__20845 = h;
var G__20846 = i;
var G__20847 = j;
var G__20848 = k;
var G__20849 = l;
var G__20850 = m;
var G__20851 = n;
var G__20852 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852) : self__.afn.call(null,G__20838,G__20839,G__20840,G__20841,G__20842,G__20843,G__20844,G__20845,G__20846,G__20847,G__20848,G__20849,G__20850,G__20851,G__20852));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__20853 = a;
var G__20854 = b;
var G__20855 = c;
var G__20856 = d;
var G__20857 = e;
var G__20858 = f;
var G__20859 = g;
var G__20860 = h;
var G__20861 = i;
var G__20862 = j;
var G__20863 = k;
var G__20864 = l;
var G__20865 = m;
var G__20866 = n;
var G__20867 = o;
var G__20868 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868) : self__.afn.call(null,G__20853,G__20854,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860,G__20861,G__20862,G__20863,G__20864,G__20865,G__20866,G__20867,G__20868));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__20869 = a;
var G__20870 = b;
var G__20871 = c;
var G__20872 = d;
var G__20873 = e;
var G__20874 = f;
var G__20875 = g;
var G__20876 = h;
var G__20877 = i;
var G__20878 = j;
var G__20879 = k;
var G__20880 = l;
var G__20881 = m;
var G__20882 = n;
var G__20883 = o;
var G__20884 = p;
var G__20885 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885) : self__.afn.call(null,G__20869,G__20870,G__20871,G__20872,G__20873,G__20874,G__20875,G__20876,G__20877,G__20878,G__20879,G__20880,G__20881,G__20882,G__20883,G__20884,G__20885));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__20886 = a;
var G__20887 = b;
var G__20888 = c;
var G__20889 = d;
var G__20890 = e;
var G__20891 = f;
var G__20892 = g;
var G__20893 = h;
var G__20894 = i;
var G__20895 = j;
var G__20896 = k;
var G__20897 = l;
var G__20898 = m;
var G__20899 = n;
var G__20900 = o;
var G__20901 = p;
var G__20902 = q;
var G__20903 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902,G__20903) : self__.afn.call(null,G__20886,G__20887,G__20888,G__20889,G__20890,G__20891,G__20892,G__20893,G__20894,G__20895,G__20896,G__20897,G__20898,G__20899,G__20900,G__20901,G__20902,G__20903));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__20904 = a;
var G__20905 = b;
var G__20906 = c;
var G__20907 = d;
var G__20908 = e;
var G__20909 = f;
var G__20910 = g;
var G__20911 = h;
var G__20912 = i;
var G__20913 = j;
var G__20914 = k;
var G__20915 = l;
var G__20916 = m;
var G__20917 = n;
var G__20918 = o;
var G__20919 = p;
var G__20920 = q;
var G__20921 = r;
var G__20922 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922) : self__.afn.call(null,G__20904,G__20905,G__20906,G__20907,G__20908,G__20909,G__20910,G__20911,G__20912,G__20913,G__20914,G__20915,G__20916,G__20917,G__20918,G__20919,G__20920,G__20921,G__20922));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__20923 = a;
var G__20924 = b;
var G__20925 = c;
var G__20926 = d;
var G__20927 = e;
var G__20928 = f;
var G__20929 = g;
var G__20930 = h;
var G__20931 = i;
var G__20932 = j;
var G__20933 = k;
var G__20934 = l;
var G__20935 = m;
var G__20936 = n;
var G__20937 = o;
var G__20938 = p;
var G__20939 = q;
var G__20940 = r;
var G__20941 = s;
var G__20942 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942) : self__.afn.call(null,G__20923,G__20924,G__20925,G__20926,G__20927,G__20928,G__20929,G__20930,G__20931,G__20932,G__20933,G__20934,G__20935,G__20936,G__20937,G__20938,G__20939,G__20940,G__20941,G__20942));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__20943 = self__.afn;
var G__20944 = a;
var G__20945 = b;
var G__20946 = c;
var G__20947 = d;
var G__20948 = e;
var G__20949 = f;
var G__20950 = g;
var G__20951 = h;
var G__20952 = i;
var G__20953 = j;
var G__20954 = k;
var G__20955 = l;
var G__20956 = m;
var G__20957 = n;
var G__20958 = o;
var G__20959 = p;
var G__20960 = q;
var G__20961 = r;
var G__20962 = s;
var G__20963 = t;
var G__20964 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964) : cljs.core.apply.call(null,G__20943,G__20944,G__20945,G__20946,G__20947,G__20948,G__20949,G__20950,G__20951,G__20952,G__20953,G__20954,G__20955,G__20956,G__20957,G__20958,G__20959,G__20960,G__20961,G__20962,G__20963,G__20964));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__20969 = o;
if(G__20969){
var bit__13324__auto__ = (G__20969.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__13324__auto__) || (G__20969.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__20969.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20969);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__20969);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__12631__auto__ = !((o == null));
if(and__12631__auto__){
var G__20973 = o;
if(G__20973){
var bit__13324__auto__ = (G__20973.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13324__auto__) || (G__20973.cljs$core$IMeta$)){
return true;
} else {
if((!G__20973.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20973);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__20973);
}
} else {
return and__12631__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__20976__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__20977 = ret;
var G__20978 = cljs.core.first(ks);
var G__20979 = cljs.core.next(ks);
coll = G__20977;
k = G__20978;
ks = G__20979;
continue;
} else {
return ret;
}
}
break;
}
};
var G__20976 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20980__i = 0, G__20980__a = new Array(arguments.length -  2);
while (G__20980__i < G__20980__a.length) {G__20980__a[G__20980__i] = arguments[G__20980__i + 2]; ++G__20980__i;}
  ks = new cljs.core.IndexedSeq(G__20980__a,0);
} 
return G__20976__delegate.call(this,coll,k,ks);};
G__20976.cljs$lang$maxFixedArity = 2;
G__20976.cljs$lang$applyTo = (function (arglist__20981){
var coll = cljs.core.first(arglist__20981);
arglist__20981 = cljs.core.next(arglist__20981);
var k = cljs.core.first(arglist__20981);
var ks = cljs.core.rest(arglist__20981);
return G__20976__delegate(coll,k,ks);
});
G__20976.cljs$core$IFn$_invoke$arity$variadic = G__20976__delegate;
return G__20976;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__20982 = null;
if (arguments.length > 2) {
var G__20983__i = 0, G__20983__a = new Array(arguments.length -  2);
while (G__20983__i < G__20983__a.length) {G__20983__a[G__20983__i] = arguments[G__20983__i + 2]; ++G__20983__i;}
G__20982 = new cljs.core.IndexedSeq(G__20983__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__20982);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20985 = x;
if(G__20985){
var bit__13324__auto__ = (G__20985.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__13324__auto__) || (G__20985.cljs$core$ICollection$)){
return true;
} else {
if((!G__20985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__20985);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20987 = x;
if(G__20987){
var bit__13324__auto__ = (G__20987.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__13324__auto__) || (G__20987.cljs$core$ISet$)){
return true;
} else {
if((!G__20987.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20987);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__20987);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__20989 = x;
if(G__20989){
var bit__13324__auto__ = (G__20989.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__13324__auto__) || (G__20989.cljs$core$IAssociative$)){
return true;
} else {
if((!G__20989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__20989);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__20991 = x;
if(G__20991){
var bit__13324__auto__ = (G__20991.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__13324__auto__) || (G__20991.cljs$core$ISequential$)){
return true;
} else {
if((!G__20991.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20991);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__20991);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__20993 = x;
if(G__20993){
var bit__13324__auto__ = (G__20993.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__13324__auto__) || (G__20993.cljs$core$ISorted$)){
return true;
} else {
if((!G__20993.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20993);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__20993);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__20995 = x;
if(G__20995){
var bit__13324__auto__ = (G__20995.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13324__auto__) || (G__20995.cljs$core$IReduce$)){
return true;
} else {
if((!G__20995.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20995);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__20995);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__20997 = x;
if(G__20997){
var bit__13324__auto__ = (G__20997.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13324__auto__) || (G__20997.cljs$core$IMap$)){
return true;
} else {
if((!G__20997.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__20997);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__20999 = x;
if(G__20999){
var bit__13324__auto__ = (G__20999.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__13324__auto__) || (G__20999.cljs$core$IVector$)){
return true;
} else {
if((!G__20999.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20999);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__20999);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__21001 = x;
if(G__21001){
var bit__13317__auto__ = (G__21001.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13317__auto__) || (G__21001.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj21007 = {};
return obj21007;
});
var js_obj__1 = (function() { 
var G__21010__delegate = function (keyvals){
var G__21008 = goog.object.create;
var G__21009 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__21008,G__21009) : cljs.core.apply.call(null,G__21008,G__21009));
};
var G__21010 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__21011__i = 0, G__21011__a = new Array(arguments.length -  0);
while (G__21011__i < G__21011__a.length) {G__21011__a[G__21011__i] = arguments[G__21011__i + 0]; ++G__21011__i;}
  keyvals = new cljs.core.IndexedSeq(G__21011__a,0);
} 
return G__21010__delegate.call(this,keyvals);};
G__21010.cljs$lang$maxFixedArity = 0;
G__21010.cljs$lang$applyTo = (function (arglist__21012){
var keyvals = cljs.core.seq(arglist__21012);
return G__21010__delegate(keyvals);
});
G__21010.cljs$core$IFn$_invoke$arity$variadic = G__21010__delegate;
return G__21010;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__21013 = null;
if (arguments.length > 0) {
var G__21014__i = 0, G__21014__a = new Array(arguments.length -  0);
while (G__21014__i < G__21014__a.length) {G__21014__a[G__21014__i] = arguments[G__21014__i + 0]; ++G__21014__i;}
G__21013 = new cljs.core.IndexedSeq(G__21014__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__21013);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__21017_21019 = obj;
var G__21018_21020 = ((function (G__21017_21019,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__21017_21019,keys))
;
goog.object.forEach(G__21017_21019,G__21018_21020);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21021 = (i__$1 + (1));
var G__21022 = (j__$1 + (1));
var G__21023 = (len__$1 - (1));
i__$1 = G__21021;
j__$1 = G__21022;
len__$1 = G__21023;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__21024 = (i__$1 - (1));
var G__21025 = (j__$1 - (1));
var G__21026 = (len__$1 - (1));
i__$1 = G__21024;
j__$1 = G__21025;
len__$1 = G__21026;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj21028 = {};
return obj21028;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__21030 = s;
if(G__21030){
var bit__13324__auto__ = (G__21030.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13324__auto__) || (G__21030.cljs$core$ISeq$)){
return true;
} else {
if((!G__21030.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21030);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21030);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__21032 = s;
if(G__21032){
var bit__13324__auto__ = (G__21032.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13324__auto__) || (G__21032.cljs$core$ISeqable$)){
return true;
} else {
if((!G__21032.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21032);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__21032);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__12643__auto__ = cljs.core.fn_QMARK_(f);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var G__21036 = f;
if(G__21036){
var bit__13324__auto__ = (G__21036.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__13324__auto__) || (G__21036.cljs$core$IFn$)){
return true;
} else {
if((!G__21036.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21036);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__21036);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__21049 = n;
return isNaN(G__21049);
})())) && (!((n === Infinity))) && (((function (){var G__21050 = n;
return parseFloat(G__21050);
})() === (function (){var G__21051 = n;
var G__21052 = (10);
return parseInt(G__21051,G__21052);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__21053__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__21054 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__21055 = etc;
s = G__21054;
xs = G__21055;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__21053 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21056__i = 0, G__21056__a = new Array(arguments.length -  2);
while (G__21056__i < G__21056__a.length) {G__21056__a[G__21056__i] = arguments[G__21056__i + 2]; ++G__21056__i;}
  more = new cljs.core.IndexedSeq(G__21056__a,0);
} 
return G__21053__delegate.call(this,x,y,more);};
G__21053.cljs$lang$maxFixedArity = 2;
G__21053.cljs$lang$applyTo = (function (arglist__21057){
var x = cljs.core.first(arglist__21057);
arglist__21057 = cljs.core.next(arglist__21057);
var y = cljs.core.first(arglist__21057);
var more = cljs.core.rest(arglist__21057);
return G__21053__delegate(x,y,more);
});
G__21053.cljs$core$IFn$_invoke$arity$variadic = G__21053__delegate;
return G__21053;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__21058 = null;
if (arguments.length > 2) {
var G__21059__i = 0, G__21059__a = new Array(arguments.length -  2);
while (G__21059__i < G__21059__a.length) {G__21059__a[G__21059__i] = arguments[G__21059__i + 2]; ++G__21059__i;}
G__21058 = new cljs.core.IndexedSeq(G__21059__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21058);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__21063 = x;
if(G__21063){
var bit__13317__auto__ = (G__21063.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13317__auto__) || (G__21063.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__21064 = x;
var G__21065 = y;
return goog.array.defaultCompare(G__21064,G__21065);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__21070 = xs;
var G__21071 = ys;
var G__21072 = len;
var G__21073 = (n + (1));
xs = G__21070;
ys = G__21071;
len = G__21072;
n = G__21073;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__21078 = x;
var G__21079 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21078,G__21079) : f.call(null,G__21078,G__21079));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__21080 = y;
var G__21081 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21080,G__21081) : f.call(null,G__21080,G__21081));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__21087 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21087) : cljs.core.to_array.call(null,G__21087));
})();
var G__21088_21090 = a;
var G__21089_21091 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__21088_21090,G__21089_21091);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__21097 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21097) : keyfn.call(null,G__21097));
})(),(function (){var G__21098 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21098) : keyfn.call(null,G__21098));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__21104 = f;
var G__21105 = cljs.core.first(s);
var G__21106 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21104,G__21105,G__21106) : cljs.core.reduce.call(null,G__21104,G__21105,G__21106));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__21107 = val__$1;
var G__21108 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21107,G__21108) : f.call(null,G__21107,G__21108));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21109 = nval;
var G__21110 = cljs.core.next(coll__$1);
val__$1 = G__21109;
coll__$1 = G__21110;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__21114 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__21114) : cljs.core.to_array.call(null,G__21114));
})();
var G__21115_21117 = a;
goog.array.shuffle(G__21115_21117);

var G__21116 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__21116) : cljs.core.vec.call(null,G__21116));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__21120 = coll;
if(G__21120){
var bit__13317__auto__ = (G__21120.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13317__auto__) || (G__21120.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__21121 = coll;
if(G__21121){
var bit__13317__auto__ = (G__21121.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13317__auto__) || (G__21121.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__21130 = null;
var G__21130__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__21130__1 = (function (x){
var G__21127 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__21127) : cf.call(null,G__21127));
});
var G__21130__2 = (function (x,y){
var G__21128 = x;
var G__21129 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21128,G__21129) : f.call(null,G__21128,G__21129));
});
G__21130 = function(x,y){
switch(arguments.length){
case 0:
return G__21130__0.call(this);
case 1:
return G__21130__1.call(this,x);
case 2:
return G__21130__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21130.cljs$core$IFn$_invoke$arity$0 = G__21130__0;
G__21130.cljs$core$IFn$_invoke$arity$1 = G__21130__1;
G__21130.cljs$core$IFn$_invoke$arity$2 = G__21130__2;
return G__21130;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__21137 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21137) : xform.call(null,G__21137));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__21138 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__21138) : f__$1.call(null,G__21138));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__21139__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__21139 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21140__i = 0, G__21140__a = new Array(arguments.length -  2);
while (G__21140__i < G__21140__a.length) {G__21140__a[G__21140__i] = arguments[G__21140__i + 2]; ++G__21140__i;}
  more = new cljs.core.IndexedSeq(G__21140__a,0);
} 
return G__21139__delegate.call(this,x,y,more);};
G__21139.cljs$lang$maxFixedArity = 2;
G__21139.cljs$lang$applyTo = (function (arglist__21141){
var x = cljs.core.first(arglist__21141);
arglist__21141 = cljs.core.next(arglist__21141);
var y = cljs.core.first(arglist__21141);
var more = cljs.core.rest(arglist__21141);
return G__21139__delegate(x,y,more);
});
G__21139.cljs$core$IFn$_invoke$arity$variadic = G__21139__delegate;
return G__21139;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__21142 = null;
if (arguments.length > 2) {
var G__21143__i = 0, G__21143__a = new Array(arguments.length -  2);
while (G__21143__i < G__21143__a.length) {G__21143__a[G__21143__i] = arguments[G__21143__i + 2]; ++G__21143__i;}
G__21142 = new cljs.core.IndexedSeq(G__21143__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__21144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__21144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21145__i = 0, G__21145__a = new Array(arguments.length -  2);
while (G__21145__i < G__21145__a.length) {G__21145__a[G__21145__i] = arguments[G__21145__i + 2]; ++G__21145__i;}
  more = new cljs.core.IndexedSeq(G__21145__a,0);
} 
return G__21144__delegate.call(this,x,y,more);};
G__21144.cljs$lang$maxFixedArity = 2;
G__21144.cljs$lang$applyTo = (function (arglist__21146){
var x = cljs.core.first(arglist__21146);
arglist__21146 = cljs.core.next(arglist__21146);
var y = cljs.core.first(arglist__21146);
var more = cljs.core.rest(arglist__21146);
return G__21144__delegate(x,y,more);
});
G__21144.cljs$core$IFn$_invoke$arity$variadic = G__21144__delegate;
return G__21144;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__21147 = null;
if (arguments.length > 2) {
var G__21148__i = 0, G__21148__a = new Array(arguments.length -  2);
while (G__21148__i < G__21148__a.length) {G__21148__a[G__21148__i] = arguments[G__21148__i + 2]; ++G__21148__i;}
G__21147 = new cljs.core.IndexedSeq(G__21148__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__21149__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__21149 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21150__i = 0, G__21150__a = new Array(arguments.length -  2);
while (G__21150__i < G__21150__a.length) {G__21150__a[G__21150__i] = arguments[G__21150__i + 2]; ++G__21150__i;}
  more = new cljs.core.IndexedSeq(G__21150__a,0);
} 
return G__21149__delegate.call(this,x,y,more);};
G__21149.cljs$lang$maxFixedArity = 2;
G__21149.cljs$lang$applyTo = (function (arglist__21151){
var x = cljs.core.first(arglist__21151);
arglist__21151 = cljs.core.next(arglist__21151);
var y = cljs.core.first(arglist__21151);
var more = cljs.core.rest(arglist__21151);
return G__21149__delegate(x,y,more);
});
G__21149.cljs$core$IFn$_invoke$arity$variadic = G__21149__delegate;
return G__21149;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__21152 = null;
if (arguments.length > 2) {
var G__21153__i = 0, G__21153__a = new Array(arguments.length -  2);
while (G__21153__i < G__21153__a.length) {G__21153__a[G__21153__i] = arguments[G__21153__i + 2]; ++G__21153__i;}
G__21152 = new cljs.core.IndexedSeq(G__21153__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21152);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__21158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21159__i = 0, G__21159__a = new Array(arguments.length -  2);
while (G__21159__i < G__21159__a.length) {G__21159__a[G__21159__i] = arguments[G__21159__i + 2]; ++G__21159__i;}
  more = new cljs.core.IndexedSeq(G__21159__a,0);
} 
return G__21158__delegate.call(this,x,y,more);};
G__21158.cljs$lang$maxFixedArity = 2;
G__21158.cljs$lang$applyTo = (function (arglist__21160){
var x = cljs.core.first(arglist__21160);
arglist__21160 = cljs.core.next(arglist__21160);
var y = cljs.core.first(arglist__21160);
var more = cljs.core.rest(arglist__21160);
return G__21158__delegate(x,y,more);
});
G__21158.cljs$core$IFn$_invoke$arity$variadic = G__21158__delegate;
return G__21158;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__21161 = null;
if (arguments.length > 2) {
var G__21162__i = 0, G__21162__a = new Array(arguments.length -  2);
while (G__21162__i < G__21162__a.length) {G__21162__a[G__21162__i] = arguments[G__21162__i + 2]; ++G__21162__i;}
G__21161 = new cljs.core.IndexedSeq(G__21162__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__21163__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__21164 = y;
var G__21165 = cljs.core.first(more);
var G__21166 = cljs.core.next(more);
x = G__21164;
y = G__21165;
more = G__21166;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21167__i = 0, G__21167__a = new Array(arguments.length -  2);
while (G__21167__i < G__21167__a.length) {G__21167__a[G__21167__i] = arguments[G__21167__i + 2]; ++G__21167__i;}
  more = new cljs.core.IndexedSeq(G__21167__a,0);
} 
return G__21163__delegate.call(this,x,y,more);};
G__21163.cljs$lang$maxFixedArity = 2;
G__21163.cljs$lang$applyTo = (function (arglist__21168){
var x = cljs.core.first(arglist__21168);
arglist__21168 = cljs.core.next(arglist__21168);
var y = cljs.core.first(arglist__21168);
var more = cljs.core.rest(arglist__21168);
return G__21163__delegate(x,y,more);
});
G__21163.cljs$core$IFn$_invoke$arity$variadic = G__21163__delegate;
return G__21163;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__21169 = null;
if (arguments.length > 2) {
var G__21170__i = 0, G__21170__a = new Array(arguments.length -  2);
while (G__21170__i < G__21170__a.length) {G__21170__a[G__21170__i] = arguments[G__21170__i + 2]; ++G__21170__i;}
G__21169 = new cljs.core.IndexedSeq(G__21170__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__21171__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__21172 = y;
var G__21173 = cljs.core.first(more);
var G__21174 = cljs.core.next(more);
x = G__21172;
y = G__21173;
more = G__21174;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21175__i = 0, G__21175__a = new Array(arguments.length -  2);
while (G__21175__i < G__21175__a.length) {G__21175__a[G__21175__i] = arguments[G__21175__i + 2]; ++G__21175__i;}
  more = new cljs.core.IndexedSeq(G__21175__a,0);
} 
return G__21171__delegate.call(this,x,y,more);};
G__21171.cljs$lang$maxFixedArity = 2;
G__21171.cljs$lang$applyTo = (function (arglist__21176){
var x = cljs.core.first(arglist__21176);
arglist__21176 = cljs.core.next(arglist__21176);
var y = cljs.core.first(arglist__21176);
var more = cljs.core.rest(arglist__21176);
return G__21171__delegate(x,y,more);
});
G__21171.cljs$core$IFn$_invoke$arity$variadic = G__21171__delegate;
return G__21171;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__21177 = null;
if (arguments.length > 2) {
var G__21178__i = 0, G__21178__a = new Array(arguments.length -  2);
while (G__21178__i < G__21178__a.length) {G__21178__a[G__21178__i] = arguments[G__21178__i + 2]; ++G__21178__i;}
G__21177 = new cljs.core.IndexedSeq(G__21178__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__21179__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__21180 = y;
var G__21181 = cljs.core.first(more);
var G__21182 = cljs.core.next(more);
x = G__21180;
y = G__21181;
more = G__21182;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21179 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21183__i = 0, G__21183__a = new Array(arguments.length -  2);
while (G__21183__i < G__21183__a.length) {G__21183__a[G__21183__i] = arguments[G__21183__i + 2]; ++G__21183__i;}
  more = new cljs.core.IndexedSeq(G__21183__a,0);
} 
return G__21179__delegate.call(this,x,y,more);};
G__21179.cljs$lang$maxFixedArity = 2;
G__21179.cljs$lang$applyTo = (function (arglist__21184){
var x = cljs.core.first(arglist__21184);
arglist__21184 = cljs.core.next(arglist__21184);
var y = cljs.core.first(arglist__21184);
var more = cljs.core.rest(arglist__21184);
return G__21179__delegate(x,y,more);
});
G__21179.cljs$core$IFn$_invoke$arity$variadic = G__21179__delegate;
return G__21179;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__21185 = null;
if (arguments.length > 2) {
var G__21186__i = 0, G__21186__a = new Array(arguments.length -  2);
while (G__21186__i < G__21186__a.length) {G__21186__a[G__21186__i] = arguments[G__21186__i + 2]; ++G__21186__i;}
G__21185 = new cljs.core.IndexedSeq(G__21186__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__21187__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__21188 = y;
var G__21189 = cljs.core.first(more);
var G__21190 = cljs.core.next(more);
x = G__21188;
y = G__21189;
more = G__21190;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21187 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21191__i = 0, G__21191__a = new Array(arguments.length -  2);
while (G__21191__i < G__21191__a.length) {G__21191__a[G__21191__i] = arguments[G__21191__i + 2]; ++G__21191__i;}
  more = new cljs.core.IndexedSeq(G__21191__a,0);
} 
return G__21187__delegate.call(this,x,y,more);};
G__21187.cljs$lang$maxFixedArity = 2;
G__21187.cljs$lang$applyTo = (function (arglist__21192){
var x = cljs.core.first(arglist__21192);
arglist__21192 = cljs.core.next(arglist__21192);
var y = cljs.core.first(arglist__21192);
var more = cljs.core.rest(arglist__21192);
return G__21187__delegate(x,y,more);
});
G__21187.cljs$core$IFn$_invoke$arity$variadic = G__21187__delegate;
return G__21187;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__21193 = null;
if (arguments.length > 2) {
var G__21194__i = 0, G__21194__a = new Array(arguments.length -  2);
while (G__21194__i < G__21194__a.length) {G__21194__a[G__21194__i] = arguments[G__21194__i + 2]; ++G__21194__i;}
G__21193 = new cljs.core.IndexedSeq(G__21194__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__12960__auto__ = x;
var y__12961__auto__ = y;
return ((x__12960__auto__ > y__12961__auto__) ? x__12960__auto__ : y__12961__auto__);
});
var max__3 = (function() { 
var G__21195__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__12960__auto__ = x;
var y__12961__auto__ = y;
return ((x__12960__auto__ > y__12961__auto__) ? x__12960__auto__ : y__12961__auto__);
})(),more);
};
var G__21195 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21196__i = 0, G__21196__a = new Array(arguments.length -  2);
while (G__21196__i < G__21196__a.length) {G__21196__a[G__21196__i] = arguments[G__21196__i + 2]; ++G__21196__i;}
  more = new cljs.core.IndexedSeq(G__21196__a,0);
} 
return G__21195__delegate.call(this,x,y,more);};
G__21195.cljs$lang$maxFixedArity = 2;
G__21195.cljs$lang$applyTo = (function (arglist__21197){
var x = cljs.core.first(arglist__21197);
arglist__21197 = cljs.core.next(arglist__21197);
var y = cljs.core.first(arglist__21197);
var more = cljs.core.rest(arglist__21197);
return G__21195__delegate(x,y,more);
});
G__21195.cljs$core$IFn$_invoke$arity$variadic = G__21195__delegate;
return G__21195;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__21198 = null;
if (arguments.length > 2) {
var G__21199__i = 0, G__21199__a = new Array(arguments.length -  2);
while (G__21199__i < G__21199__a.length) {G__21199__a[G__21199__i] = arguments[G__21199__i + 2]; ++G__21199__i;}
G__21198 = new cljs.core.IndexedSeq(G__21199__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__12967__auto__ = x;
var y__12968__auto__ = y;
return ((x__12967__auto__ < y__12968__auto__) ? x__12967__auto__ : y__12968__auto__);
});
var min__3 = (function() { 
var G__21200__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__12967__auto__ = x;
var y__12968__auto__ = y;
return ((x__12967__auto__ < y__12968__auto__) ? x__12967__auto__ : y__12968__auto__);
})(),more);
};
var G__21200 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21201__i = 0, G__21201__a = new Array(arguments.length -  2);
while (G__21201__i < G__21201__a.length) {G__21201__a[G__21201__i] = arguments[G__21201__i + 2]; ++G__21201__i;}
  more = new cljs.core.IndexedSeq(G__21201__a,0);
} 
return G__21200__delegate.call(this,x,y,more);};
G__21200.cljs$lang$maxFixedArity = 2;
G__21200.cljs$lang$applyTo = (function (arglist__21202){
var x = cljs.core.first(arglist__21202);
arglist__21202 = cljs.core.next(arglist__21202);
var y = cljs.core.first(arglist__21202);
var more = cljs.core.rest(arglist__21202);
return G__21200__delegate(x,y,more);
});
G__21200.cljs$core$IFn$_invoke$arity$variadic = G__21200__delegate;
return G__21200;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__21203 = null;
if (arguments.length > 2) {
var G__21204__i = 0, G__21204__a = new Array(arguments.length -  2);
while (G__21204__i < G__21204__a.length) {G__21204__a[G__21204__i] = arguments[G__21204__i + 2]; ++G__21204__i;}
G__21203 = new cljs.core.IndexedSeq(G__21204__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__21205__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__21205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21206__i = 0, G__21206__a = new Array(arguments.length -  2);
while (G__21206__i < G__21206__a.length) {G__21206__a[G__21206__i] = arguments[G__21206__i + 2]; ++G__21206__i;}
  more = new cljs.core.IndexedSeq(G__21206__a,0);
} 
return G__21205__delegate.call(this,x,y,more);};
G__21205.cljs$lang$maxFixedArity = 2;
G__21205.cljs$lang$applyTo = (function (arglist__21207){
var x = cljs.core.first(arglist__21207);
arglist__21207 = cljs.core.next(arglist__21207);
var y = cljs.core.first(arglist__21207);
var more = cljs.core.rest(arglist__21207);
return G__21205__delegate(x,y,more);
});
G__21205.cljs$core$IFn$_invoke$arity$variadic = G__21205__delegate;
return G__21205;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__21208 = null;
if (arguments.length > 2) {
var G__21209__i = 0, G__21209__a = new Array(arguments.length -  2);
while (G__21209__i < G__21209__a.length) {G__21209__a[G__21209__i] = arguments[G__21209__i + 2]; ++G__21209__i;}
G__21208 = new cljs.core.IndexedSeq(G__21209__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__21210__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__21210 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21211__i = 0, G__21211__a = new Array(arguments.length -  2);
while (G__21211__i < G__21211__a.length) {G__21211__a[G__21211__i] = arguments[G__21211__i + 2]; ++G__21211__i;}
  more = new cljs.core.IndexedSeq(G__21211__a,0);
} 
return G__21210__delegate.call(this,x,y,more);};
G__21210.cljs$lang$maxFixedArity = 2;
G__21210.cljs$lang$applyTo = (function (arglist__21212){
var x = cljs.core.first(arglist__21212);
arglist__21212 = cljs.core.next(arglist__21212);
var y = cljs.core.first(arglist__21212);
var more = cljs.core.rest(arglist__21212);
return G__21210__delegate(x,y,more);
});
G__21210.cljs$core$IFn$_invoke$arity$variadic = G__21210__delegate;
return G__21210;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__21213 = null;
if (arguments.length > 2) {
var G__21214__i = 0, G__21214__a = new Array(arguments.length -  2);
while (G__21214__i < G__21214__a.length) {G__21214__a[G__21214__i] = arguments[G__21214__i + 2]; ++G__21214__i;}
G__21213 = new cljs.core.IndexedSeq(G__21214__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__21219__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__21219 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21220__i = 0, G__21220__a = new Array(arguments.length -  2);
while (G__21220__i < G__21220__a.length) {G__21220__a[G__21220__i] = arguments[G__21220__i + 2]; ++G__21220__i;}
  more = new cljs.core.IndexedSeq(G__21220__a,0);
} 
return G__21219__delegate.call(this,x,y,more);};
G__21219.cljs$lang$maxFixedArity = 2;
G__21219.cljs$lang$applyTo = (function (arglist__21221){
var x = cljs.core.first(arglist__21221);
arglist__21221 = cljs.core.next(arglist__21221);
var y = cljs.core.first(arglist__21221);
var more = cljs.core.rest(arglist__21221);
return G__21219__delegate(x,y,more);
});
G__21219.cljs$core$IFn$_invoke$arity$variadic = G__21219__delegate;
return G__21219;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__21222 = null;
if (arguments.length > 2) {
var G__21223__i = 0, G__21223__a = new Array(arguments.length -  2);
while (G__21223__i < G__21223__a.length) {G__21223__a[G__21223__i] = arguments[G__21223__i + 2]; ++G__21223__i;}
G__21222 = new cljs.core.IndexedSeq(G__21223__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__21224__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__21224 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21225__i = 0, G__21225__a = new Array(arguments.length -  2);
while (G__21225__i < G__21225__a.length) {G__21225__a[G__21225__i] = arguments[G__21225__i + 2]; ++G__21225__i;}
  more = new cljs.core.IndexedSeq(G__21225__a,0);
} 
return G__21224__delegate.call(this,x,y,more);};
G__21224.cljs$lang$maxFixedArity = 2;
G__21224.cljs$lang$applyTo = (function (arglist__21226){
var x = cljs.core.first(arglist__21226);
arglist__21226 = cljs.core.next(arglist__21226);
var y = cljs.core.first(arglist__21226);
var more = cljs.core.rest(arglist__21226);
return G__21224__delegate(x,y,more);
});
G__21224.cljs$core$IFn$_invoke$arity$variadic = G__21224__delegate;
return G__21224;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__21227 = null;
if (arguments.length > 2) {
var G__21228__i = 0, G__21228__a = new Array(arguments.length -  2);
while (G__21228__i < G__21228__a.length) {G__21228__a[G__21228__i] = arguments[G__21228__i + 2]; ++G__21228__i;}
G__21227 = new cljs.core.IndexedSeq(G__21228__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__21229__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__21229 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21230__i = 0, G__21230__a = new Array(arguments.length -  2);
while (G__21230__i < G__21230__a.length) {G__21230__a[G__21230__i] = arguments[G__21230__i + 2]; ++G__21230__i;}
  more = new cljs.core.IndexedSeq(G__21230__a,0);
} 
return G__21229__delegate.call(this,x,y,more);};
G__21229.cljs$lang$maxFixedArity = 2;
G__21229.cljs$lang$applyTo = (function (arglist__21231){
var x = cljs.core.first(arglist__21231);
arglist__21231 = cljs.core.next(arglist__21231);
var y = cljs.core.first(arglist__21231);
var more = cljs.core.rest(arglist__21231);
return G__21229__delegate(x,y,more);
});
G__21229.cljs$core$IFn$_invoke$arity$variadic = G__21229__delegate;
return G__21229;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__21232 = null;
if (arguments.length > 2) {
var G__21233__i = 0, G__21233__a = new Array(arguments.length -  2);
while (G__21233__i < G__21233__a.length) {G__21233__a[G__21233__i] = arguments[G__21233__i + 2]; ++G__21233__i;}
G__21232 = new cljs.core.IndexedSeq(G__21233__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21232);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__21236 = x;
var G__21237 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__21236,G__21237) : cljs.core.mod.call(null,G__21236,G__21237));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__21238__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__21238 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21239__i = 0, G__21239__a = new Array(arguments.length -  2);
while (G__21239__i < G__21239__a.length) {G__21239__a[G__21239__i] = arguments[G__21239__i + 2]; ++G__21239__i;}
  more = new cljs.core.IndexedSeq(G__21239__a,0);
} 
return G__21238__delegate.call(this,x,y,more);};
G__21238.cljs$lang$maxFixedArity = 2;
G__21238.cljs$lang$applyTo = (function (arglist__21240){
var x = cljs.core.first(arglist__21240);
arglist__21240 = cljs.core.next(arglist__21240);
var y = cljs.core.first(arglist__21240);
var more = cljs.core.rest(arglist__21240);
return G__21238__delegate(x,y,more);
});
G__21238.cljs$core$IFn$_invoke$arity$variadic = G__21238__delegate;
return G__21238;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__21241 = null;
if (arguments.length > 2) {
var G__21242__i = 0, G__21242__a = new Array(arguments.length -  2);
while (G__21242__i < G__21242__a.length) {G__21242__a[G__21242__i] = arguments[G__21242__i + 2]; ++G__21242__i;}
G__21241 = new cljs.core.IndexedSeq(G__21242__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__21243__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__21243 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21244__i = 0, G__21244__a = new Array(arguments.length -  2);
while (G__21244__i < G__21244__a.length) {G__21244__a[G__21244__i] = arguments[G__21244__i + 2]; ++G__21244__i;}
  more = new cljs.core.IndexedSeq(G__21244__a,0);
} 
return G__21243__delegate.call(this,x,y,more);};
G__21243.cljs$lang$maxFixedArity = 2;
G__21243.cljs$lang$applyTo = (function (arglist__21245){
var x = cljs.core.first(arglist__21245);
arglist__21245 = cljs.core.next(arglist__21245);
var y = cljs.core.first(arglist__21245);
var more = cljs.core.rest(arglist__21245);
return G__21243__delegate(x,y,more);
});
G__21243.cljs$core$IFn$_invoke$arity$variadic = G__21243__delegate;
return G__21243;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__21246 = null;
if (arguments.length > 2) {
var G__21247__i = 0, G__21247__a = new Array(arguments.length -  2);
while (G__21247__i < G__21247__a.length) {G__21247__a[G__21247__i] = arguments[G__21247__i + 2]; ++G__21247__i;}
G__21246 = new cljs.core.IndexedSeq(G__21247__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__21250 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21250) : Math.floor.call(null,G__21250));
} else {
var G__21251 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__21251) : Math.ceil.call(null,G__21251));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__21252__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__21252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21253__i = 0, G__21253__a = new Array(arguments.length -  2);
while (G__21253__i < G__21253__a.length) {G__21253__a[G__21253__i] = arguments[G__21253__i + 2]; ++G__21253__i;}
  more = new cljs.core.IndexedSeq(G__21253__a,0);
} 
return G__21252__delegate.call(this,x,y,more);};
G__21252.cljs$lang$maxFixedArity = 2;
G__21252.cljs$lang$applyTo = (function (arglist__21254){
var x = cljs.core.first(arglist__21254);
arglist__21254 = cljs.core.next(arglist__21254);
var y = cljs.core.first(arglist__21254);
var more = cljs.core.rest(arglist__21254);
return G__21252__delegate(x,y,more);
});
G__21252.cljs$core$IFn$_invoke$arity$variadic = G__21252__delegate;
return G__21252;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__21255 = null;
if (arguments.length > 2) {
var G__21256__i = 0, G__21256__a = new Array(arguments.length -  2);
while (G__21256__i < G__21256__a.length) {G__21256__a[G__21256__i] = arguments[G__21256__i + 2]; ++G__21256__i;}
G__21255 = new cljs.core.IndexedSeq(G__21256__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__21257__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__21257 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21258__i = 0, G__21258__a = new Array(arguments.length -  2);
while (G__21258__i < G__21258__a.length) {G__21258__a[G__21258__i] = arguments[G__21258__i + 2]; ++G__21258__i;}
  more = new cljs.core.IndexedSeq(G__21258__a,0);
} 
return G__21257__delegate.call(this,x,y,more);};
G__21257.cljs$lang$maxFixedArity = 2;
G__21257.cljs$lang$applyTo = (function (arglist__21259){
var x = cljs.core.first(arglist__21259);
arglist__21259 = cljs.core.next(arglist__21259);
var y = cljs.core.first(arglist__21259);
var more = cljs.core.rest(arglist__21259);
return G__21257__delegate(x,y,more);
});
G__21257.cljs$core$IFn$_invoke$arity$variadic = G__21257__delegate;
return G__21257;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__21260 = null;
if (arguments.length > 2) {
var G__21261__i = 0, G__21261__a = new Array(arguments.length -  2);
while (G__21261__i < G__21261__a.length) {G__21261__a[G__21261__i] = arguments[G__21261__i + 2]; ++G__21261__i;}
G__21260 = new cljs.core.IndexedSeq(G__21261__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__21262__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__21262 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21263__i = 0, G__21263__a = new Array(arguments.length -  2);
while (G__21263__i < G__21263__a.length) {G__21263__a[G__21263__i] = arguments[G__21263__i + 2]; ++G__21263__i;}
  more = new cljs.core.IndexedSeq(G__21263__a,0);
} 
return G__21262__delegate.call(this,x,y,more);};
G__21262.cljs$lang$maxFixedArity = 2;
G__21262.cljs$lang$applyTo = (function (arglist__21264){
var x = cljs.core.first(arglist__21264);
arglist__21264 = cljs.core.next(arglist__21264);
var y = cljs.core.first(arglist__21264);
var more = cljs.core.rest(arglist__21264);
return G__21262__delegate(x,y,more);
});
G__21262.cljs$core$IFn$_invoke$arity$variadic = G__21262__delegate;
return G__21262;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__21265 = null;
if (arguments.length > 2) {
var G__21266__i = 0, G__21266__a = new Array(arguments.length -  2);
while (G__21266__i < G__21266__a.length) {G__21266__a[G__21266__i] = arguments[G__21266__i + 2]; ++G__21266__i;}
G__21265 = new cljs.core.IndexedSeq(G__21266__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__21267__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__21267 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21268__i = 0, G__21268__a = new Array(arguments.length -  2);
while (G__21268__i < G__21268__a.length) {G__21268__a[G__21268__i] = arguments[G__21268__i + 2]; ++G__21268__i;}
  more = new cljs.core.IndexedSeq(G__21268__a,0);
} 
return G__21267__delegate.call(this,x,y,more);};
G__21267.cljs$lang$maxFixedArity = 2;
G__21267.cljs$lang$applyTo = (function (arglist__21269){
var x = cljs.core.first(arglist__21269);
arglist__21269 = cljs.core.next(arglist__21269);
var y = cljs.core.first(arglist__21269);
var more = cljs.core.rest(arglist__21269);
return G__21267__delegate(x,y,more);
});
G__21267.cljs$core$IFn$_invoke$arity$variadic = G__21267__delegate;
return G__21267;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__21270 = null;
if (arguments.length > 2) {
var G__21271__i = 0, G__21271__a = new Array(arguments.length -  2);
while (G__21271__i < G__21271__a.length) {G__21271__a[G__21271__i] = arguments[G__21271__i + 2]; ++G__21271__i;}
G__21270 = new cljs.core.IndexedSeq(G__21271__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21270);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__21276__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21277 = y;
var G__21278 = cljs.core.first(more);
var G__21279 = cljs.core.next(more);
x = G__21277;
y = G__21278;
more = G__21279;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21276 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21280__i = 0, G__21280__a = new Array(arguments.length -  2);
while (G__21280__i < G__21280__a.length) {G__21280__a[G__21280__i] = arguments[G__21280__i + 2]; ++G__21280__i;}
  more = new cljs.core.IndexedSeq(G__21280__a,0);
} 
return G__21276__delegate.call(this,x,y,more);};
G__21276.cljs$lang$maxFixedArity = 2;
G__21276.cljs$lang$applyTo = (function (arglist__21281){
var x = cljs.core.first(arglist__21281);
arglist__21281 = cljs.core.next(arglist__21281);
var y = cljs.core.first(arglist__21281);
var more = cljs.core.rest(arglist__21281);
return G__21276__delegate(x,y,more);
});
G__21276.cljs$core$IFn$_invoke$arity$variadic = G__21276__delegate;
return G__21276;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__21282 = null;
if (arguments.length > 2) {
var G__21283__i = 0, G__21283__a = new Array(arguments.length -  2);
while (G__21283__i < G__21283__a.length) {G__21283__a[G__21283__i] = arguments[G__21283__i + 2]; ++G__21283__i;}
G__21282 = new cljs.core.IndexedSeq(G__21283__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__21284 = (n__$1 - (1));
var G__21285 = cljs.core.next(xs);
n__$1 = G__21284;
xs = G__21285;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__21289 = x;
return goog.string.buildString(G__21289);
}
});
var str__2 = (function() { 
var G__21290__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__21291 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__21292 = cljs.core.next(more);
sb = G__21291;
more = G__21292;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__21290 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__21293__i = 0, G__21293__a = new Array(arguments.length -  1);
while (G__21293__i < G__21293__a.length) {G__21293__a[G__21293__i] = arguments[G__21293__i + 1]; ++G__21293__i;}
  ys = new cljs.core.IndexedSeq(G__21293__a,0);
} 
return G__21290__delegate.call(this,x,ys);};
G__21290.cljs$lang$maxFixedArity = 1;
G__21290.cljs$lang$applyTo = (function (arglist__21294){
var x = cljs.core.first(arglist__21294);
var ys = cljs.core.rest(arglist__21294);
return G__21290__delegate(x,ys);
});
G__21290.cljs$core$IFn$_invoke$arity$variadic = G__21290__delegate;
return G__21290;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__21295 = null;
if (arguments.length > 1) {
var G__21296__i = 0, G__21296__a = new Array(arguments.length -  1);
while (G__21296__i < G__21296__a.length) {G__21296__a[G__21296__i] = arguments[G__21296__i + 1]; ++G__21296__i;}
G__21295 = new cljs.core.IndexedSeq(G__21296__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__21297 = cljs.core.next(xs);
var G__21298 = cljs.core.next(ys);
xs = G__21297;
ys = G__21298;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__21299 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__21300 = cljs.core.next(s);
res = G__21299;
s = G__21300;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__21305 = ((h + (cljs.core.hash((function (){var G__21303 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__21303) : cljs.core.key.call(null,G__21303));
})()) ^ cljs.core.hash((function (){var G__21304 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__21304) : cljs.core.val.call(null,G__21304));
})()))) % (4503599627370496));
var G__21306 = cljs.core.next(s);
h = G__21305;
s = G__21306;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__21307 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__21308 = cljs.core.next(s__$1);
h = G__21307;
s__$1 = G__21308;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__21319_21329 = cljs.core.seq(fn_map);
var chunk__21320_21330 = null;
var count__21321_21331 = (0);
var i__21322_21332 = (0);
while(true){
if((i__21322_21332 < count__21321_21331)){
var vec__21323_21333 = chunk__21320_21330.cljs$core$IIndexed$_nth$arity$2(null,i__21322_21332);
var key_name_21334 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21323_21333,(0),null);
var f_21335 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21323_21333,(1),null);
var str_name_21336 = (function (){var G__21324 = key_name_21334;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21324) : cljs.core.name.call(null,G__21324));
})();
(obj[str_name_21336] = f_21335);

var G__21337 = seq__21319_21329;
var G__21338 = chunk__21320_21330;
var G__21339 = count__21321_21331;
var G__21340 = (i__21322_21332 + (1));
seq__21319_21329 = G__21337;
chunk__21320_21330 = G__21338;
count__21321_21331 = G__21339;
i__21322_21332 = G__21340;
continue;
} else {
var temp__4126__auto___21341 = cljs.core.seq(seq__21319_21329);
if(temp__4126__auto___21341){
var seq__21319_21342__$1 = temp__4126__auto___21341;
if(cljs.core.chunked_seq_QMARK_(seq__21319_21342__$1)){
var c__13430__auto___21343 = (function (){var G__21325 = seq__21319_21342__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__21325) : cljs.core.chunk_first.call(null,G__21325));
})();
var G__21344 = (function (){var G__21326 = seq__21319_21342__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__21326) : cljs.core.chunk_rest.call(null,G__21326));
})();
var G__21345 = c__13430__auto___21343;
var G__21346 = cljs.core.count(c__13430__auto___21343);
var G__21347 = (0);
seq__21319_21329 = G__21344;
chunk__21320_21330 = G__21345;
count__21321_21331 = G__21346;
i__21322_21332 = G__21347;
continue;
} else {
var vec__21327_21348 = cljs.core.first(seq__21319_21342__$1);
var key_name_21349 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21327_21348,(0),null);
var f_21350 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21327_21348,(1),null);
var str_name_21351 = (function (){var G__21328 = key_name_21349;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21328) : cljs.core.name.call(null,G__21328));
})();
(obj[str_name_21351] = f_21350);

var G__21352 = cljs.core.next(seq__21319_21342__$1);
var G__21353 = null;
var G__21354 = (0);
var G__21355 = (0);
seq__21319_21329 = G__21352;
chunk__21320_21330 = G__21353;
count__21321_21331 = G__21354;
i__21322_21332 = G__21355;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__21357 = coll;
if(G__21357){
var bit__13324__auto__ = (G__21357.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__13324__auto__) || (G__21357.cljs$core$IReversible$)){
return true;
} else {
if((!G__21357.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__21357);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__21358 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__21358;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__21359 = (i - (1));
var G__21360 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__21359;
r = G__21360;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__21361__i = 0, G__21361__a = new Array(arguments.length -  0);
while (G__21361__i < G__21361__a.length) {G__21361__a[G__21361__i] = arguments[G__21361__i + 0]; ++G__21361__i;}
  xs = new cljs.core.IndexedSeq(G__21361__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__21362){
var xs = cljs.core.seq(arglist__21362);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__12643__auto__ = (coll == null);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var G__21366 = coll;
if(G__21366){
var bit__13317__auto__ = (G__21366.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13317__auto__) || (G__21366.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__21368 = x;
if(G__21368){
var bit__13324__auto__ = (G__21368.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__13324__auto__) || (G__21368.cljs$core$IList$)){
return true;
} else {
if((!G__21368.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21368);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__21368);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__12631__auto__ = cljs.core.not(a.ns);
if(and__12631__auto__){
return b.ns;
} else {
return and__12631__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21375 = a.ns;
var G__21376 = b.ns;
return goog.array.defaultCompare(G__21375,G__21376);
})();
if(((0) === nsc)){
var G__21377 = a.name;
var G__21378 = b.name;
return goog.array.defaultCompare(G__21377,G__21378);
} else {
return nsc;
}
}
} else {
var G__21379 = a.name;
var G__21380 = b.name;
return goog.array.defaultCompare(G__21379,G__21380);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13064__auto__ = self__._hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__21382 = null;
var G__21382__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__21382__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__21382 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21382__2.call(this,self__,coll);
case 3:
return G__21382__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21382.cljs$core$IFn$_invoke$arity$2 = G__21382__2;
G__21382.cljs$core$IFn$_invoke$arity$3 = G__21382__3;
return G__21382;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args21381){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21381)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__21384 = x;
if(G__21384){
var bit__13317__auto__ = (G__21384.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13317__auto__) || (G__21384.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__21386 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__21386) : cljs.core.name.call(null,G__21386));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__21387 = ls.sval();
ls = G__21387;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__21389 = s;
if(G__21389){
var bit__13317__auto__ = (G__21389.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13317__auto__) || (G__21389.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__21390 = cljs.core.next(s__$1);
s__$1 = G__21390;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_21391 = (0);
var xs_21392 = cljs.core.seq(coll);
while(true){
if(xs_21392){
(ret[i_21391] = cljs.core.to_array(cljs.core.first(xs_21392)));

var G__21393 = (i_21391 + (1));
var G__21394 = cljs.core.next(xs_21392);
i_21391 = G__21393;
xs_21392 = G__21394;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21397 = (i + (1));
var G__21398 = cljs.core.next(s__$1);
i = G__21397;
s__$1 = G__21398;
continue;
} else {
return a;
}
break;
}
} else {
var n__13530__auto___21399 = size;
var i_21400 = (0);
while(true){
if((i_21400 < n__13530__auto___21399)){
(a[i_21400] = init_val_or_seq);

var G__21401 = (i_21400 + (1));
i_21400 = G__21401;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21404 = (i + (1));
var G__21405 = cljs.core.next(s__$1);
i = G__21404;
s__$1 = G__21405;
continue;
} else {
return a;
}
break;
}
} else {
var n__13530__auto___21406 = size;
var i_21407 = (0);
while(true){
if((i_21407 < n__13530__auto___21406)){
(a[i_21407] = init_val_or_seq);

var G__21408 = (i_21407 + (1));
i_21407 = G__21408;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21411 = (i + (1));
var G__21412 = cljs.core.next(s__$1);
i = G__21411;
s__$1 = G__21412;
continue;
} else {
return a;
}
break;
}
} else {
var n__13530__auto___21413 = size;
var i_21414 = (0);
while(true){
if((i_21414 < n__13530__auto___21413)){
(a[i_21414] = init_val_or_seq);

var G__21415 = (i_21414 + (1));
i_21414 = G__21415;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__21418 = (i + (1));
var G__21419 = cljs.core.next(s__$1);
i = G__21418;
s__$1 = G__21419;
continue;
} else {
return a;
}
break;
}
} else {
var n__13530__auto___21420 = size;
var i_21421 = (0);
while(true){
if((i_21421 < n__13530__auto___21420)){
(a[i_21421] = init_val_or_seq);

var G__21422 = (i_21421 + (1));
i_21421 = G__21422;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__21423 = cljs.core.next(s__$1);
var G__21424 = (i - (1));
var G__21425 = (sum + (1));
s__$1 = G__21423;
i = G__21424;
sum = G__21425;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__21445__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__21445 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__21446__i = 0, G__21446__a = new Array(arguments.length -  2);
while (G__21446__i < G__21446__a.length) {G__21446__a[G__21446__i] = arguments[G__21446__i + 2]; ++G__21446__i;}
  zs = new cljs.core.IndexedSeq(G__21446__a,0);
} 
return G__21445__delegate.call(this,x,y,zs);};
G__21445.cljs$lang$maxFixedArity = 2;
G__21445.cljs$lang$applyTo = (function (arglist__21447){
var x = cljs.core.first(arglist__21447);
arglist__21447 = cljs.core.next(arglist__21447);
var y = cljs.core.first(arglist__21447);
var zs = cljs.core.rest(arglist__21447);
return G__21445__delegate(x,y,zs);
});
G__21445.cljs$core$IFn$_invoke$arity$variadic = G__21445__delegate;
return G__21445;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__21448 = null;
if (arguments.length > 2) {
var G__21449__i = 0, G__21449__a = new Array(arguments.length -  2);
while (G__21449__i < G__21449__a.length) {G__21449__a[G__21449__i] = arguments[G__21449__i + 2]; ++G__21449__i;}
G__21448 = new cljs.core.IndexedSeq(G__21449__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__21450__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__21450 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__21451__i = 0, G__21451__a = new Array(arguments.length -  4);
while (G__21451__i < G__21451__a.length) {G__21451__a[G__21451__i] = arguments[G__21451__i + 4]; ++G__21451__i;}
  more = new cljs.core.IndexedSeq(G__21451__a,0);
} 
return G__21450__delegate.call(this,a,b,c,d,more);};
G__21450.cljs$lang$maxFixedArity = 4;
G__21450.cljs$lang$applyTo = (function (arglist__21452){
var a = cljs.core.first(arglist__21452);
arglist__21452 = cljs.core.next(arglist__21452);
var b = cljs.core.first(arglist__21452);
arglist__21452 = cljs.core.next(arglist__21452);
var c = cljs.core.first(arglist__21452);
arglist__21452 = cljs.core.next(arglist__21452);
var d = cljs.core.first(arglist__21452);
var more = cljs.core.rest(arglist__21452);
return G__21450__delegate(a,b,c,d,more);
});
G__21450.cljs$core$IFn$_invoke$arity$variadic = G__21450__delegate;
return G__21450;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__21453 = null;
if (arguments.length > 4) {
var G__21454__i = 0, G__21454__a = new Array(arguments.length -  4);
while (G__21454__i < G__21454__a.length) {G__21454__a[G__21454__i] = arguments[G__21454__i + 4]; ++G__21454__i;}
G__21453 = new cljs.core.IndexedSeq(G__21454__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__21453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__21455__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21456 = ntcoll;
var G__21457 = cljs.core.first(vals);
var G__21458 = cljs.core.next(vals);
tcoll = G__21456;
val = G__21457;
vals = G__21458;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21455 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21459__i = 0, G__21459__a = new Array(arguments.length -  2);
while (G__21459__i < G__21459__a.length) {G__21459__a[G__21459__i] = arguments[G__21459__i + 2]; ++G__21459__i;}
  vals = new cljs.core.IndexedSeq(G__21459__a,0);
} 
return G__21455__delegate.call(this,tcoll,val,vals);};
G__21455.cljs$lang$maxFixedArity = 2;
G__21455.cljs$lang$applyTo = (function (arglist__21460){
var tcoll = cljs.core.first(arglist__21460);
arglist__21460 = cljs.core.next(arglist__21460);
var val = cljs.core.first(arglist__21460);
var vals = cljs.core.rest(arglist__21460);
return G__21455__delegate(tcoll,val,vals);
});
G__21455.cljs$core$IFn$_invoke$arity$variadic = G__21455__delegate;
return G__21455;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__21461 = null;
if (arguments.length > 2) {
var G__21462__i = 0, G__21462__a = new Array(arguments.length -  2);
while (G__21462__i < G__21462__a.length) {G__21462__a[G__21462__i] = arguments[G__21462__i + 2]; ++G__21462__i;}
G__21461 = new cljs.core.IndexedSeq(G__21462__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21461);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__21463__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__21464 = ntcoll;
var G__21465 = cljs.core.first(kvs);
var G__21466 = cljs.core.second(kvs);
var G__21467 = cljs.core.nnext(kvs);
tcoll = G__21464;
key = G__21465;
val = G__21466;
kvs = G__21467;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21463 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21468__i = 0, G__21468__a = new Array(arguments.length -  3);
while (G__21468__i < G__21468__a.length) {G__21468__a[G__21468__i] = arguments[G__21468__i + 3]; ++G__21468__i;}
  kvs = new cljs.core.IndexedSeq(G__21468__a,0);
} 
return G__21463__delegate.call(this,tcoll,key,val,kvs);};
G__21463.cljs$lang$maxFixedArity = 3;
G__21463.cljs$lang$applyTo = (function (arglist__21469){
var tcoll = cljs.core.first(arglist__21469);
arglist__21469 = cljs.core.next(arglist__21469);
var key = cljs.core.first(arglist__21469);
arglist__21469 = cljs.core.next(arglist__21469);
var val = cljs.core.first(arglist__21469);
var kvs = cljs.core.rest(arglist__21469);
return G__21463__delegate(tcoll,key,val,kvs);
});
G__21463.cljs$core$IFn$_invoke$arity$variadic = G__21463__delegate;
return G__21463;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__21470 = null;
if (arguments.length > 3) {
var G__21471__i = 0, G__21471__a = new Array(arguments.length -  3);
while (G__21471__i < G__21471__a.length) {G__21471__a[G__21471__i] = arguments[G__21471__i + 3]; ++G__21471__i;}
G__21470 = new cljs.core.IndexedSeq(G__21471__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__21470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__21472__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__21473 = ntcoll;
var G__21474 = cljs.core.first(ks);
var G__21475 = cljs.core.next(ks);
tcoll = G__21473;
key = G__21474;
ks = G__21475;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21472 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21476__i = 0, G__21476__a = new Array(arguments.length -  2);
while (G__21476__i < G__21476__a.length) {G__21476__a[G__21476__i] = arguments[G__21476__i + 2]; ++G__21476__i;}
  ks = new cljs.core.IndexedSeq(G__21476__a,0);
} 
return G__21472__delegate.call(this,tcoll,key,ks);};
G__21472.cljs$lang$maxFixedArity = 2;
G__21472.cljs$lang$applyTo = (function (arglist__21477){
var tcoll = cljs.core.first(arglist__21477);
arglist__21477 = cljs.core.next(arglist__21477);
var key = cljs.core.first(arglist__21477);
var ks = cljs.core.rest(arglist__21477);
return G__21472__delegate(tcoll,key,ks);
});
G__21472.cljs$core$IFn$_invoke$arity$variadic = G__21472__delegate;
return G__21472;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__21478 = null;
if (arguments.length > 2) {
var G__21479__i = 0, G__21479__a = new Array(arguments.length -  2);
while (G__21479__i < G__21479__a.length) {G__21479__a[G__21479__i] = arguments[G__21479__i + 2]; ++G__21479__i;}
G__21478 = new cljs.core.IndexedSeq(G__21479__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__21478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__21480__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__21481 = ntcoll;
var G__21482 = cljs.core.first(vals);
var G__21483 = cljs.core.next(vals);
tcoll = G__21481;
val = G__21482;
vals = G__21483;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__21480 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__21484__i = 0, G__21484__a = new Array(arguments.length -  2);
while (G__21484__i < G__21484__a.length) {G__21484__a[G__21484__i] = arguments[G__21484__i + 2]; ++G__21484__i;}
  vals = new cljs.core.IndexedSeq(G__21484__a,0);
} 
return G__21480__delegate.call(this,tcoll,val,vals);};
G__21480.cljs$lang$maxFixedArity = 2;
G__21480.cljs$lang$applyTo = (function (arglist__21485){
var tcoll = cljs.core.first(arglist__21485);
arglist__21485 = cljs.core.next(arglist__21485);
var val = cljs.core.first(arglist__21485);
var vals = cljs.core.rest(arglist__21485);
return G__21480__delegate(tcoll,val,vals);
});
G__21480.cljs$core$IFn$_invoke$arity$variadic = G__21480__delegate;
return G__21480;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__21486 = null;
if (arguments.length > 2) {
var G__21487__i = 0, G__21487__a = new Array(arguments.length -  2);
while (G__21487__i < G__21487__a.length) {G__21487__a[G__21487__i] = arguments[G__21487__i + 2]; ++G__21487__i;}
G__21486 = new cljs.core.IndexedSeq(G__21487__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__21486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a13574 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a13574);
} else {
var G__21698 = a13574;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21698) : f.call(null,G__21698));
}
} else {
var b13575 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a13574,b13575);
} else {
var G__21699 = a13574;
var G__21700 = b13575;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21699,G__21700) : f.call(null,G__21699,G__21700));
}
} else {
var c13576 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a13574,b13575,c13576);
} else {
var G__21701 = a13574;
var G__21702 = b13575;
var G__21703 = c13576;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21701,G__21702,G__21703) : f.call(null,G__21701,G__21702,G__21703));
}
} else {
var d13577 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a13574,b13575,c13576,d13577);
} else {
var G__21704 = a13574;
var G__21705 = b13575;
var G__21706 = c13576;
var G__21707 = d13577;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21704,G__21705,G__21706,G__21707) : f.call(null,G__21704,G__21705,G__21706,G__21707));
}
} else {
var e13578 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a13574,b13575,c13576,d13577,e13578);
} else {
var G__21708 = a13574;
var G__21709 = b13575;
var G__21710 = c13576;
var G__21711 = d13577;
var G__21712 = e13578;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21708,G__21709,G__21710,G__21711,G__21712) : f.call(null,G__21708,G__21709,G__21710,G__21711,G__21712));
}
} else {
var f13579 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a13574,b13575,c13576,d13577,e13578,f13579);
} else {
var G__21713 = a13574;
var G__21714 = b13575;
var G__21715 = c13576;
var G__21716 = d13577;
var G__21717 = e13578;
var G__21718 = f13579;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__21713,G__21714,G__21715,G__21716,G__21717,G__21718) : f.call(null,G__21713,G__21714,G__21715,G__21716,G__21717,G__21718));
}
} else {
var g13580 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a13574,b13575,c13576,d13577,e13578,f13579,g13580);
} else {
var G__21719 = a13574;
var G__21720 = b13575;
var G__21721 = c13576;
var G__21722 = d13577;
var G__21723 = e13578;
var G__21724 = f13579;
var G__21725 = g13580;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__21719,G__21720,G__21721,G__21722,G__21723,G__21724,G__21725) : f.call(null,G__21719,G__21720,G__21721,G__21722,G__21723,G__21724,G__21725));
}
} else {
var h13581 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581);
} else {
var G__21726 = a13574;
var G__21727 = b13575;
var G__21728 = c13576;
var G__21729 = d13577;
var G__21730 = e13578;
var G__21731 = f13579;
var G__21732 = g13580;
var G__21733 = h13581;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__21726,G__21727,G__21728,G__21729,G__21730,G__21731,G__21732,G__21733) : f.call(null,G__21726,G__21727,G__21728,G__21729,G__21730,G__21731,G__21732,G__21733));
}
} else {
var i13582 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582);
} else {
var G__21734 = a13574;
var G__21735 = b13575;
var G__21736 = c13576;
var G__21737 = d13577;
var G__21738 = e13578;
var G__21739 = f13579;
var G__21740 = g13580;
var G__21741 = h13581;
var G__21742 = i13582;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__21734,G__21735,G__21736,G__21737,G__21738,G__21739,G__21740,G__21741,G__21742) : f.call(null,G__21734,G__21735,G__21736,G__21737,G__21738,G__21739,G__21740,G__21741,G__21742));
}
} else {
var j13583 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583);
} else {
var G__21743 = a13574;
var G__21744 = b13575;
var G__21745 = c13576;
var G__21746 = d13577;
var G__21747 = e13578;
var G__21748 = f13579;
var G__21749 = g13580;
var G__21750 = h13581;
var G__21751 = i13582;
var G__21752 = j13583;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__21743,G__21744,G__21745,G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752) : f.call(null,G__21743,G__21744,G__21745,G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752));
}
} else {
var k13584 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584);
} else {
var G__21753 = a13574;
var G__21754 = b13575;
var G__21755 = c13576;
var G__21756 = d13577;
var G__21757 = e13578;
var G__21758 = f13579;
var G__21759 = g13580;
var G__21760 = h13581;
var G__21761 = i13582;
var G__21762 = j13583;
var G__21763 = k13584;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__21753,G__21754,G__21755,G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763) : f.call(null,G__21753,G__21754,G__21755,G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763));
}
} else {
var l13585 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585);
} else {
var G__21764 = a13574;
var G__21765 = b13575;
var G__21766 = c13576;
var G__21767 = d13577;
var G__21768 = e13578;
var G__21769 = f13579;
var G__21770 = g13580;
var G__21771 = h13581;
var G__21772 = i13582;
var G__21773 = j13583;
var G__21774 = k13584;
var G__21775 = l13585;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775) : f.call(null,G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775));
}
} else {
var m13586 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586);
} else {
var G__21776 = a13574;
var G__21777 = b13575;
var G__21778 = c13576;
var G__21779 = d13577;
var G__21780 = e13578;
var G__21781 = f13579;
var G__21782 = g13580;
var G__21783 = h13581;
var G__21784 = i13582;
var G__21785 = j13583;
var G__21786 = k13584;
var G__21787 = l13585;
var G__21788 = m13586;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787,G__21788) : f.call(null,G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787,G__21788));
}
} else {
var n13587 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587);
} else {
var G__21789 = a13574;
var G__21790 = b13575;
var G__21791 = c13576;
var G__21792 = d13577;
var G__21793 = e13578;
var G__21794 = f13579;
var G__21795 = g13580;
var G__21796 = h13581;
var G__21797 = i13582;
var G__21798 = j13583;
var G__21799 = k13584;
var G__21800 = l13585;
var G__21801 = m13586;
var G__21802 = n13587;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801,G__21802) : f.call(null,G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801,G__21802));
}
} else {
var o13588 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588);
} else {
var G__21803 = a13574;
var G__21804 = b13575;
var G__21805 = c13576;
var G__21806 = d13577;
var G__21807 = e13578;
var G__21808 = f13579;
var G__21809 = g13580;
var G__21810 = h13581;
var G__21811 = i13582;
var G__21812 = j13583;
var G__21813 = k13584;
var G__21814 = l13585;
var G__21815 = m13586;
var G__21816 = n13587;
var G__21817 = o13588;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__21803,G__21804,G__21805,G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814,G__21815,G__21816,G__21817) : f.call(null,G__21803,G__21804,G__21805,G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814,G__21815,G__21816,G__21817));
}
} else {
var p13589 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588,p13589);
} else {
var G__21818 = a13574;
var G__21819 = b13575;
var G__21820 = c13576;
var G__21821 = d13577;
var G__21822 = e13578;
var G__21823 = f13579;
var G__21824 = g13580;
var G__21825 = h13581;
var G__21826 = i13582;
var G__21827 = j13583;
var G__21828 = k13584;
var G__21829 = l13585;
var G__21830 = m13586;
var G__21831 = n13587;
var G__21832 = o13588;
var G__21833 = p13589;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__21818,G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829,G__21830,G__21831,G__21832,G__21833) : f.call(null,G__21818,G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829,G__21830,G__21831,G__21832,G__21833));
}
} else {
var q13590 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588,p13589,q13590);
} else {
var G__21834 = a13574;
var G__21835 = b13575;
var G__21836 = c13576;
var G__21837 = d13577;
var G__21838 = e13578;
var G__21839 = f13579;
var G__21840 = g13580;
var G__21841 = h13581;
var G__21842 = i13582;
var G__21843 = j13583;
var G__21844 = k13584;
var G__21845 = l13585;
var G__21846 = m13586;
var G__21847 = n13587;
var G__21848 = o13588;
var G__21849 = p13589;
var G__21850 = q13590;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846,G__21847,G__21848,G__21849,G__21850) : f.call(null,G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846,G__21847,G__21848,G__21849,G__21850));
}
} else {
var r13591 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588,p13589,q13590,r13591);
} else {
var G__21851 = a13574;
var G__21852 = b13575;
var G__21853 = c13576;
var G__21854 = d13577;
var G__21855 = e13578;
var G__21856 = f13579;
var G__21857 = g13580;
var G__21858 = h13581;
var G__21859 = i13582;
var G__21860 = j13583;
var G__21861 = k13584;
var G__21862 = l13585;
var G__21863 = m13586;
var G__21864 = n13587;
var G__21865 = o13588;
var G__21866 = p13589;
var G__21867 = q13590;
var G__21868 = r13591;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863,G__21864,G__21865,G__21866,G__21867,G__21868) : f.call(null,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863,G__21864,G__21865,G__21866,G__21867,G__21868));
}
} else {
var s13592 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588,p13589,q13590,r13591,s13592);
} else {
var G__21869 = a13574;
var G__21870 = b13575;
var G__21871 = c13576;
var G__21872 = d13577;
var G__21873 = e13578;
var G__21874 = f13579;
var G__21875 = g13580;
var G__21876 = h13581;
var G__21877 = i13582;
var G__21878 = j13583;
var G__21879 = k13584;
var G__21880 = l13585;
var G__21881 = m13586;
var G__21882 = n13587;
var G__21883 = o13588;
var G__21884 = p13589;
var G__21885 = q13590;
var G__21886 = r13591;
var G__21887 = s13592;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887) : f.call(null,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887));
}
} else {
var t13593 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a13574,b13575,c13576,d13577,e13578,f13579,g13580,h13581,i13582,j13583,k13584,l13585,m13586,n13587,o13588,p13589,q13590,r13591,s13592,t13593);
} else {
var G__21888 = a13574;
var G__21889 = b13575;
var G__21890 = c13576;
var G__21891 = d13577;
var G__21892 = e13578;
var G__21893 = f13579;
var G__21894 = g13580;
var G__21895 = h13581;
var G__21896 = i13582;
var G__21897 = j13583;
var G__21898 = k13584;
var G__21899 = l13585;
var G__21900 = m13586;
var G__21901 = n13587;
var G__21902 = o13588;
var G__21903 = p13589;
var G__21904 = q13590;
var G__21905 = r13591;
var G__21906 = s13592;
var G__21907 = t13593;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907) : f.call(null,G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__21908__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__21908 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__21909__i = 0, G__21909__a = new Array(arguments.length -  5);
while (G__21909__i < G__21909__a.length) {G__21909__a[G__21909__i] = arguments[G__21909__i + 5]; ++G__21909__i;}
  args = new cljs.core.IndexedSeq(G__21909__a,0);
} 
return G__21908__delegate.call(this,f,a,b,c,d,args);};
G__21908.cljs$lang$maxFixedArity = 5;
G__21908.cljs$lang$applyTo = (function (arglist__21910){
var f = cljs.core.first(arglist__21910);
arglist__21910 = cljs.core.next(arglist__21910);
var a = cljs.core.first(arglist__21910);
arglist__21910 = cljs.core.next(arglist__21910);
var b = cljs.core.first(arglist__21910);
arglist__21910 = cljs.core.next(arglist__21910);
var c = cljs.core.first(arglist__21910);
arglist__21910 = cljs.core.next(arglist__21910);
var d = cljs.core.first(arglist__21910);
var args = cljs.core.rest(arglist__21910);
return G__21908__delegate(f,a,b,c,d,args);
});
G__21908.cljs$core$IFn$_invoke$arity$variadic = G__21908__delegate;
return G__21908;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__21911 = null;
if (arguments.length > 5) {
var G__21912__i = 0, G__21912__a = new Array(arguments.length -  5);
while (G__21912__i < G__21912__a.length) {G__21912__a[G__21912__i] = arguments[G__21912__i + 5]; ++G__21912__i;}
G__21911 = new cljs.core.IndexedSeq(G__21912__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__21911);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__21928 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21928) : f.call(null,G__21928));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__21929 = cljs.core.meta(obj);
var G__21930 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21929,G__21930) : f.call(null,G__21929,G__21930));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__21931 = cljs.core.meta(obj);
var G__21932 = a;
var G__21933 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21931,G__21932,G__21933) : f.call(null,G__21931,G__21932,G__21933));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__21934 = cljs.core.meta(obj);
var G__21935 = a;
var G__21936 = b;
var G__21937 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21934,G__21935,G__21936,G__21937) : f.call(null,G__21934,G__21935,G__21936,G__21937));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__21938 = cljs.core.meta(obj);
var G__21939 = a;
var G__21940 = b;
var G__21941 = c;
var G__21942 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21938,G__21939,G__21940,G__21941,G__21942) : f.call(null,G__21938,G__21939,G__21940,G__21941,G__21942));
})());
});
var vary_meta__7 = (function() { 
var G__21943__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__21943 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__21944__i = 0, G__21944__a = new Array(arguments.length -  6);
while (G__21944__i < G__21944__a.length) {G__21944__a[G__21944__i] = arguments[G__21944__i + 6]; ++G__21944__i;}
  args = new cljs.core.IndexedSeq(G__21944__a,0);
} 
return G__21943__delegate.call(this,obj,f,a,b,c,d,args);};
G__21943.cljs$lang$maxFixedArity = 6;
G__21943.cljs$lang$applyTo = (function (arglist__21945){
var obj = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var f = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var a = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var b = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var c = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var d = cljs.core.first(arglist__21945);
var args = cljs.core.rest(arglist__21945);
return G__21943__delegate(obj,f,a,b,c,d,args);
});
G__21943.cljs$core$IFn$_invoke$arity$variadic = G__21943__delegate;
return G__21943;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__21946 = null;
if (arguments.length > 6) {
var G__21947__i = 0, G__21947__a = new Array(arguments.length -  6);
while (G__21947__i < G__21947__a.length) {G__21947__a[G__21947__i] = arguments[G__21947__i + 6]; ++G__21947__i;}
G__21946 = new cljs.core.IndexedSeq(G__21947__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__21946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__21948__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__21948 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21949__i = 0, G__21949__a = new Array(arguments.length -  2);
while (G__21949__i < G__21949__a.length) {G__21949__a[G__21949__i] = arguments[G__21949__i + 2]; ++G__21949__i;}
  more = new cljs.core.IndexedSeq(G__21949__a,0);
} 
return G__21948__delegate.call(this,x,y,more);};
G__21948.cljs$lang$maxFixedArity = 2;
G__21948.cljs$lang$applyTo = (function (arglist__21950){
var x = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var y = cljs.core.first(arglist__21950);
var more = cljs.core.rest(arglist__21950);
return G__21948__delegate(x,y,more);
});
G__21948.cljs$core$IFn$_invoke$arity$variadic = G__21948__delegate;
return G__21948;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__21951 = null;
if (arguments.length > 2) {
var G__21952__i = 0, G__21952__a = new Array(arguments.length -  2);
while (G__21952__i < G__21952__a.length) {G__21952__a[G__21952__i] = arguments[G__21952__i + 2]; ++G__21952__i;}
G__21951 = new cljs.core.IndexedSeq(G__21952__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t21956 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t21956 = (function (nil_iter,meta21957){
this.nil_iter = nil_iter;
this.meta21957 = meta21957;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t21956.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t21956.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t21956.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t21956.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_21958){
var self__ = this;
var _21958__$1 = this;
return self__.meta21957;
});

cljs.core.t21956.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_21958,meta21957__$1){
var self__ = this;
var _21958__$1 = this;
return (new cljs.core.t21956(self__.nil_iter,meta21957__$1));
});

cljs.core.t21956.cljs$lang$type = true;

cljs.core.t21956.cljs$lang$ctorStr = "cljs.core/t21956";

cljs.core.t21956.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/t21956");
});

cljs.core.__GT_t21956 = (function __GT_t21956(nil_iter__$1,meta21957){
return (new cljs.core.t21956(nil_iter__$1,meta21957));
});

}

return (new cljs.core.t21956(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/lvh/Projects/rackspace/chutesnrackers/resources/public/js/compiled/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12631__auto__ = !((lt.stepper == null));
if(and__12631__auto__){
return self__.iter.hasNext();
} else {
return and__12631__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__21959 = lt;
var G__21960 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21959,G__21960) : self__.xform.call(null,G__21959,G__21960));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21961 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21961) : self__.xform.call(null,G__21961));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__21963 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21963) : xform.call(null,G__21963));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__21965 = cljs.core.next(iters__$1);
iters__$1 = G__21965;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__13530__auto___21966 = self__.iters.length;
var i_21967 = (0);
while(true){
if((i_21967 < n__13530__auto___21966)){
(self__.nexts[i_21967] = (self__.iters[i_21967]).next());

var G__21968 = (i_21967 + (1));
i_21967 = G__21968;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__12631__auto__ = !((lt.stepper == null));
if(and__12631__auto__){
return this$.hasNext();
} else {
return and__12631__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__21964 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__21964) : self__.xform.call(null,G__21964));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__21973 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__21973) : xform.call(null,G__21973));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__21974_21978 = cljs.core.seq(colls);
var chunk__21975_21979 = null;
var count__21976_21980 = (0);
var i__21977_21981 = (0);
while(true){
if((i__21977_21981 < count__21976_21980)){
var coll_21982 = chunk__21975_21979.cljs$core$IIndexed$_nth$arity$2(null,i__21977_21981);
iters.push(cljs.core.iter(coll_21982));

var G__21983 = seq__21974_21978;
var G__21984 = chunk__21975_21979;
var G__21985 = count__21976_21980;
var G__21986 = (i__21977_21981 + (1));
seq__21974_21978 = G__21983;
chunk__21975_21979 = G__21984;
count__21976_21980 = G__21985;
i__21977_21981 = G__21986;
continue;
} else {
var temp__4126__auto___21987 = cljs.core.seq(seq__21974_21978);
if(temp__4126__auto___21987){
var seq__21974_21988__$1 = temp__4126__auto___21987;
if(cljs.core.chunked_seq_QMARK_(seq__21974_21988__$1)){
var c__13430__auto___21989 = cljs.core.chunk_first(seq__21974_21988__$1);
var G__21990 = cljs.core.chunk_rest(seq__21974_21988__$1);
var G__21991 = c__13430__auto___21989;
var G__21992 = cljs.core.count(c__13430__auto___21989);
var G__21993 = (0);
seq__21974_21978 = G__21990;
chunk__21975_21979 = G__21991;
count__21976_21980 = G__21992;
i__21977_21981 = G__21993;
continue;
} else {
var coll_21994 = cljs.core.first(seq__21974_21988__$1);
iters.push(cljs.core.iter(coll_21994));

var G__21995 = cljs.core.next(seq__21974_21988__$1);
var G__21996 = null;
var G__21997 = (0);
var G__21998 = (0);
seq__21974_21978 = G__21995;
chunk__21975_21979 = G__21996;
count__21976_21980 = G__21997;
i__21977_21981 = G__21998;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__12643__auto__ = cljs.core.seq(coll);
if(or__12643__auto__){
return or__12643__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__21999__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__21999 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22000__i = 0, G__22000__a = new Array(arguments.length -  2);
while (G__22000__i < G__22000__a.length) {G__22000__a[G__22000__i] = arguments[G__22000__i + 2]; ++G__22000__i;}
  colls = new cljs.core.IndexedSeq(G__22000__a,0);
} 
return G__21999__delegate.call(this,xform,coll,colls);};
G__21999.cljs$lang$maxFixedArity = 2;
G__21999.cljs$lang$applyTo = (function (arglist__22001){
var xform = cljs.core.first(arglist__22001);
arglist__22001 = cljs.core.next(arglist__22001);
var coll = cljs.core.first(arglist__22001);
var colls = cljs.core.rest(arglist__22001);
return G__21999__delegate(xform,coll,colls);
});
G__21999.cljs$core$IFn$_invoke$arity$variadic = G__21999__delegate;
return G__21999;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__22002 = null;
if (arguments.length > 2) {
var G__22003__i = 0, G__22003__a = new Array(arguments.length -  2);
while (G__22003__i < G__22003__a.length) {G__22003__a[G__22003__i] = arguments[G__22003__i + 2]; ++G__22003__i;}
G__22002 = new cljs.core.IndexedSeq(G__22003__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__22002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__22005 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22005) : pred.call(null,G__22005));
})())){
var G__22006 = pred;
var G__22007 = cljs.core.next(coll);
pred = G__22006;
coll = G__22007;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__12643__auto__ = (function (){var G__22011 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22011) : pred.call(null,G__22011));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var G__22012 = pred;
var G__22013 = cljs.core.next(coll);
pred = G__22012;
coll = G__22013;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__22020 = null;
var G__22020__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__22020__1 = (function (x){
return cljs.core.not((function (){var G__22017 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22017) : f.call(null,G__22017));
})());
});
var G__22020__2 = (function (x,y){
return cljs.core.not((function (){var G__22018 = x;
var G__22019 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22018,G__22019) : f.call(null,G__22018,G__22019));
})());
});
var G__22020__3 = (function() { 
var G__22021__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__22021 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22022__i = 0, G__22022__a = new Array(arguments.length -  2);
while (G__22022__i < G__22022__a.length) {G__22022__a[G__22022__i] = arguments[G__22022__i + 2]; ++G__22022__i;}
  zs = new cljs.core.IndexedSeq(G__22022__a,0);
} 
return G__22021__delegate.call(this,x,y,zs);};
G__22021.cljs$lang$maxFixedArity = 2;
G__22021.cljs$lang$applyTo = (function (arglist__22023){
var x = cljs.core.first(arglist__22023);
arglist__22023 = cljs.core.next(arglist__22023);
var y = cljs.core.first(arglist__22023);
var zs = cljs.core.rest(arglist__22023);
return G__22021__delegate(x,y,zs);
});
G__22021.cljs$core$IFn$_invoke$arity$variadic = G__22021__delegate;
return G__22021;
})()
;
G__22020 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__22020__0.call(this);
case 1:
return G__22020__1.call(this,x);
case 2:
return G__22020__2.call(this,x,y);
default:
var G__22024 = null;
if (arguments.length > 2) {
var G__22025__i = 0, G__22025__a = new Array(arguments.length -  2);
while (G__22025__i < G__22025__a.length) {G__22025__a[G__22025__i] = arguments[G__22025__i + 2]; ++G__22025__i;}
G__22024 = new cljs.core.IndexedSeq(G__22025__a,0);
}
return G__22020__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22024);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22020.cljs$lang$maxFixedArity = 2;
G__22020.cljs$lang$applyTo = G__22020__3.cljs$lang$applyTo;
G__22020.cljs$core$IFn$_invoke$arity$0 = G__22020__0;
G__22020.cljs$core$IFn$_invoke$arity$1 = G__22020__1;
G__22020.cljs$core$IFn$_invoke$arity$2 = G__22020__2;
G__22020.cljs$core$IFn$_invoke$arity$variadic = G__22020__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22020;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__22026__delegate = function (args){
return x;
};
var G__22026 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22027__i = 0, G__22027__a = new Array(arguments.length -  0);
while (G__22027__i < G__22027__a.length) {G__22027__a[G__22027__i] = arguments[G__22027__i + 0]; ++G__22027__i;}
  args = new cljs.core.IndexedSeq(G__22027__a,0);
} 
return G__22026__delegate.call(this,args);};
G__22026.cljs$lang$maxFixedArity = 0;
G__22026.cljs$lang$applyTo = (function (arglist__22028){
var args = cljs.core.seq(arglist__22028);
return G__22026__delegate(args);
});
G__22026.cljs$core$IFn$_invoke$arity$variadic = G__22026__delegate;
return G__22026;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__22083 = null;
var G__22083__0 = (function (){
var G__22056 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22056) : f.call(null,G__22056));
});
var G__22083__1 = (function (x){
var G__22057 = (function (){var G__22058 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22058) : g.call(null,G__22058));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22057) : f.call(null,G__22057));
});
var G__22083__2 = (function (x,y){
var G__22059 = (function (){var G__22060 = x;
var G__22061 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22060,G__22061) : g.call(null,G__22060,G__22061));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22059) : f.call(null,G__22059));
});
var G__22083__3 = (function (x,y,z){
var G__22062 = (function (){var G__22063 = x;
var G__22064 = y;
var G__22065 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22063,G__22064,G__22065) : g.call(null,G__22063,G__22064,G__22065));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22062) : f.call(null,G__22062));
});
var G__22083__4 = (function() { 
var G__22084__delegate = function (x,y,z,args){
var G__22066 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22066) : f.call(null,G__22066));
};
var G__22084 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22085__i = 0, G__22085__a = new Array(arguments.length -  3);
while (G__22085__i < G__22085__a.length) {G__22085__a[G__22085__i] = arguments[G__22085__i + 3]; ++G__22085__i;}
  args = new cljs.core.IndexedSeq(G__22085__a,0);
} 
return G__22084__delegate.call(this,x,y,z,args);};
G__22084.cljs$lang$maxFixedArity = 3;
G__22084.cljs$lang$applyTo = (function (arglist__22086){
var x = cljs.core.first(arglist__22086);
arglist__22086 = cljs.core.next(arglist__22086);
var y = cljs.core.first(arglist__22086);
arglist__22086 = cljs.core.next(arglist__22086);
var z = cljs.core.first(arglist__22086);
var args = cljs.core.rest(arglist__22086);
return G__22084__delegate(x,y,z,args);
});
G__22084.cljs$core$IFn$_invoke$arity$variadic = G__22084__delegate;
return G__22084;
})()
;
G__22083 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22083__0.call(this);
case 1:
return G__22083__1.call(this,x);
case 2:
return G__22083__2.call(this,x,y);
case 3:
return G__22083__3.call(this,x,y,z);
default:
var G__22087 = null;
if (arguments.length > 3) {
var G__22088__i = 0, G__22088__a = new Array(arguments.length -  3);
while (G__22088__i < G__22088__a.length) {G__22088__a[G__22088__i] = arguments[G__22088__i + 3]; ++G__22088__i;}
G__22087 = new cljs.core.IndexedSeq(G__22088__a,0);
}
return G__22083__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22083.cljs$lang$maxFixedArity = 3;
G__22083.cljs$lang$applyTo = G__22083__4.cljs$lang$applyTo;
G__22083.cljs$core$IFn$_invoke$arity$0 = G__22083__0;
G__22083.cljs$core$IFn$_invoke$arity$1 = G__22083__1;
G__22083.cljs$core$IFn$_invoke$arity$2 = G__22083__2;
G__22083.cljs$core$IFn$_invoke$arity$3 = G__22083__3;
G__22083.cljs$core$IFn$_invoke$arity$variadic = G__22083__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22083;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__22089 = null;
var G__22089__0 = (function (){
var G__22067 = (function (){var G__22068 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22068) : g.call(null,G__22068));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22067) : f.call(null,G__22067));
});
var G__22089__1 = (function (x){
var G__22069 = (function (){var G__22070 = (function (){var G__22071 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22071) : h.call(null,G__22071));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22070) : g.call(null,G__22070));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22069) : f.call(null,G__22069));
});
var G__22089__2 = (function (x,y){
var G__22072 = (function (){var G__22073 = (function (){var G__22074 = x;
var G__22075 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22074,G__22075) : h.call(null,G__22074,G__22075));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22073) : g.call(null,G__22073));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22072) : f.call(null,G__22072));
});
var G__22089__3 = (function (x,y,z){
var G__22076 = (function (){var G__22077 = (function (){var G__22078 = x;
var G__22079 = y;
var G__22080 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22078,G__22079,G__22080) : h.call(null,G__22078,G__22079,G__22080));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22077) : g.call(null,G__22077));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22076) : f.call(null,G__22076));
});
var G__22089__4 = (function() { 
var G__22090__delegate = function (x,y,z,args){
var G__22081 = (function (){var G__22082 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22082) : g.call(null,G__22082));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22081) : f.call(null,G__22081));
};
var G__22090 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22091__i = 0, G__22091__a = new Array(arguments.length -  3);
while (G__22091__i < G__22091__a.length) {G__22091__a[G__22091__i] = arguments[G__22091__i + 3]; ++G__22091__i;}
  args = new cljs.core.IndexedSeq(G__22091__a,0);
} 
return G__22090__delegate.call(this,x,y,z,args);};
G__22090.cljs$lang$maxFixedArity = 3;
G__22090.cljs$lang$applyTo = (function (arglist__22092){
var x = cljs.core.first(arglist__22092);
arglist__22092 = cljs.core.next(arglist__22092);
var y = cljs.core.first(arglist__22092);
arglist__22092 = cljs.core.next(arglist__22092);
var z = cljs.core.first(arglist__22092);
var args = cljs.core.rest(arglist__22092);
return G__22090__delegate(x,y,z,args);
});
G__22090.cljs$core$IFn$_invoke$arity$variadic = G__22090__delegate;
return G__22090;
})()
;
G__22089 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22089__0.call(this);
case 1:
return G__22089__1.call(this,x);
case 2:
return G__22089__2.call(this,x,y);
case 3:
return G__22089__3.call(this,x,y,z);
default:
var G__22093 = null;
if (arguments.length > 3) {
var G__22094__i = 0, G__22094__a = new Array(arguments.length -  3);
while (G__22094__i < G__22094__a.length) {G__22094__a[G__22094__i] = arguments[G__22094__i + 3]; ++G__22094__i;}
G__22093 = new cljs.core.IndexedSeq(G__22094__a,0);
}
return G__22089__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22089.cljs$lang$maxFixedArity = 3;
G__22089.cljs$lang$applyTo = G__22089__4.cljs$lang$applyTo;
G__22089.cljs$core$IFn$_invoke$arity$0 = G__22089__0;
G__22089.cljs$core$IFn$_invoke$arity$1 = G__22089__1;
G__22089.cljs$core$IFn$_invoke$arity$2 = G__22089__2;
G__22089.cljs$core$IFn$_invoke$arity$3 = G__22089__3;
G__22089.cljs$core$IFn$_invoke$arity$variadic = G__22089__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22089;
})()
});
var comp__4 = (function() { 
var G__22095__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__22096__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__22097 = cljs.core.first(fs__$2).call(null,ret);
var G__22098 = cljs.core.next(fs__$2);
ret = G__22097;
fs__$2 = G__22098;
continue;
} else {
return ret;
}
break;
}
};
var G__22096 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22099__i = 0, G__22099__a = new Array(arguments.length -  0);
while (G__22099__i < G__22099__a.length) {G__22099__a[G__22099__i] = arguments[G__22099__i + 0]; ++G__22099__i;}
  args = new cljs.core.IndexedSeq(G__22099__a,0);
} 
return G__22096__delegate.call(this,args);};
G__22096.cljs$lang$maxFixedArity = 0;
G__22096.cljs$lang$applyTo = (function (arglist__22100){
var args = cljs.core.seq(arglist__22100);
return G__22096__delegate(args);
});
G__22096.cljs$core$IFn$_invoke$arity$variadic = G__22096__delegate;
return G__22096;
})()
;
;})(fs__$1))
};
var G__22095 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22101__i = 0, G__22101__a = new Array(arguments.length -  3);
while (G__22101__i < G__22101__a.length) {G__22101__a[G__22101__i] = arguments[G__22101__i + 3]; ++G__22101__i;}
  fs = new cljs.core.IndexedSeq(G__22101__a,0);
} 
return G__22095__delegate.call(this,f1,f2,f3,fs);};
G__22095.cljs$lang$maxFixedArity = 3;
G__22095.cljs$lang$applyTo = (function (arglist__22102){
var f1 = cljs.core.first(arglist__22102);
arglist__22102 = cljs.core.next(arglist__22102);
var f2 = cljs.core.first(arglist__22102);
arglist__22102 = cljs.core.next(arglist__22102);
var f3 = cljs.core.first(arglist__22102);
var fs = cljs.core.rest(arglist__22102);
return G__22095__delegate(f1,f2,f3,fs);
});
G__22095.cljs$core$IFn$_invoke$arity$variadic = G__22095__delegate;
return G__22095;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__22103 = null;
if (arguments.length > 3) {
var G__22104__i = 0, G__22104__a = new Array(arguments.length -  3);
while (G__22104__i < G__22104__a.length) {G__22104__a[G__22104__i] = arguments[G__22104__i + 3]; ++G__22104__i;}
G__22103 = new cljs.core.IndexedSeq(G__22104__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__22103);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__22189 = null;
var G__22189__0 = (function (){
var G__22147 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22147) : f.call(null,G__22147));
});
var G__22189__1 = (function (x){
var G__22148 = arg1;
var G__22149 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22148,G__22149) : f.call(null,G__22148,G__22149));
});
var G__22189__2 = (function (x,y){
var G__22150 = arg1;
var G__22151 = x;
var G__22152 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22150,G__22151,G__22152) : f.call(null,G__22150,G__22151,G__22152));
});
var G__22189__3 = (function (x,y,z){
var G__22153 = arg1;
var G__22154 = x;
var G__22155 = y;
var G__22156 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22153,G__22154,G__22155,G__22156) : f.call(null,G__22153,G__22154,G__22155,G__22156));
});
var G__22189__4 = (function() { 
var G__22190__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__22190 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22191__i = 0, G__22191__a = new Array(arguments.length -  3);
while (G__22191__i < G__22191__a.length) {G__22191__a[G__22191__i] = arguments[G__22191__i + 3]; ++G__22191__i;}
  args = new cljs.core.IndexedSeq(G__22191__a,0);
} 
return G__22190__delegate.call(this,x,y,z,args);};
G__22190.cljs$lang$maxFixedArity = 3;
G__22190.cljs$lang$applyTo = (function (arglist__22192){
var x = cljs.core.first(arglist__22192);
arglist__22192 = cljs.core.next(arglist__22192);
var y = cljs.core.first(arglist__22192);
arglist__22192 = cljs.core.next(arglist__22192);
var z = cljs.core.first(arglist__22192);
var args = cljs.core.rest(arglist__22192);
return G__22190__delegate(x,y,z,args);
});
G__22190.cljs$core$IFn$_invoke$arity$variadic = G__22190__delegate;
return G__22190;
})()
;
G__22189 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22189__0.call(this);
case 1:
return G__22189__1.call(this,x);
case 2:
return G__22189__2.call(this,x,y);
case 3:
return G__22189__3.call(this,x,y,z);
default:
var G__22193 = null;
if (arguments.length > 3) {
var G__22194__i = 0, G__22194__a = new Array(arguments.length -  3);
while (G__22194__i < G__22194__a.length) {G__22194__a[G__22194__i] = arguments[G__22194__i + 3]; ++G__22194__i;}
G__22193 = new cljs.core.IndexedSeq(G__22194__a,0);
}
return G__22189__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22189.cljs$lang$maxFixedArity = 3;
G__22189.cljs$lang$applyTo = G__22189__4.cljs$lang$applyTo;
G__22189.cljs$core$IFn$_invoke$arity$0 = G__22189__0;
G__22189.cljs$core$IFn$_invoke$arity$1 = G__22189__1;
G__22189.cljs$core$IFn$_invoke$arity$2 = G__22189__2;
G__22189.cljs$core$IFn$_invoke$arity$3 = G__22189__3;
G__22189.cljs$core$IFn$_invoke$arity$variadic = G__22189__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22189;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__22195 = null;
var G__22195__0 = (function (){
var G__22157 = arg1;
var G__22158 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22157,G__22158) : f.call(null,G__22157,G__22158));
});
var G__22195__1 = (function (x){
var G__22159 = arg1;
var G__22160 = arg2;
var G__22161 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22159,G__22160,G__22161) : f.call(null,G__22159,G__22160,G__22161));
});
var G__22195__2 = (function (x,y){
var G__22162 = arg1;
var G__22163 = arg2;
var G__22164 = x;
var G__22165 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22162,G__22163,G__22164,G__22165) : f.call(null,G__22162,G__22163,G__22164,G__22165));
});
var G__22195__3 = (function (x,y,z){
var G__22166 = arg1;
var G__22167 = arg2;
var G__22168 = x;
var G__22169 = y;
var G__22170 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22166,G__22167,G__22168,G__22169,G__22170) : f.call(null,G__22166,G__22167,G__22168,G__22169,G__22170));
});
var G__22195__4 = (function() { 
var G__22196__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__22196 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22197__i = 0, G__22197__a = new Array(arguments.length -  3);
while (G__22197__i < G__22197__a.length) {G__22197__a[G__22197__i] = arguments[G__22197__i + 3]; ++G__22197__i;}
  args = new cljs.core.IndexedSeq(G__22197__a,0);
} 
return G__22196__delegate.call(this,x,y,z,args);};
G__22196.cljs$lang$maxFixedArity = 3;
G__22196.cljs$lang$applyTo = (function (arglist__22198){
var x = cljs.core.first(arglist__22198);
arglist__22198 = cljs.core.next(arglist__22198);
var y = cljs.core.first(arglist__22198);
arglist__22198 = cljs.core.next(arglist__22198);
var z = cljs.core.first(arglist__22198);
var args = cljs.core.rest(arglist__22198);
return G__22196__delegate(x,y,z,args);
});
G__22196.cljs$core$IFn$_invoke$arity$variadic = G__22196__delegate;
return G__22196;
})()
;
G__22195 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22195__0.call(this);
case 1:
return G__22195__1.call(this,x);
case 2:
return G__22195__2.call(this,x,y);
case 3:
return G__22195__3.call(this,x,y,z);
default:
var G__22199 = null;
if (arguments.length > 3) {
var G__22200__i = 0, G__22200__a = new Array(arguments.length -  3);
while (G__22200__i < G__22200__a.length) {G__22200__a[G__22200__i] = arguments[G__22200__i + 3]; ++G__22200__i;}
G__22199 = new cljs.core.IndexedSeq(G__22200__a,0);
}
return G__22195__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22195.cljs$lang$maxFixedArity = 3;
G__22195.cljs$lang$applyTo = G__22195__4.cljs$lang$applyTo;
G__22195.cljs$core$IFn$_invoke$arity$0 = G__22195__0;
G__22195.cljs$core$IFn$_invoke$arity$1 = G__22195__1;
G__22195.cljs$core$IFn$_invoke$arity$2 = G__22195__2;
G__22195.cljs$core$IFn$_invoke$arity$3 = G__22195__3;
G__22195.cljs$core$IFn$_invoke$arity$variadic = G__22195__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22195;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__22201 = null;
var G__22201__0 = (function (){
var G__22171 = arg1;
var G__22172 = arg2;
var G__22173 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22171,G__22172,G__22173) : f.call(null,G__22171,G__22172,G__22173));
});
var G__22201__1 = (function (x){
var G__22174 = arg1;
var G__22175 = arg2;
var G__22176 = arg3;
var G__22177 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22174,G__22175,G__22176,G__22177) : f.call(null,G__22174,G__22175,G__22176,G__22177));
});
var G__22201__2 = (function (x,y){
var G__22178 = arg1;
var G__22179 = arg2;
var G__22180 = arg3;
var G__22181 = x;
var G__22182 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22178,G__22179,G__22180,G__22181,G__22182) : f.call(null,G__22178,G__22179,G__22180,G__22181,G__22182));
});
var G__22201__3 = (function (x,y,z){
var G__22183 = arg1;
var G__22184 = arg2;
var G__22185 = arg3;
var G__22186 = x;
var G__22187 = y;
var G__22188 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22183,G__22184,G__22185,G__22186,G__22187,G__22188) : f.call(null,G__22183,G__22184,G__22185,G__22186,G__22187,G__22188));
});
var G__22201__4 = (function() { 
var G__22202__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__22202 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22203__i = 0, G__22203__a = new Array(arguments.length -  3);
while (G__22203__i < G__22203__a.length) {G__22203__a[G__22203__i] = arguments[G__22203__i + 3]; ++G__22203__i;}
  args = new cljs.core.IndexedSeq(G__22203__a,0);
} 
return G__22202__delegate.call(this,x,y,z,args);};
G__22202.cljs$lang$maxFixedArity = 3;
G__22202.cljs$lang$applyTo = (function (arglist__22204){
var x = cljs.core.first(arglist__22204);
arglist__22204 = cljs.core.next(arglist__22204);
var y = cljs.core.first(arglist__22204);
arglist__22204 = cljs.core.next(arglist__22204);
var z = cljs.core.first(arglist__22204);
var args = cljs.core.rest(arglist__22204);
return G__22202__delegate(x,y,z,args);
});
G__22202.cljs$core$IFn$_invoke$arity$variadic = G__22202__delegate;
return G__22202;
})()
;
G__22201 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22201__0.call(this);
case 1:
return G__22201__1.call(this,x);
case 2:
return G__22201__2.call(this,x,y);
case 3:
return G__22201__3.call(this,x,y,z);
default:
var G__22205 = null;
if (arguments.length > 3) {
var G__22206__i = 0, G__22206__a = new Array(arguments.length -  3);
while (G__22206__i < G__22206__a.length) {G__22206__a[G__22206__i] = arguments[G__22206__i + 3]; ++G__22206__i;}
G__22205 = new cljs.core.IndexedSeq(G__22206__a,0);
}
return G__22201__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22201.cljs$lang$maxFixedArity = 3;
G__22201.cljs$lang$applyTo = G__22201__4.cljs$lang$applyTo;
G__22201.cljs$core$IFn$_invoke$arity$0 = G__22201__0;
G__22201.cljs$core$IFn$_invoke$arity$1 = G__22201__1;
G__22201.cljs$core$IFn$_invoke$arity$2 = G__22201__2;
G__22201.cljs$core$IFn$_invoke$arity$3 = G__22201__3;
G__22201.cljs$core$IFn$_invoke$arity$variadic = G__22201__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22201;
})()
});
var partial__5 = (function() { 
var G__22207__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__22208__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__22208 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22209__i = 0, G__22209__a = new Array(arguments.length -  0);
while (G__22209__i < G__22209__a.length) {G__22209__a[G__22209__i] = arguments[G__22209__i + 0]; ++G__22209__i;}
  args = new cljs.core.IndexedSeq(G__22209__a,0);
} 
return G__22208__delegate.call(this,args);};
G__22208.cljs$lang$maxFixedArity = 0;
G__22208.cljs$lang$applyTo = (function (arglist__22210){
var args = cljs.core.seq(arglist__22210);
return G__22208__delegate(args);
});
G__22208.cljs$core$IFn$_invoke$arity$variadic = G__22208__delegate;
return G__22208;
})()
;
};
var G__22207 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__22211__i = 0, G__22211__a = new Array(arguments.length -  4);
while (G__22211__i < G__22211__a.length) {G__22211__a[G__22211__i] = arguments[G__22211__i + 4]; ++G__22211__i;}
  more = new cljs.core.IndexedSeq(G__22211__a,0);
} 
return G__22207__delegate.call(this,f,arg1,arg2,arg3,more);};
G__22207.cljs$lang$maxFixedArity = 4;
G__22207.cljs$lang$applyTo = (function (arglist__22212){
var f = cljs.core.first(arglist__22212);
arglist__22212 = cljs.core.next(arglist__22212);
var arg1 = cljs.core.first(arglist__22212);
arglist__22212 = cljs.core.next(arglist__22212);
var arg2 = cljs.core.first(arglist__22212);
arglist__22212 = cljs.core.next(arglist__22212);
var arg3 = cljs.core.first(arglist__22212);
var more = cljs.core.rest(arglist__22212);
return G__22207__delegate(f,arg1,arg2,arg3,more);
});
G__22207.cljs$core$IFn$_invoke$arity$variadic = G__22207__delegate;
return G__22207;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__22213 = null;
if (arguments.length > 4) {
var G__22214__i = 0, G__22214__a = new Array(arguments.length -  4);
while (G__22214__i < G__22214__a.length) {G__22214__a[G__22214__i] = arguments[G__22214__i + 4]; ++G__22214__i;}
G__22213 = new cljs.core.IndexedSeq(G__22214__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__22213);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__22247 = null;
var G__22247__1 = (function (a){
var G__22231 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22231) : f.call(null,G__22231));
});
var G__22247__2 = (function (a,b){
var G__22232 = (((a == null))?x:a);
var G__22233 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22232,G__22233) : f.call(null,G__22232,G__22233));
});
var G__22247__3 = (function (a,b,c){
var G__22234 = (((a == null))?x:a);
var G__22235 = b;
var G__22236 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22234,G__22235,G__22236) : f.call(null,G__22234,G__22235,G__22236));
});
var G__22247__4 = (function() { 
var G__22248__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__22248 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22249__i = 0, G__22249__a = new Array(arguments.length -  3);
while (G__22249__i < G__22249__a.length) {G__22249__a[G__22249__i] = arguments[G__22249__i + 3]; ++G__22249__i;}
  ds = new cljs.core.IndexedSeq(G__22249__a,0);
} 
return G__22248__delegate.call(this,a,b,c,ds);};
G__22248.cljs$lang$maxFixedArity = 3;
G__22248.cljs$lang$applyTo = (function (arglist__22250){
var a = cljs.core.first(arglist__22250);
arglist__22250 = cljs.core.next(arglist__22250);
var b = cljs.core.first(arglist__22250);
arglist__22250 = cljs.core.next(arglist__22250);
var c = cljs.core.first(arglist__22250);
var ds = cljs.core.rest(arglist__22250);
return G__22248__delegate(a,b,c,ds);
});
G__22248.cljs$core$IFn$_invoke$arity$variadic = G__22248__delegate;
return G__22248;
})()
;
G__22247 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__22247__1.call(this,a);
case 2:
return G__22247__2.call(this,a,b);
case 3:
return G__22247__3.call(this,a,b,c);
default:
var G__22251 = null;
if (arguments.length > 3) {
var G__22252__i = 0, G__22252__a = new Array(arguments.length -  3);
while (G__22252__i < G__22252__a.length) {G__22252__a[G__22252__i] = arguments[G__22252__i + 3]; ++G__22252__i;}
G__22251 = new cljs.core.IndexedSeq(G__22252__a,0);
}
return G__22247__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22251);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22247.cljs$lang$maxFixedArity = 3;
G__22247.cljs$lang$applyTo = G__22247__4.cljs$lang$applyTo;
G__22247.cljs$core$IFn$_invoke$arity$1 = G__22247__1;
G__22247.cljs$core$IFn$_invoke$arity$2 = G__22247__2;
G__22247.cljs$core$IFn$_invoke$arity$3 = G__22247__3;
G__22247.cljs$core$IFn$_invoke$arity$variadic = G__22247__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22247;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__22253 = null;
var G__22253__2 = (function (a,b){
var G__22237 = (((a == null))?x:a);
var G__22238 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22237,G__22238) : f.call(null,G__22237,G__22238));
});
var G__22253__3 = (function (a,b,c){
var G__22239 = (((a == null))?x:a);
var G__22240 = (((b == null))?y:b);
var G__22241 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22239,G__22240,G__22241) : f.call(null,G__22239,G__22240,G__22241));
});
var G__22253__4 = (function() { 
var G__22254__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__22254 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22255__i = 0, G__22255__a = new Array(arguments.length -  3);
while (G__22255__i < G__22255__a.length) {G__22255__a[G__22255__i] = arguments[G__22255__i + 3]; ++G__22255__i;}
  ds = new cljs.core.IndexedSeq(G__22255__a,0);
} 
return G__22254__delegate.call(this,a,b,c,ds);};
G__22254.cljs$lang$maxFixedArity = 3;
G__22254.cljs$lang$applyTo = (function (arglist__22256){
var a = cljs.core.first(arglist__22256);
arglist__22256 = cljs.core.next(arglist__22256);
var b = cljs.core.first(arglist__22256);
arglist__22256 = cljs.core.next(arglist__22256);
var c = cljs.core.first(arglist__22256);
var ds = cljs.core.rest(arglist__22256);
return G__22254__delegate(a,b,c,ds);
});
G__22254.cljs$core$IFn$_invoke$arity$variadic = G__22254__delegate;
return G__22254;
})()
;
G__22253 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22253__2.call(this,a,b);
case 3:
return G__22253__3.call(this,a,b,c);
default:
var G__22257 = null;
if (arguments.length > 3) {
var G__22258__i = 0, G__22258__a = new Array(arguments.length -  3);
while (G__22258__i < G__22258__a.length) {G__22258__a[G__22258__i] = arguments[G__22258__i + 3]; ++G__22258__i;}
G__22257 = new cljs.core.IndexedSeq(G__22258__a,0);
}
return G__22253__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22257);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22253.cljs$lang$maxFixedArity = 3;
G__22253.cljs$lang$applyTo = G__22253__4.cljs$lang$applyTo;
G__22253.cljs$core$IFn$_invoke$arity$2 = G__22253__2;
G__22253.cljs$core$IFn$_invoke$arity$3 = G__22253__3;
G__22253.cljs$core$IFn$_invoke$arity$variadic = G__22253__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22253;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__22259 = null;
var G__22259__2 = (function (a,b){
var G__22242 = (((a == null))?x:a);
var G__22243 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22242,G__22243) : f.call(null,G__22242,G__22243));
});
var G__22259__3 = (function (a,b,c){
var G__22244 = (((a == null))?x:a);
var G__22245 = (((b == null))?y:b);
var G__22246 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22244,G__22245,G__22246) : f.call(null,G__22244,G__22245,G__22246));
});
var G__22259__4 = (function() { 
var G__22260__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__22260 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__22261__i = 0, G__22261__a = new Array(arguments.length -  3);
while (G__22261__i < G__22261__a.length) {G__22261__a[G__22261__i] = arguments[G__22261__i + 3]; ++G__22261__i;}
  ds = new cljs.core.IndexedSeq(G__22261__a,0);
} 
return G__22260__delegate.call(this,a,b,c,ds);};
G__22260.cljs$lang$maxFixedArity = 3;
G__22260.cljs$lang$applyTo = (function (arglist__22262){
var a = cljs.core.first(arglist__22262);
arglist__22262 = cljs.core.next(arglist__22262);
var b = cljs.core.first(arglist__22262);
arglist__22262 = cljs.core.next(arglist__22262);
var c = cljs.core.first(arglist__22262);
var ds = cljs.core.rest(arglist__22262);
return G__22260__delegate(a,b,c,ds);
});
G__22260.cljs$core$IFn$_invoke$arity$variadic = G__22260__delegate;
return G__22260;
})()
;
G__22259 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__22259__2.call(this,a,b);
case 3:
return G__22259__3.call(this,a,b,c);
default:
var G__22263 = null;
if (arguments.length > 3) {
var G__22264__i = 0, G__22264__a = new Array(arguments.length -  3);
while (G__22264__i < G__22264__a.length) {G__22264__a[G__22264__i] = arguments[G__22264__i + 3]; ++G__22264__i;}
G__22263 = new cljs.core.IndexedSeq(G__22264__a,0);
}
return G__22259__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__22263);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22259.cljs$lang$maxFixedArity = 3;
G__22259.cljs$lang$applyTo = G__22259__4.cljs$lang$applyTo;
G__22259.cljs$core$IFn$_invoke$arity$2 = G__22259__2;
G__22259.cljs$core$IFn$_invoke$arity$3 = G__22259__3;
G__22259.cljs$core$IFn$_invoke$arity$variadic = G__22259__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22259;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__22295 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__22295) : cljs.core.volatile_BANG_.call(null,G__22295));
})();
return ((function (i){
return (function() {
var G__22325 = null;
var G__22325__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22325__1 = (function (result){
var G__22296 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22296) : rf.call(null,G__22296));
});
var G__22325__2 = (function (result,input){
var G__22297 = result;
var G__22298 = (function (){var G__22299 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__22300 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22299,G__22300) : f.call(null,G__22299,G__22300));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22297,G__22298) : rf.call(null,G__22297,G__22298));
});
G__22325 = function(result,input){
switch(arguments.length){
case 0:
return G__22325__0.call(this);
case 1:
return G__22325__1.call(this,result);
case 2:
return G__22325__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22325.cljs$core$IFn$_invoke$arity$0 = G__22325__0;
G__22325.cljs$core$IFn$_invoke$arity$1 = G__22325__1;
G__22325.cljs$core$IFn$_invoke$arity$2 = G__22325__2;
return G__22325;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13530__auto___22326 = size;
var i_22327 = (0);
while(true){
if((i_22327 < n__13530__auto___22326)){
cljs.core.chunk_append(b,(function (){var G__22321 = (idx + i_22327);
var G__22322 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22327);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22321,G__22322) : f.call(null,G__22321,G__22322));
})());

var G__22328 = (i_22327 + (1));
i_22327 = G__22328;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22323 = idx;
var G__22324 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22323,G__22324) : f.call(null,G__22323,G__22324));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__22347 = null;
var G__22347__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22347__1 = (function (result){
var G__22341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22341) : rf.call(null,G__22341));
});
var G__22347__2 = (function (result,input){
var v = (function (){var G__22342 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22342) : f.call(null,G__22342));
})();
if((v == null)){
return result;
} else {
var G__22343 = result;
var G__22344 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22343,G__22344) : rf.call(null,G__22343,G__22344));
}
});
G__22347 = function(result,input){
switch(arguments.length){
case 0:
return G__22347__0.call(this);
case 1:
return G__22347__1.call(this,result);
case 2:
return G__22347__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22347.cljs$core$IFn$_invoke$arity$0 = G__22347__0;
G__22347.cljs$core$IFn$_invoke$arity$1 = G__22347__1;
G__22347.cljs$core$IFn$_invoke$arity$2 = G__22347__2;
return G__22347;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13530__auto___22348 = size;
var i_22349 = (0);
while(true){
if((i_22349 < n__13530__auto___22348)){
var x_22350 = (function (){var G__22345 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22349);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22345) : f.call(null,G__22345));
})();
if((x_22350 == null)){
} else {
cljs.core.chunk_append(b,x_22350);
}

var G__22351 = (i_22349 + (1));
i_22349 = G__22351;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22346 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22346) : f.call(null,G__22346));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__22352 = this$__$1;
return goog.getUid(G__22352);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__22353 = cljs.core.seq(self__.watches);
var chunk__22354 = null;
var count__22355 = (0);
var i__22356 = (0);
while(true){
if((i__22356 < count__22355)){
var vec__22357 = chunk__22354.cljs$core$IIndexed$_nth$arity$2(null,i__22356);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22357,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22357,(1),null);
var G__22358_22367 = key;
var G__22359_22368 = this$__$1;
var G__22360_22369 = oldval;
var G__22361_22370 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22358_22367,G__22359_22368,G__22360_22369,G__22361_22370) : f.call(null,G__22358_22367,G__22359_22368,G__22360_22369,G__22361_22370));

var G__22371 = seq__22353;
var G__22372 = chunk__22354;
var G__22373 = count__22355;
var G__22374 = (i__22356 + (1));
seq__22353 = G__22371;
chunk__22354 = G__22372;
count__22355 = G__22373;
i__22356 = G__22374;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22353);
if(temp__4126__auto__){
var seq__22353__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22353__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__22353__$1);
var G__22375 = cljs.core.chunk_rest(seq__22353__$1);
var G__22376 = c__13430__auto__;
var G__22377 = cljs.core.count(c__13430__auto__);
var G__22378 = (0);
seq__22353 = G__22375;
chunk__22354 = G__22376;
count__22355 = G__22377;
i__22356 = G__22378;
continue;
} else {
var vec__22362 = cljs.core.first(seq__22353__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22362,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22362,(1),null);
var G__22363_22379 = key;
var G__22364_22380 = this$__$1;
var G__22365_22381 = oldval;
var G__22366_22382 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22363_22379,G__22364_22380,G__22365_22381,G__22366_22382) : f.call(null,G__22363_22379,G__22364_22380,G__22365_22381,G__22366_22382));

var G__22383 = cljs.core.next(seq__22353__$1);
var G__22384 = null;
var G__22385 = (0);
var G__22386 = (0);
seq__22353 = G__22383;
chunk__22354 = G__22384;
count__22355 = G__22385;
i__22356 = G__22386;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__22390__delegate = function (x,p__22387){
var map__22389 = p__22387;
var map__22389__$1 = ((cljs.core.seq_QMARK_(map__22389))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__22389):map__22389);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22389__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22389__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__22390 = function (x,var_args){
var p__22387 = null;
if (arguments.length > 1) {
var G__22391__i = 0, G__22391__a = new Array(arguments.length -  1);
while (G__22391__i < G__22391__a.length) {G__22391__a[G__22391__i] = arguments[G__22391__i + 1]; ++G__22391__i;}
  p__22387 = new cljs.core.IndexedSeq(G__22391__a,0);
} 
return G__22390__delegate.call(this,x,p__22387);};
G__22390.cljs$lang$maxFixedArity = 1;
G__22390.cljs$lang$applyTo = (function (arglist__22392){
var x = cljs.core.first(arglist__22392);
var p__22387 = cljs.core.rest(arglist__22392);
return G__22390__delegate(x,p__22387);
});
G__22390.cljs$core$IFn$_invoke$arity$variadic = G__22390__delegate;
return G__22390;
})()
;
atom = function(x,var_args){
var p__22387 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__22393 = null;
if (arguments.length > 1) {
var G__22394__i = 0, G__22394__a = new Array(arguments.length -  1);
while (G__22394__i < G__22394__a.length) {G__22394__a[G__22394__i] = arguments[G__22394__i + 1]; ++G__22394__i;}
G__22393 = new cljs.core.IndexedSeq(G__22394__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__22397 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__22397) : validate.call(null,G__22397));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__22398 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__22398) : cljs.core.pr_str.call(null,G__22398));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22405 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22405) : f.call(null,G__22405));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22406 = a.state;
var G__22407 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22406,G__22407) : f.call(null,G__22406,G__22407));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__22408 = a.state;
var G__22409 = x;
var G__22410 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22408,G__22409,G__22410) : f.call(null,G__22408,G__22409,G__22410));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__22411__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__22411 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__22412__i = 0, G__22412__a = new Array(arguments.length -  4);
while (G__22412__i < G__22412__a.length) {G__22412__a[G__22412__i] = arguments[G__22412__i + 4]; ++G__22412__i;}
  more = new cljs.core.IndexedSeq(G__22412__a,0);
} 
return G__22411__delegate.call(this,a,f,x,y,more);};
G__22411.cljs$lang$maxFixedArity = 4;
G__22411.cljs$lang$applyTo = (function (arglist__22413){
var a = cljs.core.first(arglist__22413);
arglist__22413 = cljs.core.next(arglist__22413);
var f = cljs.core.first(arglist__22413);
arglist__22413 = cljs.core.next(arglist__22413);
var x = cljs.core.first(arglist__22413);
arglist__22413 = cljs.core.next(arglist__22413);
var y = cljs.core.first(arglist__22413);
var more = cljs.core.rest(arglist__22413);
return G__22411__delegate(a,f,x,y,more);
});
G__22411.cljs$core$IFn$_invoke$arity$variadic = G__22411__delegate;
return G__22411;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__22414 = null;
if (arguments.length > 4) {
var G__22415__i = 0, G__22415__a = new Array(arguments.length -  4);
while (G__22415__i < G__22415__a.length) {G__22415__a[G__22415__i] = arguments[G__22415__i + 4]; ++G__22415__i;}
G__22414 = new cljs.core.IndexedSeq(G__22415__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__22414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22482 = null;
var G__22482__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22482__1 = (function (result){
var G__22449 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22449) : rf.call(null,G__22449));
});
var G__22482__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__22450 = i;
var G__22451 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22450,G__22451) : f.call(null,G__22450,G__22451));
})();
if((v == null)){
return result;
} else {
var G__22452 = result;
var G__22453 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22452,G__22453) : rf.call(null,G__22452,G__22453));
}
});
G__22482 = function(result,input){
switch(arguments.length){
case 0:
return G__22482__0.call(this);
case 1:
return G__22482__1.call(this,result);
case 2:
return G__22482__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22482.cljs$core$IFn$_invoke$arity$0 = G__22482__0;
G__22482.cljs$core$IFn$_invoke$arity$1 = G__22482__1;
G__22482.cljs$core$IFn$_invoke$arity$2 = G__22482__2;
return G__22482;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13530__auto___22483 = size;
var i_22484 = (0);
while(true){
if((i_22484 < n__13530__auto___22483)){
var x_22485 = (function (){var G__22478 = (idx + i_22484);
var G__22479 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22484);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22478,G__22479) : f.call(null,G__22478,G__22479));
})();
if((x_22485 == null)){
} else {
cljs.core.chunk_append(b,x_22485);
}

var G__22486 = (i_22484 + (1));
i_22484 = G__22486;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__22480 = idx;
var G__22481 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22480,G__22481) : f.call(null,G__22480,G__22481));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__22700 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22700) : p.call(null,G__22700));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22702 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22702) : p.call(null,G__22702));
})();
if(cljs.core.truth_(and__12631__auto__)){
var G__22703 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22703) : p.call(null,G__22703));
} else {
return and__12631__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22705 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22705) : p.call(null,G__22705));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22707 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22707) : p.call(null,G__22707));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var G__22708 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__22708) : p.call(null,G__22708));
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__22877__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__22877 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22878__i = 0, G__22878__a = new Array(arguments.length -  3);
while (G__22878__i < G__22878__a.length) {G__22878__a[G__22878__i] = arguments[G__22878__i + 3]; ++G__22878__i;}
  args = new cljs.core.IndexedSeq(G__22878__a,0);
} 
return G__22877__delegate.call(this,x,y,z,args);};
G__22877.cljs$lang$maxFixedArity = 3;
G__22877.cljs$lang$applyTo = (function (arglist__22879){
var x = cljs.core.first(arglist__22879);
arglist__22879 = cljs.core.next(arglist__22879);
var y = cljs.core.first(arglist__22879);
arglist__22879 = cljs.core.next(arglist__22879);
var z = cljs.core.first(arglist__22879);
var args = cljs.core.rest(arglist__22879);
return G__22877__delegate(x,y,z,args);
});
G__22877.cljs$core$IFn$_invoke$arity$variadic = G__22877__delegate;
return G__22877;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__22880 = null;
if (arguments.length > 3) {
var G__22881__i = 0, G__22881__a = new Array(arguments.length -  3);
while (G__22881__i < G__22881__a.length) {G__22881__a[G__22881__i] = arguments[G__22881__i + 3]; ++G__22881__i;}
G__22880 = new cljs.core.IndexedSeq(G__22881__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22740 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22740) : p1.call(null,G__22740));
})();
if(cljs.core.truth_(and__12631__auto__)){
var G__22741 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22741) : p2.call(null,G__22741));
} else {
return and__12631__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22743 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22743) : p1.call(null,G__22743));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22745 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22745) : p1.call(null,G__22745));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var and__12631__auto____$2 = (function (){var G__22747 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22747) : p2.call(null,G__22747));
})();
if(cljs.core.truth_(and__12631__auto____$2)){
var G__22748 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22748) : p2.call(null,G__22748));
} else {
return and__12631__auto____$2;
}
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22750 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22750) : p1.call(null,G__22750));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22752 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22752) : p1.call(null,G__22752));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var and__12631__auto____$2 = (function (){var G__22754 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22754) : p1.call(null,G__22754));
})();
if(cljs.core.truth_(and__12631__auto____$2)){
var and__12631__auto____$3 = (function (){var G__22756 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22756) : p2.call(null,G__22756));
})();
if(cljs.core.truth_(and__12631__auto____$3)){
var and__12631__auto____$4 = (function (){var G__22758 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22758) : p2.call(null,G__22758));
})();
if(cljs.core.truth_(and__12631__auto____$4)){
var G__22759 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22759) : p2.call(null,G__22759));
} else {
return and__12631__auto____$4;
}
} else {
return and__12631__auto____$3;
}
} else {
return and__12631__auto____$2;
}
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__22882__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22487_SHARP_){
var and__12631__auto__ = (function (){var G__22764 = p1__22487_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22764) : p1.call(null,G__22764));
})();
if(cljs.core.truth_(and__12631__auto__)){
var G__22765 = p1__22487_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22765) : p2.call(null,G__22765));
} else {
return and__12631__auto__;
}
}),args)));
};
var G__22882 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22883__i = 0, G__22883__a = new Array(arguments.length -  3);
while (G__22883__i < G__22883__a.length) {G__22883__a[G__22883__i] = arguments[G__22883__i + 3]; ++G__22883__i;}
  args = new cljs.core.IndexedSeq(G__22883__a,0);
} 
return G__22882__delegate.call(this,x,y,z,args);};
G__22882.cljs$lang$maxFixedArity = 3;
G__22882.cljs$lang$applyTo = (function (arglist__22884){
var x = cljs.core.first(arglist__22884);
arglist__22884 = cljs.core.next(arglist__22884);
var y = cljs.core.first(arglist__22884);
arglist__22884 = cljs.core.next(arglist__22884);
var z = cljs.core.first(arglist__22884);
var args = cljs.core.rest(arglist__22884);
return G__22882__delegate(x,y,z,args);
});
G__22882.cljs$core$IFn$_invoke$arity$variadic = G__22882__delegate;
return G__22882;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__22885 = null;
if (arguments.length > 3) {
var G__22886__i = 0, G__22886__a = new Array(arguments.length -  3);
while (G__22886__i < G__22886__a.length) {G__22886__a[G__22886__i] = arguments[G__22886__i + 3]; ++G__22886__i;}
G__22885 = new cljs.core.IndexedSeq(G__22886__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22811 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22811) : p1.call(null,G__22811));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22813 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22813) : p2.call(null,G__22813));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var G__22814 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22814) : p3.call(null,G__22814));
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22816 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22816) : p1.call(null,G__22816));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22818 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22818) : p2.call(null,G__22818));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var and__12631__auto____$2 = (function (){var G__22820 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22820) : p3.call(null,G__22820));
})();
if(cljs.core.truth_(and__12631__auto____$2)){
var and__12631__auto____$3 = (function (){var G__22822 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22822) : p1.call(null,G__22822));
})();
if(cljs.core.truth_(and__12631__auto____$3)){
var and__12631__auto____$4 = (function (){var G__22824 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22824) : p2.call(null,G__22824));
})();
if(cljs.core.truth_(and__12631__auto____$4)){
var G__22825 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22825) : p3.call(null,G__22825));
} else {
return and__12631__auto____$4;
}
} else {
return and__12631__auto____$3;
}
} else {
return and__12631__auto____$2;
}
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__12631__auto__ = (function (){var G__22827 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22827) : p1.call(null,G__22827));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22829 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22829) : p2.call(null,G__22829));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var and__12631__auto____$2 = (function (){var G__22831 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22831) : p3.call(null,G__22831));
})();
if(cljs.core.truth_(and__12631__auto____$2)){
var and__12631__auto____$3 = (function (){var G__22833 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22833) : p1.call(null,G__22833));
})();
if(cljs.core.truth_(and__12631__auto____$3)){
var and__12631__auto____$4 = (function (){var G__22835 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22835) : p2.call(null,G__22835));
})();
if(cljs.core.truth_(and__12631__auto____$4)){
var and__12631__auto____$5 = (function (){var G__22837 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22837) : p3.call(null,G__22837));
})();
if(cljs.core.truth_(and__12631__auto____$5)){
var and__12631__auto____$6 = (function (){var G__22839 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22839) : p1.call(null,G__22839));
})();
if(cljs.core.truth_(and__12631__auto____$6)){
var and__12631__auto____$7 = (function (){var G__22841 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22841) : p2.call(null,G__22841));
})();
if(cljs.core.truth_(and__12631__auto____$7)){
var G__22842 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22842) : p3.call(null,G__22842));
} else {
return and__12631__auto____$7;
}
} else {
return and__12631__auto____$6;
}
} else {
return and__12631__auto____$5;
}
} else {
return and__12631__auto____$4;
}
} else {
return and__12631__auto____$3;
}
} else {
return and__12631__auto____$2;
}
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__22887__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__22488_SHARP_){
var and__12631__auto__ = (function (){var G__22849 = p1__22488_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__22849) : p1.call(null,G__22849));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22851 = p1__22488_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__22851) : p2.call(null,G__22851));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var G__22852 = p1__22488_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__22852) : p3.call(null,G__22852));
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
}),args)));
};
var G__22887 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22888__i = 0, G__22888__a = new Array(arguments.length -  3);
while (G__22888__i < G__22888__a.length) {G__22888__a[G__22888__i] = arguments[G__22888__i + 3]; ++G__22888__i;}
  args = new cljs.core.IndexedSeq(G__22888__a,0);
} 
return G__22887__delegate.call(this,x,y,z,args);};
G__22887.cljs$lang$maxFixedArity = 3;
G__22887.cljs$lang$applyTo = (function (arglist__22889){
var x = cljs.core.first(arglist__22889);
arglist__22889 = cljs.core.next(arglist__22889);
var y = cljs.core.first(arglist__22889);
arglist__22889 = cljs.core.next(arglist__22889);
var z = cljs.core.first(arglist__22889);
var args = cljs.core.rest(arglist__22889);
return G__22887__delegate(x,y,z,args);
});
G__22887.cljs$core$IFn$_invoke$arity$variadic = G__22887__delegate;
return G__22887;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__22890 = null;
if (arguments.length > 3) {
var G__22891__i = 0, G__22891__a = new Array(arguments.length -  3);
while (G__22891__i < G__22891__a.length) {G__22891__a[G__22891__i] = arguments[G__22891__i + 3]; ++G__22891__i;}
G__22890 = new cljs.core.IndexedSeq(G__22891__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22890);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__22892__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22489_SHARP_){
var G__22868 = x;
return (p1__22489_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22489_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22868) : p1__22489_SHARP_.call(null,G__22868));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22490_SHARP_){
var and__12631__auto__ = (function (){var G__22870 = x;
return (p1__22490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22490_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22870) : p1__22490_SHARP_.call(null,G__22870));
})();
if(cljs.core.truth_(and__12631__auto__)){
var G__22871 = y;
return (p1__22490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22490_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22871) : p1__22490_SHARP_.call(null,G__22871));
} else {
return and__12631__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22491_SHARP_){
var and__12631__auto__ = (function (){var G__22873 = x;
return (p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22873) : p1__22491_SHARP_.call(null,G__22873));
})();
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__22875 = y;
return (p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22875) : p1__22491_SHARP_.call(null,G__22875));
})();
if(cljs.core.truth_(and__12631__auto____$1)){
var G__22876 = z;
return (p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22876) : p1__22491_SHARP_.call(null,G__22876));
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__22893__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__22492_SHARP_){
return cljs.core.every_QMARK_(p1__22492_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__22893 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22894__i = 0, G__22894__a = new Array(arguments.length -  3);
while (G__22894__i < G__22894__a.length) {G__22894__a[G__22894__i] = arguments[G__22894__i + 3]; ++G__22894__i;}
  args = new cljs.core.IndexedSeq(G__22894__a,0);
} 
return G__22893__delegate.call(this,x,y,z,args);};
G__22893.cljs$lang$maxFixedArity = 3;
G__22893.cljs$lang$applyTo = (function (arglist__22895){
var x = cljs.core.first(arglist__22895);
arglist__22895 = cljs.core.next(arglist__22895);
var y = cljs.core.first(arglist__22895);
arglist__22895 = cljs.core.next(arglist__22895);
var z = cljs.core.first(arglist__22895);
var args = cljs.core.rest(arglist__22895);
return G__22893__delegate(x,y,z,args);
});
G__22893.cljs$core$IFn$_invoke$arity$variadic = G__22893__delegate;
return G__22893;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__22896 = null;
if (arguments.length > 3) {
var G__22897__i = 0, G__22897__a = new Array(arguments.length -  3);
while (G__22897__i < G__22897__a.length) {G__22897__a[G__22897__i] = arguments[G__22897__i + 3]; ++G__22897__i;}
G__22896 = new cljs.core.IndexedSeq(G__22897__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__22892 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__22898__i = 0, G__22898__a = new Array(arguments.length -  3);
while (G__22898__i < G__22898__a.length) {G__22898__a[G__22898__i] = arguments[G__22898__i + 3]; ++G__22898__i;}
  ps = new cljs.core.IndexedSeq(G__22898__a,0);
} 
return G__22892__delegate.call(this,p1,p2,p3,ps);};
G__22892.cljs$lang$maxFixedArity = 3;
G__22892.cljs$lang$applyTo = (function (arglist__22899){
var p1 = cljs.core.first(arglist__22899);
arglist__22899 = cljs.core.next(arglist__22899);
var p2 = cljs.core.first(arglist__22899);
arglist__22899 = cljs.core.next(arglist__22899);
var p3 = cljs.core.first(arglist__22899);
var ps = cljs.core.rest(arglist__22899);
return G__22892__delegate(p1,p2,p3,ps);
});
G__22892.cljs$core$IFn$_invoke$arity$variadic = G__22892__delegate;
return G__22892;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__22900 = null;
if (arguments.length > 3) {
var G__22901__i = 0, G__22901__a = new Array(arguments.length -  3);
while (G__22901__i < G__22901__a.length) {G__22901__a[G__22901__i] = arguments[G__22901__i + 3]; ++G__22901__i;}
G__22900 = new cljs.core.IndexedSeq(G__22901__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__22900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__23107 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23107) : p.call(null,G__23107));
});
var sp1__2 = (function (x,y){
var or__12643__auto__ = (function (){var G__23109 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23109) : p.call(null,G__23109));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var G__23110 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23110) : p.call(null,G__23110));
}
});
var sp1__3 = (function (x,y,z){
var or__12643__auto__ = (function (){var G__23112 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23112) : p.call(null,G__23112));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23114 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23114) : p.call(null,G__23114));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var G__23115 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23115) : p.call(null,G__23115));
}
}
});
var sp1__4 = (function() { 
var G__23276__delegate = function (x,y,z,args){
var or__12643__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__23276 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23277__i = 0, G__23277__a = new Array(arguments.length -  3);
while (G__23277__i < G__23277__a.length) {G__23277__a[G__23277__i] = arguments[G__23277__i + 3]; ++G__23277__i;}
  args = new cljs.core.IndexedSeq(G__23277__a,0);
} 
return G__23276__delegate.call(this,x,y,z,args);};
G__23276.cljs$lang$maxFixedArity = 3;
G__23276.cljs$lang$applyTo = (function (arglist__23278){
var x = cljs.core.first(arglist__23278);
arglist__23278 = cljs.core.next(arglist__23278);
var y = cljs.core.first(arglist__23278);
arglist__23278 = cljs.core.next(arglist__23278);
var z = cljs.core.first(arglist__23278);
var args = cljs.core.rest(arglist__23278);
return G__23276__delegate(x,y,z,args);
});
G__23276.cljs$core$IFn$_invoke$arity$variadic = G__23276__delegate;
return G__23276;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__23279 = null;
if (arguments.length > 3) {
var G__23280__i = 0, G__23280__a = new Array(arguments.length -  3);
while (G__23280__i < G__23280__a.length) {G__23280__a[G__23280__i] = arguments[G__23280__i + 3]; ++G__23280__i;}
G__23279 = new cljs.core.IndexedSeq(G__23280__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__12643__auto__ = (function (){var G__23147 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23147) : p1.call(null,G__23147));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var G__23148 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23148) : p2.call(null,G__23148));
}
});
var sp2__2 = (function (x,y){
var or__12643__auto__ = (function (){var G__23150 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23150) : p1.call(null,G__23150));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23152 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23152) : p1.call(null,G__23152));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var G__23154 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23154) : p2.call(null,G__23154));
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
var G__23155 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23155) : p2.call(null,G__23155));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__12643__auto__ = (function (){var G__23157 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23157) : p1.call(null,G__23157));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23159 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23159) : p1.call(null,G__23159));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var G__23161 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23161) : p1.call(null,G__23161));
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
var or__12643__auto____$3 = (function (){var G__23163 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23163) : p2.call(null,G__23163));
})();
if(cljs.core.truth_(or__12643__auto____$3)){
return or__12643__auto____$3;
} else {
var or__12643__auto____$4 = (function (){var G__23165 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23165) : p2.call(null,G__23165));
})();
if(cljs.core.truth_(or__12643__auto____$4)){
return or__12643__auto____$4;
} else {
var G__23166 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23166) : p2.call(null,G__23166));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__23281__delegate = function (x,y,z,args){
var or__12643__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.some(((function (or__12643__auto__){
return (function (p1__22902_SHARP_){
var or__12643__auto____$1 = (function (){var G__23168 = p1__22902_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23168) : p1.call(null,G__23168));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var G__23169 = p1__22902_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23169) : p2.call(null,G__23169));
}
});})(or__12643__auto__))
,args);
}
};
var G__23281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23282__i = 0, G__23282__a = new Array(arguments.length -  3);
while (G__23282__i < G__23282__a.length) {G__23282__a[G__23282__i] = arguments[G__23282__i + 3]; ++G__23282__i;}
  args = new cljs.core.IndexedSeq(G__23282__a,0);
} 
return G__23281__delegate.call(this,x,y,z,args);};
G__23281.cljs$lang$maxFixedArity = 3;
G__23281.cljs$lang$applyTo = (function (arglist__23283){
var x = cljs.core.first(arglist__23283);
arglist__23283 = cljs.core.next(arglist__23283);
var y = cljs.core.first(arglist__23283);
arglist__23283 = cljs.core.next(arglist__23283);
var z = cljs.core.first(arglist__23283);
var args = cljs.core.rest(arglist__23283);
return G__23281__delegate(x,y,z,args);
});
G__23281.cljs$core$IFn$_invoke$arity$variadic = G__23281__delegate;
return G__23281;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__23284 = null;
if (arguments.length > 3) {
var G__23285__i = 0, G__23285__a = new Array(arguments.length -  3);
while (G__23285__i < G__23285__a.length) {G__23285__a[G__23285__i] = arguments[G__23285__i + 3]; ++G__23285__i;}
G__23284 = new cljs.core.IndexedSeq(G__23285__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__12643__auto__ = (function (){var G__23215 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23215) : p1.call(null,G__23215));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23217 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23217) : p2.call(null,G__23217));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var G__23218 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23218) : p3.call(null,G__23218));
}
}
});
var sp3__2 = (function (x,y){
var or__12643__auto__ = (function (){var G__23220 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23220) : p1.call(null,G__23220));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23222 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23222) : p2.call(null,G__23222));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var G__23224 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23224) : p3.call(null,G__23224));
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
var or__12643__auto____$3 = (function (){var G__23226 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23226) : p1.call(null,G__23226));
})();
if(cljs.core.truth_(or__12643__auto____$3)){
return or__12643__auto____$3;
} else {
var or__12643__auto____$4 = (function (){var G__23228 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23228) : p2.call(null,G__23228));
})();
if(cljs.core.truth_(or__12643__auto____$4)){
return or__12643__auto____$4;
} else {
var G__23229 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23229) : p3.call(null,G__23229));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__12643__auto__ = (function (){var G__23231 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23231) : p1.call(null,G__23231));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23233 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23233) : p2.call(null,G__23233));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var G__23235 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23235) : p3.call(null,G__23235));
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
var or__12643__auto____$3 = (function (){var G__23237 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23237) : p1.call(null,G__23237));
})();
if(cljs.core.truth_(or__12643__auto____$3)){
return or__12643__auto____$3;
} else {
var or__12643__auto____$4 = (function (){var G__23239 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23239) : p2.call(null,G__23239));
})();
if(cljs.core.truth_(or__12643__auto____$4)){
return or__12643__auto____$4;
} else {
var or__12643__auto____$5 = (function (){var G__23241 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23241) : p3.call(null,G__23241));
})();
if(cljs.core.truth_(or__12643__auto____$5)){
return or__12643__auto____$5;
} else {
var or__12643__auto____$6 = (function (){var G__23243 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23243) : p1.call(null,G__23243));
})();
if(cljs.core.truth_(or__12643__auto____$6)){
return or__12643__auto____$6;
} else {
var or__12643__auto____$7 = (function (){var G__23245 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23245) : p2.call(null,G__23245));
})();
if(cljs.core.truth_(or__12643__auto____$7)){
return or__12643__auto____$7;
} else {
var G__23246 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23246) : p3.call(null,G__23246));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__23286__delegate = function (x,y,z,args){
var or__12643__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.some(((function (or__12643__auto__){
return (function (p1__22903_SHARP_){
var or__12643__auto____$1 = (function (){var G__23248 = p1__22903_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23248) : p1.call(null,G__23248));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var G__23250 = p1__22903_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23250) : p2.call(null,G__23250));
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
var G__23251 = p1__22903_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23251) : p3.call(null,G__23251));
}
}
});})(or__12643__auto__))
,args);
}
};
var G__23286 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23287__i = 0, G__23287__a = new Array(arguments.length -  3);
while (G__23287__i < G__23287__a.length) {G__23287__a[G__23287__i] = arguments[G__23287__i + 3]; ++G__23287__i;}
  args = new cljs.core.IndexedSeq(G__23287__a,0);
} 
return G__23286__delegate.call(this,x,y,z,args);};
G__23286.cljs$lang$maxFixedArity = 3;
G__23286.cljs$lang$applyTo = (function (arglist__23288){
var x = cljs.core.first(arglist__23288);
arglist__23288 = cljs.core.next(arglist__23288);
var y = cljs.core.first(arglist__23288);
arglist__23288 = cljs.core.next(arglist__23288);
var z = cljs.core.first(arglist__23288);
var args = cljs.core.rest(arglist__23288);
return G__23286__delegate(x,y,z,args);
});
G__23286.cljs$core$IFn$_invoke$arity$variadic = G__23286__delegate;
return G__23286;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__23289 = null;
if (arguments.length > 3) {
var G__23290__i = 0, G__23290__a = new Array(arguments.length -  3);
while (G__23290__i < G__23290__a.length) {G__23290__a[G__23290__i] = arguments[G__23290__i + 3]; ++G__23290__i;}
G__23289 = new cljs.core.IndexedSeq(G__23290__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23289);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__23291__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__22904_SHARP_){
var G__23267 = x;
return (p1__22904_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22904_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23267) : p1__22904_SHARP_.call(null,G__23267));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__22905_SHARP_){
var or__12643__auto__ = (function (){var G__23269 = x;
return (p1__22905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23269) : p1__22905_SHARP_.call(null,G__23269));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var G__23270 = y;
return (p1__22905_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22905_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23270) : p1__22905_SHARP_.call(null,G__23270));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__22906_SHARP_){
var or__12643__auto__ = (function (){var G__23272 = x;
return (p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23272) : p1__22906_SHARP_.call(null,G__23272));
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var G__23274 = y;
return (p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23274) : p1__22906_SHARP_.call(null,G__23274));
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var G__23275 = z;
return (p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22906_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23275) : p1__22906_SHARP_.call(null,G__23275));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__23292__delegate = function (x,y,z,args){
var or__12643__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.some(((function (or__12643__auto__,ps__$1){
return (function (p1__22907_SHARP_){
return cljs.core.some(p1__22907_SHARP_,args);
});})(or__12643__auto__,ps__$1))
,ps__$1);
}
};
var G__23292 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23293__i = 0, G__23293__a = new Array(arguments.length -  3);
while (G__23293__i < G__23293__a.length) {G__23293__a[G__23293__i] = arguments[G__23293__i + 3]; ++G__23293__i;}
  args = new cljs.core.IndexedSeq(G__23293__a,0);
} 
return G__23292__delegate.call(this,x,y,z,args);};
G__23292.cljs$lang$maxFixedArity = 3;
G__23292.cljs$lang$applyTo = (function (arglist__23294){
var x = cljs.core.first(arglist__23294);
arglist__23294 = cljs.core.next(arglist__23294);
var y = cljs.core.first(arglist__23294);
arglist__23294 = cljs.core.next(arglist__23294);
var z = cljs.core.first(arglist__23294);
var args = cljs.core.rest(arglist__23294);
return G__23292__delegate(x,y,z,args);
});
G__23292.cljs$core$IFn$_invoke$arity$variadic = G__23292__delegate;
return G__23292;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__23295 = null;
if (arguments.length > 3) {
var G__23296__i = 0, G__23296__a = new Array(arguments.length -  3);
while (G__23296__i < G__23296__a.length) {G__23296__a[G__23296__i] = arguments[G__23296__i + 3]; ++G__23296__i;}
G__23295 = new cljs.core.IndexedSeq(G__23296__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23295);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__23291 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23297__i = 0, G__23297__a = new Array(arguments.length -  3);
while (G__23297__i < G__23297__a.length) {G__23297__a[G__23297__i] = arguments[G__23297__i + 3]; ++G__23297__i;}
  ps = new cljs.core.IndexedSeq(G__23297__a,0);
} 
return G__23291__delegate.call(this,p1,p2,p3,ps);};
G__23291.cljs$lang$maxFixedArity = 3;
G__23291.cljs$lang$applyTo = (function (arglist__23298){
var p1 = cljs.core.first(arglist__23298);
arglist__23298 = cljs.core.next(arglist__23298);
var p2 = cljs.core.first(arglist__23298);
arglist__23298 = cljs.core.next(arglist__23298);
var p3 = cljs.core.first(arglist__23298);
var ps = cljs.core.rest(arglist__23298);
return G__23291__delegate(p1,p2,p3,ps);
});
G__23291.cljs$core$IFn$_invoke$arity$variadic = G__23291__delegate;
return G__23291;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__23299 = null;
if (arguments.length > 3) {
var G__23300__i = 0, G__23300__a = new Array(arguments.length -  3);
while (G__23300__i < G__23300__a.length) {G__23300__a[G__23300__i] = arguments[G__23300__i + 3]; ++G__23300__i;}
G__23299 = new cljs.core.IndexedSeq(G__23300__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23299);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__23355 = null;
var G__23355__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23355__1 = (function (result){
var G__23341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23341) : rf.call(null,G__23341));
});
var G__23355__2 = (function (result,input){
var G__23342 = result;
var G__23343 = (function (){var G__23344 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23344) : f.call(null,G__23344));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23342,G__23343) : rf.call(null,G__23342,G__23343));
});
var G__23355__3 = (function() { 
var G__23356__delegate = function (result,input,inputs){
var G__23345 = result;
var G__23346 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23345,G__23346) : rf.call(null,G__23345,G__23346));
};
var G__23356 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__23357__i = 0, G__23357__a = new Array(arguments.length -  2);
while (G__23357__i < G__23357__a.length) {G__23357__a[G__23357__i] = arguments[G__23357__i + 2]; ++G__23357__i;}
  inputs = new cljs.core.IndexedSeq(G__23357__a,0);
} 
return G__23356__delegate.call(this,result,input,inputs);};
G__23356.cljs$lang$maxFixedArity = 2;
G__23356.cljs$lang$applyTo = (function (arglist__23358){
var result = cljs.core.first(arglist__23358);
arglist__23358 = cljs.core.next(arglist__23358);
var input = cljs.core.first(arglist__23358);
var inputs = cljs.core.rest(arglist__23358);
return G__23356__delegate(result,input,inputs);
});
G__23356.cljs$core$IFn$_invoke$arity$variadic = G__23356__delegate;
return G__23356;
})()
;
G__23355 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__23355__0.call(this);
case 1:
return G__23355__1.call(this,result);
case 2:
return G__23355__2.call(this,result,input);
default:
var G__23359 = null;
if (arguments.length > 2) {
var G__23360__i = 0, G__23360__a = new Array(arguments.length -  2);
while (G__23360__i < G__23360__a.length) {G__23360__a[G__23360__i] = arguments[G__23360__i + 2]; ++G__23360__i;}
G__23359 = new cljs.core.IndexedSeq(G__23360__a,0);
}
return G__23355__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__23359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23355.cljs$lang$maxFixedArity = 2;
G__23355.cljs$lang$applyTo = G__23355__3.cljs$lang$applyTo;
G__23355.cljs$core$IFn$_invoke$arity$0 = G__23355__0;
G__23355.cljs$core$IFn$_invoke$arity$1 = G__23355__1;
G__23355.cljs$core$IFn$_invoke$arity$2 = G__23355__2;
G__23355.cljs$core$IFn$_invoke$arity$variadic = G__23355__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23355;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13530__auto___23361 = size;
var i_23362 = (0);
while(true){
if((i_23362 < n__13530__auto___23361)){
cljs.core.chunk_append(b,(function (){var G__23347 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23362);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23347) : f.call(null,G__23347));
})());

var G__23363 = (i_23362 + (1));
i_23362 = G__23363;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23348 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23348) : f.call(null,G__23348));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__23349 = cljs.core.first(s1);
var G__23350 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23349,G__23350) : f.call(null,G__23349,G__23350));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__23351 = cljs.core.first(s1);
var G__23352 = cljs.core.first(s2);
var G__23353 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23351,G__23352,G__23353) : f.call(null,G__23351,G__23352,G__23353));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__23364__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__23301_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__23301_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__23364 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23365__i = 0, G__23365__a = new Array(arguments.length -  4);
while (G__23365__i < G__23365__a.length) {G__23365__a[G__23365__i] = arguments[G__23365__i + 4]; ++G__23365__i;}
  colls = new cljs.core.IndexedSeq(G__23365__a,0);
} 
return G__23364__delegate.call(this,f,c1,c2,c3,colls);};
G__23364.cljs$lang$maxFixedArity = 4;
G__23364.cljs$lang$applyTo = (function (arglist__23366){
var f = cljs.core.first(arglist__23366);
arglist__23366 = cljs.core.next(arglist__23366);
var c1 = cljs.core.first(arglist__23366);
arglist__23366 = cljs.core.next(arglist__23366);
var c2 = cljs.core.first(arglist__23366);
arglist__23366 = cljs.core.next(arglist__23366);
var c3 = cljs.core.first(arglist__23366);
var colls = cljs.core.rest(arglist__23366);
return G__23364__delegate(f,c1,c2,c3,colls);
});
G__23364.cljs$core$IFn$_invoke$arity$variadic = G__23364__delegate;
return G__23364;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__23367 = null;
if (arguments.length > 4) {
var G__23368__i = 0, G__23368__a = new Array(arguments.length -  4);
while (G__23368__i < G__23368__a.length) {G__23368__a[G__23368__i] = arguments[G__23368__i + 4]; ++G__23368__i;}
G__23367 = new cljs.core.IndexedSeq(G__23368__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23367);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23377 = null;
var G__23377__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23377__1 = (function (result){
var G__23374 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23374) : rf.call(null,G__23374));
});
var G__23377__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__23375 = result;
var G__23376 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23375,G__23376) : rf.call(null,G__23375,G__23376));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__23377 = function(result,input){
switch(arguments.length){
case 0:
return G__23377__0.call(this);
case 1:
return G__23377__1.call(this,result);
case 2:
return G__23377__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23377.cljs$core$IFn$_invoke$arity$0 = G__23377__0;
G__23377.cljs$core$IFn$_invoke$arity$1 = G__23377__1;
G__23377.cljs$core$IFn$_invoke$arity$2 = G__23377__2;
return G__23377;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__23384 = null;
var G__23384__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23384__1 = (function (result){
var G__23381 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23381) : rf.call(null,G__23381));
});
var G__23384__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__23382 = result;
var G__23383 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23382,G__23383) : rf.call(null,G__23382,G__23383));
}
});
G__23384 = function(result,input){
switch(arguments.length){
case 0:
return G__23384__0.call(this);
case 1:
return G__23384__1.call(this,result);
case 2:
return G__23384__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23384.cljs$core$IFn$_invoke$arity$0 = G__23384__0;
G__23384.cljs$core$IFn$_invoke$arity$1 = G__23384__1;
G__23384.cljs$core$IFn$_invoke$arity$2 = G__23384__2;
return G__23384;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__23385 = (n__$1 - (1));
var G__23386 = cljs.core.rest(s);
n__$1 = G__23385;
coll__$1 = G__23386;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__23389 = cljs.core.next(s);
var G__23390 = cljs.core.next(lead);
s = G__23389;
lead = G__23390;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__23403 = null;
var G__23403__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23403__1 = (function (result){
var G__23397 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23397) : rf.call(null,G__23397));
});
var G__23403__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__12631__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__12631__auto__)){
var G__23398 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23398) : pred.call(null,G__23398));
} else {
return and__12631__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__23399 = result;
var G__23400 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23399,G__23400) : rf.call(null,G__23399,G__23400));
}
});
G__23403 = function(result,input){
switch(arguments.length){
case 0:
return G__23403__0.call(this);
case 1:
return G__23403__1.call(this,result);
case 2:
return G__23403__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23403.cljs$core$IFn$_invoke$arity$0 = G__23403__0;
G__23403.cljs$core$IFn$_invoke$arity$1 = G__23403__1;
G__23403.cljs$core$IFn$_invoke$arity$2 = G__23403__2;
return G__23403;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__12631__auto__ = s;
if(and__12631__auto__){
var G__23402 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__23402) : pred__$1.call(null,G__23402));
} else {
return and__12631__auto__;
}
})())){
var G__23404 = pred__$1;
var G__23405 = cljs.core.rest(s);
pred__$1 = G__23404;
coll__$1 = G__23405;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__23414 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23414) : f.call(null,G__23414));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__23417__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__23417 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23418__i = 0, G__23418__a = new Array(arguments.length -  2);
while (G__23418__i < G__23418__a.length) {G__23418__a[G__23418__i] = arguments[G__23418__i + 2]; ++G__23418__i;}
  colls = new cljs.core.IndexedSeq(G__23418__a,0);
} 
return G__23417__delegate.call(this,c1,c2,colls);};
G__23417.cljs$lang$maxFixedArity = 2;
G__23417.cljs$lang$applyTo = (function (arglist__23419){
var c1 = cljs.core.first(arglist__23419);
arglist__23419 = cljs.core.next(arglist__23419);
var c2 = cljs.core.first(arglist__23419);
var colls = cljs.core.rest(arglist__23419);
return G__23417__delegate(c1,c2,colls);
});
G__23417.cljs$core$IFn$_invoke$arity$variadic = G__23417__delegate;
return G__23417;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__23420 = null;
if (arguments.length > 2) {
var G__23421__i = 0, G__23421__a = new Array(arguments.length -  2);
while (G__23421__i < G__23421__a.length) {G__23421__a[G__23421__i] = arguments[G__23421__i + 2]; ++G__23421__i;}
G__23420 = new cljs.core.IndexedSeq(G__23421__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__23420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__23436 = null;
var G__23436__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23436__1 = (function (result){
var G__23429 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23429) : rf.call(null,G__23429));
});
var G__23436__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__23430 = result;
var G__23431 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23430,G__23431) : rf.call(null,G__23430,G__23431));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__23432 = sepr;
var G__23433 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23432,G__23433) : rf.call(null,G__23432,G__23433));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__23434 = result;
var G__23435 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23434,G__23435) : rf.call(null,G__23434,G__23435));
}
});
G__23436 = function(result,input){
switch(arguments.length){
case 0:
return G__23436__0.call(this);
case 1:
return G__23436__1.call(this,result);
case 2:
return G__23436__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23436.cljs$core$IFn$_invoke$arity$0 = G__23436__0;
G__23436.cljs$core$IFn$_invoke$arity$1 = G__23436__1;
G__23436.cljs$core$IFn$_invoke$arity$2 = G__23436__2;
return G__23436;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__23445__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__23445 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__23446__i = 0, G__23446__a = new Array(arguments.length -  1);
while (G__23446__i < G__23446__a.length) {G__23446__a[G__23446__i] = arguments[G__23446__i + 1]; ++G__23446__i;}
  colls = new cljs.core.IndexedSeq(G__23446__a,0);
} 
return G__23445__delegate.call(this,f,colls);};
G__23445.cljs$lang$maxFixedArity = 1;
G__23445.cljs$lang$applyTo = (function (arglist__23447){
var f = cljs.core.first(arglist__23447);
var colls = cljs.core.rest(arglist__23447);
return G__23445__delegate(f,colls);
});
G__23445.cljs$core$IFn$_invoke$arity$variadic = G__23445__delegate;
return G__23445;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__23448 = null;
if (arguments.length > 1) {
var G__23449__i = 0, G__23449__a = new Array(arguments.length -  1);
while (G__23449__i < G__23449__a.length) {G__23449__a[G__23449__i] = arguments[G__23449__i + 1]; ++G__23449__i;}
G__23448 = new cljs.core.IndexedSeq(G__23449__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__23468 = null;
var G__23468__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23468__1 = (function (result){
var G__23462 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23462) : rf.call(null,G__23462));
});
var G__23468__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__23463 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23463) : pred.call(null,G__23463));
})())){
var G__23464 = result;
var G__23465 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23464,G__23465) : rf.call(null,G__23464,G__23465));
} else {
return result;
}
});
G__23468 = function(result,input){
switch(arguments.length){
case 0:
return G__23468__0.call(this);
case 1:
return G__23468__1.call(this,result);
case 2:
return G__23468__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23468.cljs$core$IFn$_invoke$arity$0 = G__23468__0;
G__23468.cljs$core$IFn$_invoke$arity$1 = G__23468__1;
G__23468.cljs$core$IFn$_invoke$arity$2 = G__23468__2;
return G__23468;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__13530__auto___23469 = size;
var i_23470 = (0);
while(true){
if((i_23470 < n__13530__auto___23469)){
if(cljs.core.truth_((function (){var G__23466 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23470);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23466) : pred.call(null,G__23466));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23470));
} else {
}

var G__23471 = (i_23470 + (1));
i_23470 = G__23471;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__23467 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23467) : pred.call(null,G__23467));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__23478 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__23478) : branch_QMARK_.call(null,G__23478));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__23479 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__23479) : children.call(null,G__23479));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__23480_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__23480_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__23483 = to;
if(G__23483){
var bit__13317__auto__ = (G__23483.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13317__auto__) || (G__23483.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__23484 = to;
if(G__23484){
var bit__13317__auto__ = (G__23484.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13317__auto__) || (G__23484.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__23486 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23486) : f.call(null,G__23486));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__23487__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__23487 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__23488__i = 0, G__23488__a = new Array(arguments.length -  4);
while (G__23488__i < G__23488__a.length) {G__23488__a[G__23488__i] = arguments[G__23488__i + 4]; ++G__23488__i;}
  colls = new cljs.core.IndexedSeq(G__23488__a,0);
} 
return G__23487__delegate.call(this,f,c1,c2,c3,colls);};
G__23487.cljs$lang$maxFixedArity = 4;
G__23487.cljs$lang$applyTo = (function (arglist__23489){
var f = cljs.core.first(arglist__23489);
arglist__23489 = cljs.core.next(arglist__23489);
var c1 = cljs.core.first(arglist__23489);
arglist__23489 = cljs.core.next(arglist__23489);
var c2 = cljs.core.first(arglist__23489);
arglist__23489 = cljs.core.next(arglist__23489);
var c3 = cljs.core.first(arglist__23489);
var colls = cljs.core.rest(arglist__23489);
return G__23487__delegate(f,c1,c2,c3,colls);
});
G__23487.cljs$core$IFn$_invoke$arity$variadic = G__23487__delegate;
return G__23487;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__23490 = null;
if (arguments.length > 4) {
var G__23491__i = 0, G__23491__a = new Array(arguments.length -  4);
while (G__23491__i < G__23491__a.length) {G__23491__a[G__23491__i] = arguments[G__23491__i + 4]; ++G__23491__i;}
G__23490 = new cljs.core.IndexedSeq(G__23491__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__23490);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__23493 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23493) : pred.call(null,G__23493));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__23508 = m__$1;
if(G__23508){
var bit__13324__auto__ = (G__23508.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13324__auto__) || (G__23508.cljs$core$ILookup$)){
return true;
} else {
if((!G__23508.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23508);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__23508);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__23509 = sentinel;
var G__23510 = m__$2;
var G__23511 = cljs.core.next(ks__$1);
sentinel = G__23509;
m__$1 = G__23510;
ks__$1 = G__23511;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__23512,v){
var vec__23517 = p__23512;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23517,(0),null);
var ks = cljs.core.nthnext(vec__23517,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__23518,f){
var vec__23556 = p__23518;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23556,(0),null);
var ks = cljs.core.nthnext(vec__23556,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23557 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23557) : f.call(null,G__23557));
})());
}
});
var update_in__4 = (function (m,p__23519,f,a){
var vec__23558 = p__23519;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23558,(0),null);
var ks = cljs.core.nthnext(vec__23558,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23559 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23560 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23559,G__23560) : f.call(null,G__23559,G__23560));
})());
}
});
var update_in__5 = (function (m,p__23520,f,a,b){
var vec__23561 = p__23520;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23561,(0),null);
var ks = cljs.core.nthnext(vec__23561,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23562 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23563 = a;
var G__23564 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23562,G__23563,G__23564) : f.call(null,G__23562,G__23563,G__23564));
})());
}
});
var update_in__6 = (function (m,p__23521,f,a,b,c){
var vec__23565 = p__23521;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23565,(0),null);
var ks = cljs.core.nthnext(vec__23565,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23566 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23567 = a;
var G__23568 = b;
var G__23569 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23566,G__23567,G__23568,G__23569) : f.call(null,G__23566,G__23567,G__23568,G__23569));
})());
}
});
var update_in__7 = (function() { 
var G__23571__delegate = function (m,p__23522,f,a,b,c,args){
var vec__23570 = p__23522;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23570,(0),null);
var ks = cljs.core.nthnext(vec__23570,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__23571 = function (m,p__23522,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__23572__i = 0, G__23572__a = new Array(arguments.length -  6);
while (G__23572__i < G__23572__a.length) {G__23572__a[G__23572__i] = arguments[G__23572__i + 6]; ++G__23572__i;}
  args = new cljs.core.IndexedSeq(G__23572__a,0);
} 
return G__23571__delegate.call(this,m,p__23522,f,a,b,c,args);};
G__23571.cljs$lang$maxFixedArity = 6;
G__23571.cljs$lang$applyTo = (function (arglist__23573){
var m = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var p__23522 = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var f = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var a = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var b = cljs.core.first(arglist__23573);
arglist__23573 = cljs.core.next(arglist__23573);
var c = cljs.core.first(arglist__23573);
var args = cljs.core.rest(arglist__23573);
return G__23571__delegate(m,p__23522,f,a,b,c,args);
});
G__23571.cljs$core$IFn$_invoke$arity$variadic = G__23571__delegate;
return G__23571;
})()
;
update_in = function(m,p__23522,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__23522,f);
case 4:
return update_in__4.call(this,m,p__23522,f,a);
case 5:
return update_in__5.call(this,m,p__23522,f,a,b);
case 6:
return update_in__6.call(this,m,p__23522,f,a,b,c);
default:
var G__23574 = null;
if (arguments.length > 6) {
var G__23575__i = 0, G__23575__a = new Array(arguments.length -  6);
while (G__23575__i < G__23575__a.length) {G__23575__a[G__23575__i] = arguments[G__23575__i + 6]; ++G__23575__i;}
G__23574 = new cljs.core.IndexedSeq(G__23575__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__23522,f,a,b,c, G__23574);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23586 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23586) : f.call(null,G__23586));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23587 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23588 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23587,G__23588) : f.call(null,G__23587,G__23588));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23589 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23590 = x;
var G__23591 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23589,G__23590,G__23591) : f.call(null,G__23589,G__23590,G__23591));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__23592 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__23593 = x;
var G__23594 = y;
var G__23595 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23592,G__23593,G__23594,G__23595) : f.call(null,G__23592,G__23593,G__23594,G__23595));
})());
});
var update__7 = (function() { 
var G__23596__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__23596 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__23597__i = 0, G__23597__a = new Array(arguments.length -  6);
while (G__23597__i < G__23597__a.length) {G__23597__a[G__23597__i] = arguments[G__23597__i + 6]; ++G__23597__i;}
  more = new cljs.core.IndexedSeq(G__23597__a,0);
} 
return G__23596__delegate.call(this,m,k,f,x,y,z,more);};
G__23596.cljs$lang$maxFixedArity = 6;
G__23596.cljs$lang$applyTo = (function (arglist__23598){
var m = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var k = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var f = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var x = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var y = cljs.core.first(arglist__23598);
arglist__23598 = cljs.core.next(arglist__23598);
var z = cljs.core.first(arglist__23598);
var more = cljs.core.rest(arglist__23598);
return G__23596__delegate(m,k,f,x,y,z,more);
});
G__23596.cljs$core$IFn$_invoke$arity$variadic = G__23596__delegate;
return G__23596;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__23599 = null;
if (arguments.length > 6) {
var G__23600__i = 0, G__23600__a = new Array(arguments.length -  6);
while (G__23600__i < G__23600__a.length) {G__23600__a[G__23600__i] = arguments[G__23600__i + 6]; ++G__23600__i;}
G__23599 = new cljs.core.IndexedSeq(G__23600__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__23599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__23601 = (ll - (5));
var G__23602 = r;
ll = G__23601;
ret = G__23602;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23607 = cljs.core.pv_aget(node,(0));
var G__23608 = (level - (5));
node = G__23607;
level = G__23608;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__23609 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__23610 = (level - (5));
node = G__23609;
level = G__23610;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23620 = init__$2;
var G__23621 = (j + i);
var G__23622 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23620,G__23621,G__23622) : f.call(null,G__23620,G__23621,G__23622));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23633 = (j + (1));
var G__23634 = init__$3;
j = G__23633;
init__$2 = G__23634;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23623 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23623) : cljs.core.deref.call(null,G__23623));
} else {
var G__23635 = (i + len);
var G__23636 = init__$2;
i = G__23635;
init__$1 = G__23636;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__23624 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__23624) : cljs.core.tv_editable_root.call(null,G__23624));
})(),(function (){var G__23625 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__23625) : cljs.core.tv_editable_tail.call(null,G__23625));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__23626 = init__$2;
var G__23627 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23626,G__23627) : f.call(null,G__23626,G__23627));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__23637 = (j + (1));
var G__23638 = init__$3;
j = G__23637;
init__$2 = G__23638;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23628 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23628) : cljs.core.deref.call(null,G__23628));
} else {
var G__23639 = (i + len);
var G__23640 = init__$2;
i = G__23639;
init__$1 = G__23640;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__23629 = coll__$1;
var G__23630 = cljs.core.first_array_for_longvec(coll__$1);
var G__23631 = (0);
var G__23632 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23629,G__23630,G__23631,G__23632) : cljs.core.chunked_seq.call(null,G__23629,G__23630,G__23631,G__23632));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__13530__auto___23641 = len;
var i_23642 = (0);
while(true){
if((i_23642 < n__13530__auto___23641)){
(new_tail[i_23642] = (self__.tail[i_23642]));

var G__23643 = (i_23642 + (1));
i_23642 = G__23643;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__23644 = null;
var G__23644__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23644__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23644 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23644__2.call(this,self__,k);
case 3:
return G__23644__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23644.cljs$core$IFn$_invoke$arity$2 = G__23644__2;
G__23644.cljs$core$IFn$_invoke$arity$3 = G__23644__3;
return G__23644;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args23619){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23619)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__23645 = (i + (1));
var G__23646 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__23645;
out = G__23646;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23647__i = 0, G__23647__a = new Array(arguments.length -  0);
while (G__23647__i < G__23647__a.length) {G__23647__a[G__23647__i] = arguments[G__23647__i + 0]; ++G__23647__i;}
  args = new cljs.core.IndexedSeq(G__23647__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__23648){
var args = cljs.core.seq(arglist__23648);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23649 = self__.vec;
var G__23650 = self__.node;
var G__23651 = self__.i;
var G__23652 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23649,G__23650,G__23651,G__23652) : cljs.core.chunked_seq.call(null,G__23649,G__23650,G__23651,G__23652));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__23653 = self__.vec;
var G__23654 = (self__.i + self__.off);
var G__23655 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23653,G__23654,G__23655) : cljs.core.subvec.call(null,G__23653,G__23654,G__23655));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__23656 = self__.vec;
var G__23657 = (self__.i + self__.off);
var G__23658 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__23656,G__23657,G__23658) : cljs.core.subvec.call(null,G__23656,G__23657,G__23658));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__23659 = self__.vec;
var G__23660 = self__.node;
var G__23661 = self__.i;
var G__23662 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23659,G__23660,G__23661,G__23662) : cljs.core.chunked_seq.call(null,G__23659,G__23660,G__23661,G__23662));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23663 = self__.vec;
var G__23664 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23665 = end;
var G__23666 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23663,G__23664,G__23665,G__23666) : cljs.core.chunked_seq.call(null,G__23663,G__23664,G__23665,G__23666));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__23667 = self__.vec;
var G__23668 = self__.node;
var G__23669 = self__.i;
var G__23670 = self__.off;
var G__23671 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__23667,G__23668,G__23669,G__23670,G__23671) : cljs.core.chunked_seq.call(null,G__23667,G__23668,G__23669,G__23670,G__23671));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__23672 = self__.vec;
var G__23673 = cljs.core.unchecked_array_for(self__.vec,end);
var G__23674 = end;
var G__23675 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__23672,G__23673,G__23674,G__23675) : cljs.core.chunked_seq.call(null,G__23672,G__23673,G__23674,G__23675));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__23677 = self__.meta;
var G__23678 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__23679 = self__.start;
var G__23680 = (function (){var x__12960__auto__ = self__.end;
var y__12961__auto__ = (v_pos + (1));
return ((x__12960__auto__ > y__12961__auto__) ? x__12960__auto__ : y__12961__auto__);
})();
var G__23681 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23677,G__23678,G__23679,G__23680,G__23681) : cljs.core.build_subvec.call(null,G__23677,G__23678,G__23679,G__23680,G__23681));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__23682 = self__.meta;
var G__23683 = self__.v;
var G__23684 = self__.start;
var G__23685 = (self__.end - (1));
var G__23686 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23682,G__23683,G__23684,G__23685,G__23686) : cljs.core.build_subvec.call(null,G__23682,G__23683,G__23684,G__23685,G__23686));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__23688 = meta__$1;
var G__23689 = self__.v;
var G__23690 = self__.start;
var G__23691 = self__.end;
var G__23692 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23688,G__23689,G__23690,G__23691,G__23692) : cljs.core.build_subvec.call(null,G__23688,G__23689,G__23690,G__23691,G__23692));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__23693 = self__.meta;
var G__23694 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__23695 = self__.start;
var G__23696 = (self__.end + (1));
var G__23697 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__23693,G__23694,G__23695,G__23696,G__23697) : cljs.core.build_subvec.call(null,G__23693,G__23694,G__23695,G__23696,G__23697));
});

cljs.core.Subvec.prototype.call = (function() {
var G__23698 = null;
var G__23698__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__23698__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__23698 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23698__2.call(this,self__,k);
case 3:
return G__23698__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23698.cljs$core$IFn$_invoke$arity$2 = G__23698__2;
G__23698.cljs$core$IFn$_invoke$arity$3 = G__23698__3;
return G__23698;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args23676){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23676)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__23699 = meta;
var G__23700 = v.v;
var G__23701 = (v.start + start);
var G__23702 = (v.start + end);
var G__23703 = __hash;
meta = G__23699;
v = G__23700;
start = G__23701;
end = G__23702;
__hash = G__23703;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj23710 = {};
return obj23710;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__23718 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__23719 = (level - (5));
node = G__23718;
level = G__23719;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__23723 = null;
var G__23723__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23723__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23723 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23723__2.call(this,self__,k);
case 3:
return G__23723__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23723.cljs$core$IFn$_invoke$arity$2 = G__23723__2;
G__23723.cljs$core$IFn$_invoke$arity$3 = G__23723__3;
return G__23723;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args23720){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23720)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__12643__auto__ = self__.front;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12643__auto__ = self__.rear;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__23724 = (i + incr);
i = G__23724;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__23725 = (i + (1));
var G__23726 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__23725;
out = G__23726;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj23730 = {};
return obj23730;
})();
var l = ks.length;
var i_23731 = (0);
while(true){
if((i_23731 < l)){
var k_23732 = (ks[i_23731]);
(new_obj[k_23732] = (obj[k_23732]));

var G__23733 = (i_23731 + (1));
i_23731 = G__23733;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12631__auto__ = (function (){var G__23737 = k;
return goog.isString(G__23737);
})();
if(cljs.core.truth_(and__12631__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12631__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__23738 = init__$1;
var G__23739 = k;
var G__23740 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23738,G__23739,G__23740) : f.call(null,G__23738,G__23739,G__23740));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23741 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23741) : cljs.core.deref.call(null,G__23741));
} else {
var G__23747 = cljs.core.rest(keys__$1);
var G__23748 = init__$2;
keys__$1 = G__23747;
init__$1 = G__23748;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12631__auto__ = (function (){var G__23743 = k;
return goog.isString(G__23743);
})();
if(cljs.core.truth_(and__12631__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12631__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__23744 = k;
return goog.isString(G__23744);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__12631__auto__ = (function (){var G__23746 = k;
return goog.isString(G__23746);
})();
if(cljs.core.truth_(and__12631__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__12631__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__23734_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__23734_SHARP_,(self__.strobj[p1__23734_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__23749 = null;
var G__23749__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23749__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23749 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23749__2.call(this,self__,k);
case 3:
return G__23749__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23749.cljs$core$IFn$_invoke$arity$2 = G__23749__2;
G__23749.cljs$core$IFn$_invoke$arity$3 = G__23749__3;
return G__23749;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args23735){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23735)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj23751 = {};
return obj23751;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__23752 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23752,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23752,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__23753 = (i + (2));
i = G__23753;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__23754 = (i + (2));
i = G__23754;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__23755 = (i + (2));
i = G__23755;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__23756 = (i + (2));
i = G__23756;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__23757 = (i + (2));
i = G__23757;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__12643__auto__ = (function (){var G__23761 = k;
return goog.isString(G__23761);
})();
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_23762 = (0);
while(true){
if((i_23762 < l)){
(narr[i_23762] = (arr[i_23762]));

var G__23763 = (i_23762 + (1));
i_23762 = G__23763;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23765 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23765) : cljs.core.keys.call(null,G__23765));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23766 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23766) : cljs.core.vals.call(null,G__23766));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23767 = cljs.core.seq(coll);
var chunk__23768 = null;
var count__23769 = (0);
var i__23770 = (0);
while(true){
if((i__23770 < count__23769)){
var vec__23771 = chunk__23768.cljs$core$IIndexed$_nth$arity$2(null,i__23770);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23771,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23771,(1),null);
var G__23772_23785 = v;
var G__23773_23786 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23772_23785,G__23773_23786) : f.call(null,G__23772_23785,G__23773_23786));

var G__23787 = seq__23767;
var G__23788 = chunk__23768;
var G__23789 = count__23769;
var G__23790 = (i__23770 + (1));
seq__23767 = G__23787;
chunk__23768 = G__23788;
count__23769 = G__23789;
i__23770 = G__23790;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23767);
if(temp__4126__auto__){
var seq__23767__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23767__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__23767__$1);
var G__23791 = cljs.core.chunk_rest(seq__23767__$1);
var G__23792 = c__13430__auto__;
var G__23793 = cljs.core.count(c__13430__auto__);
var G__23794 = (0);
seq__23767 = G__23791;
chunk__23768 = G__23792;
count__23769 = G__23793;
i__23770 = G__23794;
continue;
} else {
var vec__23774 = cljs.core.first(seq__23767__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23774,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23774,(1),null);
var G__23775_23795 = v;
var G__23776_23796 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23775_23795,G__23776_23796) : f.call(null,G__23775_23795,G__23776_23796));

var G__23797 = cljs.core.next(seq__23767__$1);
var G__23798 = null;
var G__23799 = (0);
var G__23800 = (0);
seq__23767 = G__23797;
chunk__23768 = G__23798;
count__23769 = G__23799;
i__23770 = G__23800;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__23777 = init__$1;
var G__23778 = (self__.arr[i]);
var G__23779 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23777,G__23778,G__23779) : f.call(null,G__23777,G__23778,G__23779));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23780 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23780) : cljs.core.deref.call(null,G__23780));
} else {
var G__23801 = (i + (2));
var G__23802 = init__$2;
i = G__23801;
init__$1 = G__23802;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__23781 = other;
if(G__23781){
var bit__13317__auto__ = (G__23781.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13317__auto__) || (G__23781.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__23803 = (i + (2));
i = G__23803;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj23783 = {};
return obj23783;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__23804 = (s + (2));
var G__23805 = d;
s = G__23804;
d = G__23805;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__23806 = (s + (2));
var G__23807 = (d + (2));
s = G__23806;
d = G__23807;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__23784 = cljs.core.aclone(self__.arr);
(G__23784[(idx + (1))] = v);

return G__23784;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23808 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23809 = cljs.core.next(es);
ret = G__23808;
es = G__23809;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__23810 = null;
var G__23810__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23810__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23810 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23810__2.call(this,self__,k);
case 3:
return G__23810__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23810.cljs$core$IFn$_invoke$arity$2 = G__23810__2;
G__23810.cljs$core$IFn$_invoke$arity$3 = G__23810__3;
return G__23810;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args23764){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23764)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__23811 = (i + (2));
var G__23812 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23811;
ret = G__23812;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__23813_23821 = self__.arr;
G__23813_23821.pop();

G__23813_23821.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__23814 = self__.len;
var G__23815 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__23814,G__23815) : cljs.core.array__GT_transient_hash_map.call(null,G__23814,G__23815));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__23816 = o;
if(G__23816){
var bit__13324__auto__ = (G__23816.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13324__auto__) || (G__23816.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23816.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23816);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23816);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__23817 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23817) : cljs.core.key.call(null,G__23817));
})(),(function (){var G__23818 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23818) : cljs.core.val.call(null,G__23818));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23822 = cljs.core.next(es);
var G__23823 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__23819 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23819) : cljs.core.key.call(null,G__23819));
})(),(function (){var G__23820 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23820) : cljs.core.val.call(null,G__23820));
})());
es = G__23822;
tcoll__$2 = G__23823;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__23824 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__23825 = (i + (2));
out = G__23824;
i = G__23825;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__23828 = cljs.core.aclone(arr);
(G__23828[i] = a);

return G__23828;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__23829 = cljs.core.aclone(arr);
(G__23829[i] = a);

(G__23829[j] = b);

return G__23829;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__23834 = init__$1;
var G__23835 = k;
var G__23836 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23834,G__23835,G__23836) : f.call(null,G__23834,G__23835,G__23836));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23837 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23837) : cljs.core.deref.call(null,G__23837));
} else {
var G__23838 = (i + (2));
var G__23839 = init__$2;
i = G__23838;
init__$1 = G__23839;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23840 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23840) : cljs.core.create_inode_seq.call(null,G__23840));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23854 = (0);
var j_23855 = (0);
while(true){
if((i_23854 < (32))){
if((((self__.bitmap >>> i_23854) & (1)) === (0))){
var G__23856 = (i_23854 + (1));
var G__23857 = j_23855;
i_23854 = G__23856;
j_23855 = G__23857;
continue;
} else {
(nodes[i_23854] = ((!(((self__.arr[j_23855]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_23855])),(self__.arr[j_23855]),(self__.arr[(j_23855 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23855 + (1))])));

var G__23858 = (i_23854 + (1));
var G__23859 = (j_23855 + (2));
i_23854 = G__23858;
j_23855 = G__23859;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23841 = edit__$1;
var G__23842 = (shift + (5));
var G__23843 = key_or_nil;
var G__23844 = val_or_node;
var G__23845 = hash;
var G__23846 = key;
var G__23847 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847) : cljs.core.create_node.call(null,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_23860 = (0);
var j_23861 = (0);
while(true){
if((i_23860 < (32))){
if((((self__.bitmap >>> i_23860) & (1)) === (0))){
var G__23862 = (i_23860 + (1));
var G__23863 = j_23861;
i_23860 = G__23862;
j_23861 = G__23863;
continue;
} else {
(nodes[i_23860] = ((!(((self__.arr[j_23861]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_23861])),(self__.arr[j_23861]),(self__.arr[(j_23861 + (1))]),added_leaf_QMARK_):(self__.arr[(j_23861 + (1))])));

var G__23864 = (i_23860 + (1));
var G__23865 = (j_23861 + (2));
i_23860 = G__23864;
j_23861 = G__23865;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__23848 = (shift + (5));
var G__23849 = key_or_nil;
var G__23850 = val_or_node;
var G__23851 = hash;
var G__23852 = key;
var G__23853 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__23848,G__23849,G__23850,G__23851,G__23852,G__23853) : cljs.core.create_node.call(null,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__23866 = (i + (1));
var G__23867 = (j + (2));
var G__23868 = (bitmap | ((1) << i));
i = G__23866;
j = G__23867;
bitmap = G__23868;
continue;
} else {
var G__23869 = (i + (1));
var G__23870 = j;
var G__23871 = bitmap;
i = G__23869;
j = G__23870;
bitmap = G__23871;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23872 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__23872) : cljs.core.create_array_node_seq.call(null,G__23872));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23873 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23873) : cljs.core.deref.call(null,G__23873));
} else {
var G__23874 = (i + (1));
var G__23875 = init__$2;
i = G__23874;
init__$1 = G__23875;
continue;
}
} else {
var G__23876 = (i + (1));
var G__23877 = init__$1;
i = G__23876;
init__$1 = G__23877;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__23878 = (i + (2));
i = G__23878;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__23879 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__23879) : cljs.core.create_inode_seq.call(null,G__23879));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__23880 = self__.nodes;
var G__23881 = (self__.i + (2));
var G__23882 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23880,G__23881,G__23882) : cljs.core.create_inode_seq.call(null,G__23880,G__23881,G__23882));
} else {
var G__23883 = self__.nodes;
var G__23884 = self__.i;
var G__23885 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__23883,G__23884,G__23885) : cljs.core.create_inode_seq.call(null,G__23883,G__23884,G__23885));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__23889 = (j + (2));
j = G__23889;
continue;
}
} else {
var G__23890 = (j + (2));
j = G__23890;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__23891 = null;
var G__23892 = self__.nodes;
var G__23893 = self__.i;
var G__23894 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__23891,G__23892,G__23893,G__23894) : cljs.core.create_array_node_seq.call(null,G__23891,G__23892,G__23893,G__23894));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__23899 = (j + (1));
j = G__23899;
continue;
}
} else {
var G__23900 = (j + (1));
j = G__23900;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23902 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__23902) : cljs.core.keys.call(null,G__23902));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__23903 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__23903) : cljs.core.vals.call(null,G__23903));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__23904 = cljs.core.seq(coll);
var chunk__23905 = null;
var count__23906 = (0);
var i__23907 = (0);
while(true){
if((i__23907 < count__23906)){
var vec__23908 = chunk__23905.cljs$core$IIndexed$_nth$arity$2(null,i__23907);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23908,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23908,(1),null);
var G__23909_23920 = v;
var G__23910_23921 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23909_23920,G__23910_23921) : f.call(null,G__23909_23920,G__23910_23921));

var G__23922 = seq__23904;
var G__23923 = chunk__23905;
var G__23924 = count__23906;
var G__23925 = (i__23907 + (1));
seq__23904 = G__23922;
chunk__23905 = G__23923;
count__23906 = G__23924;
i__23907 = G__23925;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23904);
if(temp__4126__auto__){
var seq__23904__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23904__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__23904__$1);
var G__23926 = cljs.core.chunk_rest(seq__23904__$1);
var G__23927 = c__13430__auto__;
var G__23928 = cljs.core.count(c__13430__auto__);
var G__23929 = (0);
seq__23904 = G__23926;
chunk__23905 = G__23927;
count__23906 = G__23928;
i__23907 = G__23929;
continue;
} else {
var vec__23911 = cljs.core.first(seq__23904__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23911,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23911,(1),null);
var G__23912_23930 = v;
var G__23913_23931 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23912_23930,G__23913_23931) : f.call(null,G__23912_23930,G__23913_23931));

var G__23932 = cljs.core.next(seq__23904__$1);
var G__23933 = null;
var G__23934 = (0);
var G__23935 = (0);
seq__23904 = G__23932;
chunk__23905 = G__23933;
count__23906 = G__23934;
i__23907 = G__23935;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__23914 = init;
var G__23915 = null;
var G__23916 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23914,G__23915,G__23916) : f.call(null,G__23914,G__23915,G__23916));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23917 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23917) : cljs.core.deref.call(null,G__23917));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj23919 = {};
return obj23919;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__23936 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__23937 = cljs.core.next(es);
ret = G__23936;
es = G__23937;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__23938 = null;
var G__23938__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23938__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23938 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23938__2.call(this,self__,k);
case 3:
return G__23938__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23938.cljs$core$IFn$_invoke$arity$2 = G__23938__2;
G__23938.cljs$core$IFn$_invoke$arity$3 = G__23938__3;
return G__23938;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args23901){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23901)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23939 = (i + (2));
var G__23940 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__23939;
ret = G__23940;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__23941 = (i + (1));
var G__23942 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__23941;
out = G__23942;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__23943 = o;
if(G__23943){
var bit__13324__auto__ = (G__23943.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__13324__auto__) || (G__23943.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__23943.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__23943);
}
})()){
return tcoll.assoc_BANG_((function (){var G__23944 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23944) : cljs.core.key.call(null,G__23944));
})(),(function (){var G__23945 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23945) : cljs.core.val.call(null,G__23945));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__23948 = cljs.core.next(es);
var G__23949 = tcoll__$1.assoc_BANG_((function (){var G__23946 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__23946) : cljs.core.key.call(null,G__23946));
})(),(function (){var G__23947 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__23947) : cljs.core.val.call(null,G__23947));
})());
es = G__23948;
tcoll__$1 = G__23949;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__23950 = ((ascending_QMARK_)?t.left:t.right);
var G__23951 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__23950;
stack__$1 = G__23951;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__23964 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23964) : cljs.core.deref.call(null,G__23964));
} else {
var init__$2 = (function (){var G__23965 = init__$1;
var G__23966 = node.key;
var G__23967 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23965,G__23966,G__23967) : f.call(null,G__23965,G__23966,G__23967));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__23968 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23968) : cljs.core.deref.call(null,G__23968));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__23969 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23969) : cljs.core.deref.call(null,G__23969));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__23971 = null;
var G__23971__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23971__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23971 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23971__2.call(this,self__,k);
case 3:
return G__23971__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23971.cljs$core$IFn$_invoke$arity$2 = G__23971__2;
G__23971.cljs$core$IFn$_invoke$arity$3 = G__23971__3;
return G__23971;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args23970){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23970)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__23973 = null;
var G__23973__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__23973__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__23973 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__23973__2.call(this,self__,k);
case 3:
return G__23973__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23973.cljs$core$IFn$_invoke$arity$2 = G__23973__2;
G__23973.cljs$core$IFn$_invoke$arity$3 = G__23973__3;
return G__23973;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args23972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23972)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__23986 = k;
var G__23987 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23986,G__23987) : comp.call(null,G__23986,G__23987));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__24006 = k;
var G__24007 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24006,G__24007) : comp.call(null,G__24006,G__24007));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__24018 = k;
var G__24019 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24018,G__24019) : comp.call(null,G__24018,G__24019));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24021 = cljs.core.seq(coll);
var chunk__24022 = null;
var count__24023 = (0);
var i__24024 = (0);
while(true){
if((i__24024 < count__24023)){
var vec__24025 = chunk__24022.cljs$core$IIndexed$_nth$arity$2(null,i__24024);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24025,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24025,(1),null);
var G__24026_24038 = v;
var G__24027_24039 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24026_24038,G__24027_24039) : f.call(null,G__24026_24038,G__24027_24039));

var G__24040 = seq__24021;
var G__24041 = chunk__24022;
var G__24042 = count__24023;
var G__24043 = (i__24024 + (1));
seq__24021 = G__24040;
chunk__24022 = G__24041;
count__24023 = G__24042;
i__24024 = G__24043;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24021);
if(temp__4126__auto__){
var seq__24021__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24021__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__24021__$1);
var G__24044 = cljs.core.chunk_rest(seq__24021__$1);
var G__24045 = c__13430__auto__;
var G__24046 = cljs.core.count(c__13430__auto__);
var G__24047 = (0);
seq__24021 = G__24044;
chunk__24022 = G__24045;
count__24023 = G__24046;
i__24024 = G__24047;
continue;
} else {
var vec__24028 = cljs.core.first(seq__24021__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24028,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24028,(1),null);
var G__24029_24048 = v;
var G__24030_24049 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24029_24048,G__24030_24049) : f.call(null,G__24029_24048,G__24030_24049));

var G__24050 = cljs.core.next(seq__24021__$1);
var G__24051 = null;
var G__24052 = (0);
var G__24053 = (0);
seq__24021 = G__24050;
chunk__24022 = G__24051;
count__24023 = G__24052;
i__24024 = G__24053;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24031 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24031) : cljs.core.keys.call(null,G__24031));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24032 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24032) : cljs.core.vals.call(null,G__24032));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24033 = k;
var G__24034 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24033,G__24034) : self__.comp.call(null,G__24033,G__24034));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__24054 = t.left;
t = G__24054;
continue;
} else {
var G__24055 = t.right;
t = G__24055;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24056 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24057 = cljs.core.next(es);
ret = G__24056;
es = G__24057;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__24058 = null;
var G__24058__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24058__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24058 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24058__2.call(this,self__,k);
case 3:
return G__24058__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24058.cljs$core$IFn$_invoke$arity$2 = G__24058__2;
G__24058.cljs$core$IFn$_invoke$arity$3 = G__24058__3;
return G__24058;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args24020){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24020)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__24035 = k;
var G__24036 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__24035,G__24036) : self__.comp.call(null,G__24035,G__24036));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__24059 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24060 = t.left;
stack = G__24059;
t = G__24060;
continue;
} else {
var G__24061 = stack;
var G__24062 = t.right;
stack = G__24061;
t = G__24062;
continue;
}
} else {
if((c > (0))){
var G__24063 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__24064 = t.right;
stack = G__24063;
t = G__24064;
continue;
} else {
var G__24065 = stack;
var G__24066 = t.left;
stack = G__24065;
t = G__24066;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__24037 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24037) : cljs.core.key.call(null,G__24037));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__24067 = cljs.core.nnext(in$);
var G__24068 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24067;
out = G__24068;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24069__i = 0, G__24069__a = new Array(arguments.length -  0);
while (G__24069__i < G__24069__a.length) {G__24069__a[G__24069__i] = arguments[G__24069__i + 0]; ++G__24069__i;}
  keyvals = new cljs.core.IndexedSeq(G__24069__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__24070){
var keyvals = cljs.core.seq(arglist__24070);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24071__i = 0, G__24071__a = new Array(arguments.length -  0);
while (G__24071__i < G__24071__a.length) {G__24071__a[G__24071__i] = arguments[G__24071__i + 0]; ++G__24071__i;}
  keyvals = new cljs.core.IndexedSeq(G__24071__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__24072){
var keyvals = cljs.core.seq(arglist__24072);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj24076 = {};
return obj24076;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__24077 = cljs.core.nnext(kvs);
kvs = G__24077;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24078__i = 0, G__24078__a = new Array(arguments.length -  0);
while (G__24078__i < G__24078__a.length) {G__24078__a[G__24078__i] = arguments[G__24078__i + 0]; ++G__24078__i;}
  keyvals = new cljs.core.IndexedSeq(G__24078__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__24079){
var keyvals = cljs.core.seq(arglist__24079);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__24080 = cljs.core.nnext(in$);
var G__24081 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24080;
out = G__24081;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__24082__i = 0, G__24082__a = new Array(arguments.length -  0);
while (G__24082__i < G__24082__a.length) {G__24082__a[G__24082__i] = arguments[G__24082__i + 0]; ++G__24082__i;}
  keyvals = new cljs.core.IndexedSeq(G__24082__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__24083){
var keyvals = cljs.core.seq(arglist__24083);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__24084 = cljs.core.nnext(in$);
var G__24085 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__24084;
out = G__24085;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__24086__i = 0, G__24086__a = new Array(arguments.length -  1);
while (G__24086__i < G__24086__a.length) {G__24086__a[G__24086__i] = arguments[G__24086__i + 1]; ++G__24086__i;}
  keyvals = new cljs.core.IndexedSeq(G__24086__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__24087){
var comparator = cljs.core.first(arglist__24087);
var keyvals = cljs.core.rest(arglist__24087);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24088 = self__.mseq;
if(G__24088){
var bit__13324__auto__ = (G__24088.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13324__auto__) || (G__24088.cljs$core$INext$)){
return true;
} else {
if((!G__24088.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24088);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24088);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24089 = self__.mseq;
if(G__24089){
var bit__13324__auto__ = (G__24089.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13324__auto__) || (G__24089.cljs$core$INext$)){
return true;
} else {
if((!G__24089.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24089);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24089);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24090 = self__.mseq;
if(G__24090){
var bit__13324__auto__ = (G__24090.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13324__auto__) || (G__24090.cljs$core$INext$)){
return true;
} else {
if((!G__24090.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24090);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24090);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__24091 = self__.mseq;
if(G__24091){
var bit__13324__auto__ = (G__24091.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13324__auto__) || (G__24091.cljs$core$INext$)){
return true;
} else {
if((!G__24091.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__24091);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__24092_SHARP_,p2__24093_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__12643__auto__ = p1__24092_SHARP_;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__24093_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__24094__i = 0, G__24094__a = new Array(arguments.length -  0);
while (G__24094__i < G__24094__a.length) {G__24094__a[G__24094__i] = arguments[G__24094__i + 0]; ++G__24094__i;}
  maps = new cljs.core.IndexedSeq(G__24094__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__24095){
var maps = cljs.core.seq(arglist__24095);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24098 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24099 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24098,G__24099) : f.call(null,G__24098,G__24099));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__12643__auto__ = m1;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__24100__i = 0, G__24100__a = new Array(arguments.length -  1);
while (G__24100__i < G__24100__a.length) {G__24100__a[G__24100__i] = arguments[G__24100__i + 1]; ++G__24100__i;}
  maps = new cljs.core.IndexedSeq(G__24100__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__24101){
var f = cljs.core.first(arglist__24101);
var maps = cljs.core.rest(arglist__24101);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__24102 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__24103 = cljs.core.next(keys);
ret = G__24102;
keys = G__24103;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24106 = cljs.core.seq(coll);
var chunk__24107 = null;
var count__24108 = (0);
var i__24109 = (0);
while(true){
if((i__24109 < count__24108)){
var vec__24110 = chunk__24107.cljs$core$IIndexed$_nth$arity$2(null,i__24109);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24110,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24110,(1),null);
var G__24111_24116 = v;
var G__24112_24117 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24111_24116,G__24112_24117) : f.call(null,G__24111_24116,G__24112_24117));

var G__24118 = seq__24106;
var G__24119 = chunk__24107;
var G__24120 = count__24108;
var G__24121 = (i__24109 + (1));
seq__24106 = G__24118;
chunk__24107 = G__24119;
count__24108 = G__24120;
i__24109 = G__24121;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24106);
if(temp__4126__auto__){
var seq__24106__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24106__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__24106__$1);
var G__24122 = cljs.core.chunk_rest(seq__24106__$1);
var G__24123 = c__13430__auto__;
var G__24124 = cljs.core.count(c__13430__auto__);
var G__24125 = (0);
seq__24106 = G__24122;
chunk__24107 = G__24123;
count__24108 = G__24124;
i__24109 = G__24125;
continue;
} else {
var vec__24113 = cljs.core.first(seq__24106__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24113,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24113,(1),null);
var G__24114_24126 = v;
var G__24115_24127 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24114_24126,G__24115_24127) : f.call(null,G__24114_24126,G__24115_24127));

var G__24128 = cljs.core.next(seq__24106__$1);
var G__24129 = null;
var G__24130 = (0);
var G__24131 = (0);
seq__24106 = G__24128;
chunk__24107 = G__24129;
count__24108 = G__24130;
i__24109 = G__24131;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24104_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24104_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__24132 = null;
var G__24132__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24132__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24132 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24132__2.call(this,self__,k);
case 3:
return G__24132__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24132.cljs$core$IFn$_invoke$arity$2 = G__24132__2;
G__24132.cljs$core$IFn$_invoke$arity$3 = G__24132__3;
return G__24132;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args24105){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24105)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24133 = (i + (1));
var G__24134 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__24133;
out = G__24134;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__24135 = (i + (1));
var G__24136 = cljs.core._conj_BANG_(out,(items[i]));
i = G__24135;
out = G__24136;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__24138 = null;
var G__24138__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__24138__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__24138 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24138__2.call(this,self__,k);
case 3:
return G__24138__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24138.cljs$core$IFn$_invoke$arity$2 = G__24138__2;
G__24138.cljs$core$IFn$_invoke$arity$3 = G__24138__3;
return G__24138;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args24137){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24137)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24141 = cljs.core.seq(coll);
var chunk__24142 = null;
var count__24143 = (0);
var i__24144 = (0);
while(true){
if((i__24144 < count__24143)){
var vec__24145 = chunk__24142.cljs$core$IIndexed$_nth$arity$2(null,i__24144);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24145,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24145,(1),null);
var G__24146_24151 = v;
var G__24147_24152 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24146_24151,G__24147_24152) : f.call(null,G__24146_24151,G__24147_24152));

var G__24153 = seq__24141;
var G__24154 = chunk__24142;
var G__24155 = count__24143;
var G__24156 = (i__24144 + (1));
seq__24141 = G__24153;
chunk__24142 = G__24154;
count__24143 = G__24155;
i__24144 = G__24156;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24141);
if(temp__4126__auto__){
var seq__24141__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24141__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__24141__$1);
var G__24157 = cljs.core.chunk_rest(seq__24141__$1);
var G__24158 = c__13430__auto__;
var G__24159 = cljs.core.count(c__13430__auto__);
var G__24160 = (0);
seq__24141 = G__24157;
chunk__24142 = G__24158;
count__24143 = G__24159;
i__24144 = G__24160;
continue;
} else {
var vec__24148 = cljs.core.first(seq__24141__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24148,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24148,(1),null);
var G__24149_24161 = v;
var G__24150_24162 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24149_24161,G__24150_24162) : f.call(null,G__24149_24161,G__24150_24162));

var G__24163 = cljs.core.next(seq__24141__$1);
var G__24164 = null;
var G__24165 = (0);
var G__24166 = (0);
seq__24141 = G__24163;
chunk__24142 = G__24164;
count__24143 = G__24165;
i__24144 = G__24166;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__24139_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__24139_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__24167 = null;
var G__24167__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24167__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24167 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24167__2.call(this,self__,k);
case 3:
return G__24167__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24167.cljs$core$IFn$_invoke$arity$2 = G__24167__2;
G__24167.cljs$core$IFn$_invoke$arity$3 = G__24167__3;
return G__24167;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args24140){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24140)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__13524__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__13524__auto__.length)){
var G__24168 = (i + (1));
var G__24169 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__24168;
res = G__24169;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__24170 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__24171 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__24170;
out = G__24171;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__24172__delegate = function (keys){
return cljs.core.set(keys);
};
var G__24172 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24173__i = 0, G__24173__a = new Array(arguments.length -  0);
while (G__24173__i < G__24173__a.length) {G__24173__a[G__24173__i] = arguments[G__24173__i + 0]; ++G__24173__i;}
  keys = new cljs.core.IndexedSeq(G__24173__a,0);
} 
return G__24172__delegate.call(this,keys);};
G__24172.cljs$lang$maxFixedArity = 0;
G__24172.cljs$lang$applyTo = (function (arglist__24174){
var keys = cljs.core.seq(arglist__24174);
return G__24172__delegate(keys);
});
G__24172.cljs$core$IFn$_invoke$arity$variadic = G__24172__delegate;
return G__24172;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__24175 = null;
if (arguments.length > 0) {
var G__24176__i = 0, G__24176__a = new Array(arguments.length -  0);
while (G__24176__i < G__24176__a.length) {G__24176__a[G__24176__i] = arguments[G__24176__i + 0]; ++G__24176__i;}
G__24175 = new cljs.core.IndexedSeq(G__24176__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__24175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__24177__i = 0, G__24177__a = new Array(arguments.length -  0);
while (G__24177__i < G__24177__a.length) {G__24177__a[G__24177__i] = arguments[G__24177__i + 0]; ++G__24177__i;}
  keys = new cljs.core.IndexedSeq(G__24177__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__24178){
var keys = cljs.core.seq(arglist__24178);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__24179__i = 0, G__24179__a = new Array(arguments.length -  1);
while (G__24179__i < G__24179__a.length) {G__24179__a[G__24179__i] = arguments[G__24179__i + 1]; ++G__24179__i;}
  keys = new cljs.core.IndexedSeq(G__24179__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__24180){
var comparator = cljs.core.first(arglist__24180);
var keys = cljs.core.rest(arglist__24180);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__24181_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24181_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__24181_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24182_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__24182_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__24182_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__24203 = null;
var G__24203__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24203__1 = (function (result){
var G__24193 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24193) : rf.call(null,G__24193));
});
var G__24203__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__24194 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24194) : cljs.core.deref.call(null,G__24194));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__24195 = result;
var G__24196 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24195,G__24196) : rf.call(null,G__24195,G__24196));
}
});
G__24203 = function(result,input){
switch(arguments.length){
case 0:
return G__24203__0.call(this);
case 1:
return G__24203__1.call(this,result);
case 2:
return G__24203__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24203.cljs$core$IFn$_invoke$arity$0 = G__24203__0;
G__24203.cljs$core$IFn$_invoke$arity$1 = G__24203__1;
G__24203.cljs$core$IFn$_invoke$arity$2 = G__24203__2;
return G__24203;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__24201,seen__$1){
while(true){
var vec__24202 = p__24201;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24202,(0),null);
var xs__$1 = vec__24202;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__24204 = cljs.core.rest(s);
var G__24205 = seen__$1;
p__24201 = G__24204;
seen__$1 = G__24205;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__24206 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__24207 = cljs.core.next(s__$1);
ret = G__24206;
s__$1 = G__24207;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__24209 = x;
if(G__24209){
var bit__13317__auto__ = (G__24209.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13317__auto__) || (G__24209.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__24210 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__24211 = cljs.core.next(ks);
var G__24212 = cljs.core.next(vs);
map = G__24210;
ks = G__24211;
vs = G__24212;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__24223 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24223) : k.call(null,G__24223));
})() > (function (){var G__24224 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24224) : k.call(null,G__24224));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__24225__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24213_SHARP_,p2__24214_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__24213_SHARP_,p2__24214_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24225 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24226__i = 0, G__24226__a = new Array(arguments.length -  3);
while (G__24226__i < G__24226__a.length) {G__24226__a[G__24226__i] = arguments[G__24226__i + 3]; ++G__24226__i;}
  more = new cljs.core.IndexedSeq(G__24226__a,0);
} 
return G__24225__delegate.call(this,k,x,y,more);};
G__24225.cljs$lang$maxFixedArity = 3;
G__24225.cljs$lang$applyTo = (function (arglist__24227){
var k = cljs.core.first(arglist__24227);
arglist__24227 = cljs.core.next(arglist__24227);
var x = cljs.core.first(arglist__24227);
arglist__24227 = cljs.core.next(arglist__24227);
var y = cljs.core.first(arglist__24227);
var more = cljs.core.rest(arglist__24227);
return G__24225__delegate(k,x,y,more);
});
G__24225.cljs$core$IFn$_invoke$arity$variadic = G__24225__delegate;
return G__24225;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__24228 = null;
if (arguments.length > 3) {
var G__24229__i = 0, G__24229__a = new Array(arguments.length -  3);
while (G__24229__i < G__24229__a.length) {G__24229__a[G__24229__i] = arguments[G__24229__i + 3]; ++G__24229__i;}
G__24228 = new cljs.core.IndexedSeq(G__24229__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24228);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__24240 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24240) : k.call(null,G__24240));
})() < (function (){var G__24241 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__24241) : k.call(null,G__24241));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__24242__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24230_SHARP_,p2__24231_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__24230_SHARP_,p2__24231_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__24242 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__24243__i = 0, G__24243__a = new Array(arguments.length -  3);
while (G__24243__i < G__24243__a.length) {G__24243__a[G__24243__i] = arguments[G__24243__i + 3]; ++G__24243__i;}
  more = new cljs.core.IndexedSeq(G__24243__a,0);
} 
return G__24242__delegate.call(this,k,x,y,more);};
G__24242.cljs$lang$maxFixedArity = 3;
G__24242.cljs$lang$applyTo = (function (arglist__24244){
var k = cljs.core.first(arglist__24244);
arglist__24244 = cljs.core.next(arglist__24244);
var x = cljs.core.first(arglist__24244);
arglist__24244 = cljs.core.next(arglist__24244);
var y = cljs.core.first(arglist__24244);
var more = cljs.core.rest(arglist__24244);
return G__24242__delegate(k,x,y,more);
});
G__24242.cljs$core$IFn$_invoke$arity$variadic = G__24242__delegate;
return G__24242;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__24245 = null;
if (arguments.length > 3) {
var G__24246__i = 0, G__24246__a = new Array(arguments.length -  3);
while (G__24246__i < G__24246__a.length) {G__24246__a[G__24246__i] = arguments[G__24246__i + 3]; ++G__24246__i;}
G__24245 = new cljs.core.IndexedSeq(G__24246__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__24245);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__24263 = null;
var G__24263__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24263__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24258 = result;
var G__24259 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24258,G__24259) : rf.call(null,G__24258,G__24259));
})());
})());
var G__24260 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24260) : rf.call(null,G__24260));
});
var G__24263__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__24261 = result;
var G__24262 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24261,G__24262) : rf.call(null,G__24261,G__24262));
} else {
return result;
}
});
G__24263 = function(result,input){
switch(arguments.length){
case 0:
return G__24263__0.call(this);
case 1:
return G__24263__1.call(this,result);
case 2:
return G__24263__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24263.cljs$core$IFn$_invoke$arity$0 = G__24263__0;
G__24263.cljs$core$IFn$_invoke$arity$1 = G__24263__1;
G__24263.cljs$core$IFn$_invoke$arity$2 = G__24263__2;
return G__24263;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__24276 = null;
var G__24276__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24276__1 = (function (result){
var G__24271 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24271) : rf.call(null,G__24271));
});
var G__24276__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24272 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24272) : pred.call(null,G__24272));
})())){
var G__24273 = result;
var G__24274 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24273,G__24274) : rf.call(null,G__24273,G__24274));
} else {
return cljs.core.reduced(result);
}
});
G__24276 = function(result,input){
switch(arguments.length){
case 0:
return G__24276__0.call(this);
case 1:
return G__24276__1.call(this,result);
case 2:
return G__24276__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24276.cljs$core$IFn$_invoke$arity$0 = G__24276__0;
G__24276.cljs$core$IFn$_invoke$arity$1 = G__24276__1;
G__24276.cljs$core$IFn$_invoke$arity$2 = G__24276__2;
return G__24276;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__24275 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24275) : pred.call(null,G__24275));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__24281 = (function (){var G__24283 = cljs.core._entry_key(sc,e);
var G__24284 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24283,G__24284) : comp.call(null,G__24283,G__24284));
})();
var G__24282 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__24281,G__24282) : test.call(null,G__24281,G__24282));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24288 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24288,(0),null);
var s = vec__24288;
if(cljs.core.truth_((function (){var G__24289 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24289) : include.call(null,G__24289));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24290 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24290,(0),null);
var s = vec__24290;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24294 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24294,(0),null);
var s = vec__24294;
if(cljs.core.truth_((function (){var G__24295 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__24295) : include.call(null,G__24295));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__24296 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24296,(0),null);
var s = vec__24296;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__24297 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__24297) : Math.ceil.call(null,G__24297));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13064__auto__ = self__.__hash;
if(!((h__13064__auto__ == null))){
return h__13064__auto__;
} else {
var h__13064__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13064__auto____$1;

return h__13064__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__24298 = ret;
var G__24299 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24298,G__24299) : f.call(null,G__24298,G__24299));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__24300 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24300) : cljs.core.deref.call(null,G__24300));
} else {
var G__24301 = (i + self__.step);
var G__24302 = ret__$1;
i = G__24301;
ret = G__24302;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__24320 = null;
var G__24320__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24320__1 = (function (result){
var G__24317 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24317) : rf.call(null,G__24317));
});
var G__24320__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__24318 = result;
var G__24319 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24318,G__24319) : rf.call(null,G__24318,G__24319));
} else {
return result;
}
});
G__24320 = function(result,input){
switch(arguments.length){
case 0:
return G__24320__0.call(this);
case 1:
return G__24320__1.call(this,result);
case 2:
return G__24320__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24320.cljs$core$IFn$_invoke$arity$0 = G__24320__0;
G__24320.cljs$core$IFn$_invoke$arity$1 = G__24320__1;
G__24320.cljs$core$IFn$_invoke$arity$2 = G__24320__2;
return G__24320;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__24342 = null;
var G__24342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24342__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__24333 = result;
var G__24334 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24333,G__24334) : rf.call(null,G__24333,G__24334));
})());
})());
var G__24335 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24335) : rf.call(null,G__24335));
});
var G__24342__2 = (function (result,input){
var pval = (function (){var G__24336 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24336) : cljs.core.deref.call(null,G__24336));
})();
var val = (function (){var G__24337 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24337) : f.call(null,G__24337));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__24338 = result;
var G__24339 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24338,G__24339) : rf.call(null,G__24338,G__24339));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__24342 = function(result,input){
switch(arguments.length){
case 0:
return G__24342__0.call(this);
case 1:
return G__24342__1.call(this,result);
case 2:
return G__24342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24342.cljs$core$IFn$_invoke$arity$0 = G__24342__0;
G__24342.cljs$core$IFn$_invoke$arity$1 = G__24342__1;
G__24342.cljs$core$IFn$_invoke$arity$2 = G__24342__2;
return G__24342;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__24340 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24340) : f.call(null,G__24340));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__24321_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__24341 = p1__24321_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24341) : f.call(null,G__24341));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__24351 = init;
var G__24352 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24351,G__24352) : f.call(null,G__24351,G__24352));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__24447 = null;
var G__24447__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__24447__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24405 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24405) : f.call(null,G__24405));
})()],null));
});
var G__24447__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24406 = x;
var G__24407 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24406,G__24407) : f.call(null,G__24406,G__24407));
})()],null));
});
var G__24447__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24408 = x;
var G__24409 = y;
var G__24410 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24408,G__24409,G__24410) : f.call(null,G__24408,G__24409,G__24410));
})()],null));
});
var G__24447__4 = (function() { 
var G__24448__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__24448 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24449__i = 0, G__24449__a = new Array(arguments.length -  3);
while (G__24449__i < G__24449__a.length) {G__24449__a[G__24449__i] = arguments[G__24449__i + 3]; ++G__24449__i;}
  args = new cljs.core.IndexedSeq(G__24449__a,0);
} 
return G__24448__delegate.call(this,x,y,z,args);};
G__24448.cljs$lang$maxFixedArity = 3;
G__24448.cljs$lang$applyTo = (function (arglist__24450){
var x = cljs.core.first(arglist__24450);
arglist__24450 = cljs.core.next(arglist__24450);
var y = cljs.core.first(arglist__24450);
arglist__24450 = cljs.core.next(arglist__24450);
var z = cljs.core.first(arglist__24450);
var args = cljs.core.rest(arglist__24450);
return G__24448__delegate(x,y,z,args);
});
G__24448.cljs$core$IFn$_invoke$arity$variadic = G__24448__delegate;
return G__24448;
})()
;
G__24447 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24447__0.call(this);
case 1:
return G__24447__1.call(this,x);
case 2:
return G__24447__2.call(this,x,y);
case 3:
return G__24447__3.call(this,x,y,z);
default:
var G__24451 = null;
if (arguments.length > 3) {
var G__24452__i = 0, G__24452__a = new Array(arguments.length -  3);
while (G__24452__i < G__24452__a.length) {G__24452__a[G__24452__i] = arguments[G__24452__i + 3]; ++G__24452__i;}
G__24451 = new cljs.core.IndexedSeq(G__24452__a,0);
}
return G__24447__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24451);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24447.cljs$lang$maxFixedArity = 3;
G__24447.cljs$lang$applyTo = G__24447__4.cljs$lang$applyTo;
G__24447.cljs$core$IFn$_invoke$arity$0 = G__24447__0;
G__24447.cljs$core$IFn$_invoke$arity$1 = G__24447__1;
G__24447.cljs$core$IFn$_invoke$arity$2 = G__24447__2;
G__24447.cljs$core$IFn$_invoke$arity$3 = G__24447__3;
G__24447.cljs$core$IFn$_invoke$arity$variadic = G__24447__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24447;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__24453 = null;
var G__24453__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__24453__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24411 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24411) : f.call(null,G__24411));
})(),(function (){var G__24412 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24412) : g.call(null,G__24412));
})()],null));
});
var G__24453__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24413 = x;
var G__24414 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24413,G__24414) : f.call(null,G__24413,G__24414));
})(),(function (){var G__24415 = x;
var G__24416 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24415,G__24416) : g.call(null,G__24415,G__24416));
})()],null));
});
var G__24453__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24417 = x;
var G__24418 = y;
var G__24419 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24417,G__24418,G__24419) : f.call(null,G__24417,G__24418,G__24419));
})(),(function (){var G__24420 = x;
var G__24421 = y;
var G__24422 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24420,G__24421,G__24422) : g.call(null,G__24420,G__24421,G__24422));
})()],null));
});
var G__24453__4 = (function() { 
var G__24454__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__24454 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24455__i = 0, G__24455__a = new Array(arguments.length -  3);
while (G__24455__i < G__24455__a.length) {G__24455__a[G__24455__i] = arguments[G__24455__i + 3]; ++G__24455__i;}
  args = new cljs.core.IndexedSeq(G__24455__a,0);
} 
return G__24454__delegate.call(this,x,y,z,args);};
G__24454.cljs$lang$maxFixedArity = 3;
G__24454.cljs$lang$applyTo = (function (arglist__24456){
var x = cljs.core.first(arglist__24456);
arglist__24456 = cljs.core.next(arglist__24456);
var y = cljs.core.first(arglist__24456);
arglist__24456 = cljs.core.next(arglist__24456);
var z = cljs.core.first(arglist__24456);
var args = cljs.core.rest(arglist__24456);
return G__24454__delegate(x,y,z,args);
});
G__24454.cljs$core$IFn$_invoke$arity$variadic = G__24454__delegate;
return G__24454;
})()
;
G__24453 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24453__0.call(this);
case 1:
return G__24453__1.call(this,x);
case 2:
return G__24453__2.call(this,x,y);
case 3:
return G__24453__3.call(this,x,y,z);
default:
var G__24457 = null;
if (arguments.length > 3) {
var G__24458__i = 0, G__24458__a = new Array(arguments.length -  3);
while (G__24458__i < G__24458__a.length) {G__24458__a[G__24458__i] = arguments[G__24458__i + 3]; ++G__24458__i;}
G__24457 = new cljs.core.IndexedSeq(G__24458__a,0);
}
return G__24453__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24453.cljs$lang$maxFixedArity = 3;
G__24453.cljs$lang$applyTo = G__24453__4.cljs$lang$applyTo;
G__24453.cljs$core$IFn$_invoke$arity$0 = G__24453__0;
G__24453.cljs$core$IFn$_invoke$arity$1 = G__24453__1;
G__24453.cljs$core$IFn$_invoke$arity$2 = G__24453__2;
G__24453.cljs$core$IFn$_invoke$arity$3 = G__24453__3;
G__24453.cljs$core$IFn$_invoke$arity$variadic = G__24453__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24453;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__24459 = null;
var G__24459__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__24459__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24423 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24423) : f.call(null,G__24423));
})(),(function (){var G__24424 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__24424) : g.call(null,G__24424));
})(),(function (){var G__24425 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__24425) : h.call(null,G__24425));
})()],null));
});
var G__24459__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24426 = x;
var G__24427 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24426,G__24427) : f.call(null,G__24426,G__24427));
})(),(function (){var G__24428 = x;
var G__24429 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__24428,G__24429) : g.call(null,G__24428,G__24429));
})(),(function (){var G__24430 = x;
var G__24431 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__24430,G__24431) : h.call(null,G__24430,G__24431));
})()],null));
});
var G__24459__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__24432 = x;
var G__24433 = y;
var G__24434 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24432,G__24433,G__24434) : f.call(null,G__24432,G__24433,G__24434));
})(),(function (){var G__24435 = x;
var G__24436 = y;
var G__24437 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__24435,G__24436,G__24437) : g.call(null,G__24435,G__24436,G__24437));
})(),(function (){var G__24438 = x;
var G__24439 = y;
var G__24440 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__24438,G__24439,G__24440) : h.call(null,G__24438,G__24439,G__24440));
})()],null));
});
var G__24459__4 = (function() { 
var G__24460__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__24460 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24461__i = 0, G__24461__a = new Array(arguments.length -  3);
while (G__24461__i < G__24461__a.length) {G__24461__a[G__24461__i] = arguments[G__24461__i + 3]; ++G__24461__i;}
  args = new cljs.core.IndexedSeq(G__24461__a,0);
} 
return G__24460__delegate.call(this,x,y,z,args);};
G__24460.cljs$lang$maxFixedArity = 3;
G__24460.cljs$lang$applyTo = (function (arglist__24462){
var x = cljs.core.first(arglist__24462);
arglist__24462 = cljs.core.next(arglist__24462);
var y = cljs.core.first(arglist__24462);
arglist__24462 = cljs.core.next(arglist__24462);
var z = cljs.core.first(arglist__24462);
var args = cljs.core.rest(arglist__24462);
return G__24460__delegate(x,y,z,args);
});
G__24460.cljs$core$IFn$_invoke$arity$variadic = G__24460__delegate;
return G__24460;
})()
;
G__24459 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24459__0.call(this);
case 1:
return G__24459__1.call(this,x);
case 2:
return G__24459__2.call(this,x,y);
case 3:
return G__24459__3.call(this,x,y,z);
default:
var G__24463 = null;
if (arguments.length > 3) {
var G__24464__i = 0, G__24464__a = new Array(arguments.length -  3);
while (G__24464__i < G__24464__a.length) {G__24464__a[G__24464__i] = arguments[G__24464__i + 3]; ++G__24464__i;}
G__24463 = new cljs.core.IndexedSeq(G__24464__a,0);
}
return G__24459__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24459.cljs$lang$maxFixedArity = 3;
G__24459.cljs$lang$applyTo = G__24459__4.cljs$lang$applyTo;
G__24459.cljs$core$IFn$_invoke$arity$0 = G__24459__0;
G__24459.cljs$core$IFn$_invoke$arity$1 = G__24459__1;
G__24459.cljs$core$IFn$_invoke$arity$2 = G__24459__2;
G__24459.cljs$core$IFn$_invoke$arity$3 = G__24459__3;
G__24459.cljs$core$IFn$_invoke$arity$variadic = G__24459__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24459;
})()
});
var juxt__4 = (function() { 
var G__24465__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__24466 = null;
var G__24466__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24353_SHARP_,p2__24354_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24353_SHARP_,(function (){return (p2__24354_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__24354_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__24354_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24466__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24355_SHARP_,p2__24356_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24355_SHARP_,(function (){var G__24441 = x;
return (p2__24356_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__24356_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24441) : p2__24356_SHARP_.call(null,G__24441));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24466__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24357_SHARP_,p2__24358_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24357_SHARP_,(function (){var G__24442 = x;
var G__24443 = y;
return (p2__24358_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__24358_SHARP_.cljs$core$IFn$_invoke$arity$2(G__24442,G__24443) : p2__24358_SHARP_.call(null,G__24442,G__24443));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24466__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24359_SHARP_,p2__24360_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24359_SHARP_,(function (){var G__24444 = x;
var G__24445 = y;
var G__24446 = z;
return (p2__24360_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__24360_SHARP_.cljs$core$IFn$_invoke$arity$3(G__24444,G__24445,G__24446) : p2__24360_SHARP_.call(null,G__24444,G__24445,G__24446));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__24466__4 = (function() { 
var G__24467__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__24361_SHARP_,p2__24362_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__24361_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__24362_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__24467 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24468__i = 0, G__24468__a = new Array(arguments.length -  3);
while (G__24468__i < G__24468__a.length) {G__24468__a[G__24468__i] = arguments[G__24468__i + 3]; ++G__24468__i;}
  args = new cljs.core.IndexedSeq(G__24468__a,0);
} 
return G__24467__delegate.call(this,x,y,z,args);};
G__24467.cljs$lang$maxFixedArity = 3;
G__24467.cljs$lang$applyTo = (function (arglist__24469){
var x = cljs.core.first(arglist__24469);
arglist__24469 = cljs.core.next(arglist__24469);
var y = cljs.core.first(arglist__24469);
arglist__24469 = cljs.core.next(arglist__24469);
var z = cljs.core.first(arglist__24469);
var args = cljs.core.rest(arglist__24469);
return G__24467__delegate(x,y,z,args);
});
G__24467.cljs$core$IFn$_invoke$arity$variadic = G__24467__delegate;
return G__24467;
})()
;
G__24466 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__24466__0.call(this);
case 1:
return G__24466__1.call(this,x);
case 2:
return G__24466__2.call(this,x,y);
case 3:
return G__24466__3.call(this,x,y,z);
default:
var G__24470 = null;
if (arguments.length > 3) {
var G__24471__i = 0, G__24471__a = new Array(arguments.length -  3);
while (G__24471__i < G__24471__a.length) {G__24471__a[G__24471__i] = arguments[G__24471__i + 3]; ++G__24471__i;}
G__24470 = new cljs.core.IndexedSeq(G__24471__a,0);
}
return G__24466__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24466.cljs$lang$maxFixedArity = 3;
G__24466.cljs$lang$applyTo = G__24466__4.cljs$lang$applyTo;
G__24466.cljs$core$IFn$_invoke$arity$0 = G__24466__0;
G__24466.cljs$core$IFn$_invoke$arity$1 = G__24466__1;
G__24466.cljs$core$IFn$_invoke$arity$2 = G__24466__2;
G__24466.cljs$core$IFn$_invoke$arity$3 = G__24466__3;
G__24466.cljs$core$IFn$_invoke$arity$variadic = G__24466__4.cljs$core$IFn$_invoke$arity$variadic;
return G__24466;
})()
;})(fs__$1))
};
var G__24465 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__24472__i = 0, G__24472__a = new Array(arguments.length -  3);
while (G__24472__i < G__24472__a.length) {G__24472__a[G__24472__i] = arguments[G__24472__i + 3]; ++G__24472__i;}
  fs = new cljs.core.IndexedSeq(G__24472__a,0);
} 
return G__24465__delegate.call(this,f,g,h,fs);};
G__24465.cljs$lang$maxFixedArity = 3;
G__24465.cljs$lang$applyTo = (function (arglist__24473){
var f = cljs.core.first(arglist__24473);
arglist__24473 = cljs.core.next(arglist__24473);
var g = cljs.core.first(arglist__24473);
arglist__24473 = cljs.core.next(arglist__24473);
var h = cljs.core.first(arglist__24473);
var fs = cljs.core.rest(arglist__24473);
return G__24465__delegate(f,g,h,fs);
});
G__24465.cljs$core$IFn$_invoke$arity$variadic = G__24465__delegate;
return G__24465;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__24474 = null;
if (arguments.length > 3) {
var G__24475__i = 0, G__24475__a = new Array(arguments.length -  3);
while (G__24475__i < G__24475__a.length) {G__24475__a[G__24475__i] = arguments[G__24475__i + 3]; ++G__24475__i;}
G__24474 = new cljs.core.IndexedSeq(G__24475__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__24474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__24476 = cljs.core.next(coll);
coll = G__24476;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__24477 = (n - (1));
var G__24478 = cljs.core.next(coll);
n = G__24477;
coll = G__24478;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__24482 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24482,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24482,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24482,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_24490 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__24491_24497 = cljs.core.first(coll);
var G__24492_24498 = writer;
var G__24493_24499 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24491_24497,G__24492_24498,G__24493_24499) : print_one.call(null,G__24491_24497,G__24492_24498,G__24493_24499));
} else {
}

var coll_24500__$1 = cljs.core.next(coll);
var n_24501 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_24500__$1) && (((n_24501 == null)) || (!((n_24501 === (0)))))){
cljs.core._write(writer,sep);

var G__24494_24502 = cljs.core.first(coll_24500__$1);
var G__24495_24503 = writer;
var G__24496_24504 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24494_24502,G__24495_24503,G__24496_24504) : print_one.call(null,G__24494_24502,G__24495_24503,G__24496_24504));

var G__24505 = cljs.core.next(coll_24500__$1);
var G__24506 = (n_24501 - (1));
coll_24500__$1 = G__24505;
n_24501 = G__24506;
continue;
} else {
if((cljs.core.seq(coll_24500__$1)) && ((n_24501 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24490;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__24511 = cljs.core.seq(ss);
var chunk__24512 = null;
var count__24513 = (0);
var i__24514 = (0);
while(true){
if((i__24514 < count__24513)){
var s = chunk__24512.cljs$core$IIndexed$_nth$arity$2(null,i__24514);
cljs.core._write(writer,s);

var G__24515 = seq__24511;
var G__24516 = chunk__24512;
var G__24517 = count__24513;
var G__24518 = (i__24514 + (1));
seq__24511 = G__24515;
chunk__24512 = G__24516;
count__24513 = G__24517;
i__24514 = G__24518;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24511);
if(temp__4126__auto__){
var seq__24511__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24511__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__24511__$1);
var G__24519 = cljs.core.chunk_rest(seq__24511__$1);
var G__24520 = c__13430__auto__;
var G__24521 = cljs.core.count(c__13430__auto__);
var G__24522 = (0);
seq__24511 = G__24519;
chunk__24512 = G__24520;
count__24513 = G__24521;
i__24514 = G__24522;
continue;
} else {
var s = cljs.core.first(seq__24511__$1);
cljs.core._write(writer,s);

var G__24523 = cljs.core.next(seq__24511__$1);
var G__24524 = null;
var G__24525 = (0);
var G__24526 = (0);
seq__24511 = G__24523;
chunk__24512 = G__24524;
count__24513 = G__24525;
i__24514 = G__24526;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__24527__i = 0, G__24527__a = new Array(arguments.length -  1);
while (G__24527__i < G__24527__a.length) {G__24527__a[G__24527__i] = arguments[G__24527__i + 1]; ++G__24527__i;}
  ss = new cljs.core.IndexedSeq(G__24527__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__24528){
var writer = cljs.core.first(arglist__24528);
var ss = cljs.core.rest(arglist__24528);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj24530 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj24530;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__24533 = "[\\\\\"\b\f\n\r\t]";
var G__24534 = "g";
return RegExp(G__24533,G__24534);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__12631__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__12631__auto__)){
var and__12631__auto____$1 = (function (){var G__24548 = obj;
if(G__24548){
var bit__13324__auto__ = (G__24548.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__13324__auto__) || (G__24548.cljs$core$IMeta$)){
return true;
} else {
if((!G__24548.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24548);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__24548);
}
})();
if(and__12631__auto____$1){
return cljs.core.meta(obj);
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__24549 = obj;
if(G__24549){
var bit__13317__auto__ = (G__24549.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13317__auto__) || (G__24549.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__24550 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__24551 = pr_writer;
var G__24552 = writer;
var G__24553 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__24550,G__24551,G__24552,G__24553) : cljs.core.print_map.call(null,G__24550,G__24551,G__24552,G__24553));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__24554 = obj;
return goog.isString(G__24554);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__24556 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__24556;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__24555 = obj;
if(G__24555){
var bit__13324__auto__ = (G__24555.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13324__auto__) || (G__24555.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__24555.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24555);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__24555);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__24561 = cljs.core.seq(cljs.core.next(objs));
var chunk__24562 = null;
var count__24563 = (0);
var i__24564 = (0);
while(true){
if((i__24564 < count__24563)){
var obj = chunk__24562.cljs$core$IIndexed$_nth$arity$2(null,i__24564);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24565 = seq__24561;
var G__24566 = chunk__24562;
var G__24567 = count__24563;
var G__24568 = (i__24564 + (1));
seq__24561 = G__24565;
chunk__24562 = G__24566;
count__24563 = G__24567;
i__24564 = G__24568;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24561);
if(temp__4126__auto__){
var seq__24561__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24561__$1)){
var c__13430__auto__ = cljs.core.chunk_first(seq__24561__$1);
var G__24569 = cljs.core.chunk_rest(seq__24561__$1);
var G__24570 = c__13430__auto__;
var G__24571 = cljs.core.count(c__13430__auto__);
var G__24572 = (0);
seq__24561 = G__24569;
chunk__24562 = G__24570;
count__24563 = G__24571;
i__24564 = G__24572;
continue;
} else {
var obj = cljs.core.first(seq__24561__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__24573 = cljs.core.next(seq__24561__$1);
var G__24574 = null;
var G__24575 = (0);
var G__24576 = (0);
seq__24561 = G__24573;
chunk__24562 = G__24574;
count__24563 = G__24575;
i__24564 = G__24576;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24577__i = 0, G__24577__a = new Array(arguments.length -  0);
while (G__24577__i < G__24577__a.length) {G__24577__a[G__24577__i] = arguments[G__24577__i + 0]; ++G__24577__i;}
  objs = new cljs.core.IndexedSeq(G__24577__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__24578){
var objs = cljs.core.seq(arglist__24578);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24579__i = 0, G__24579__a = new Array(arguments.length -  0);
while (G__24579__i < G__24579__a.length) {G__24579__a[G__24579__i] = arguments[G__24579__i + 0]; ++G__24579__i;}
  objs = new cljs.core.IndexedSeq(G__24579__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__24580){
var objs = cljs.core.seq(arglist__24580);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24581__i = 0, G__24581__a = new Array(arguments.length -  0);
while (G__24581__i < G__24581__a.length) {G__24581__a[G__24581__i] = arguments[G__24581__i + 0]; ++G__24581__i;}
  objs = new cljs.core.IndexedSeq(G__24581__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__24582){
var objs = cljs.core.seq(arglist__24582);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24583__i = 0, G__24583__a = new Array(arguments.length -  0);
while (G__24583__i < G__24583__a.length) {G__24583__a[G__24583__i] = arguments[G__24583__i + 0]; ++G__24583__i;}
  objs = new cljs.core.IndexedSeq(G__24583__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__24584){
var objs = cljs.core.seq(arglist__24584);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24585__i = 0, G__24585__a = new Array(arguments.length -  0);
while (G__24585__i < G__24585__a.length) {G__24585__a[G__24585__i] = arguments[G__24585__i + 0]; ++G__24585__i;}
  objs = new cljs.core.IndexedSeq(G__24585__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__24586){
var objs = cljs.core.seq(arglist__24586);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24587__i = 0, G__24587__a = new Array(arguments.length -  0);
while (G__24587__i < G__24587__a.length) {G__24587__a[G__24587__i] = arguments[G__24587__i + 0]; ++G__24587__i;}
  objs = new cljs.core.IndexedSeq(G__24587__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__24588){
var objs = cljs.core.seq(arglist__24588);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24589__i = 0, G__24589__a = new Array(arguments.length -  0);
while (G__24589__i < G__24589__a.length) {G__24589__a[G__24589__i] = arguments[G__24589__i + 0]; ++G__24589__i;}
  objs = new cljs.core.IndexedSeq(G__24589__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__24590){
var objs = cljs.core.seq(arglist__24590);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__24591__i = 0, G__24591__a = new Array(arguments.length -  0);
while (G__24591__i < G__24591__a.length) {G__24591__a[G__24591__i] = arguments[G__24591__i + 0]; ++G__24591__i;}
  objs = new cljs.core.IndexedSeq(G__24591__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__24592){
var objs = cljs.core.seq(arglist__24592);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__24599_24605 = cljs.core.key(e);
var G__24600_24606 = w;
var G__24601_24607 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24599_24605,G__24600_24606,G__24601_24607) : print_one.call(null,G__24599_24605,G__24600_24606,G__24601_24607));

cljs.core._write(w," ");

var G__24602 = cljs.core.val(e);
var G__24603 = w;
var G__24604 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__24602,G__24603,G__24604) : print_one.call(null,G__24602,G__24603,G__24604));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__24608__i = 0, G__24608__a = new Array(arguments.length -  2);
while (G__24608__i < G__24608__a.length) {G__24608__a[G__24608__i] = arguments[G__24608__i + 2]; ++G__24608__i;}
  args = new cljs.core.IndexedSeq(G__24608__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__24609){
var iref = cljs.core.first(arglist__24609);
arglist__24609 = cljs.core.next(arglist__24609);
var f = cljs.core.first(arglist__24609);
var args = cljs.core.rest(arglist__24609);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__24612 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24612) : cljs.core.atom.call(null,G__24612));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__24614 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24614) : cljs.core.deref.call(null,G__24614));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__24615_SHARP_,p2__24616_SHARP_){
var ret = (function (){var G__24619 = p1__24615_SHARP_;
var G__24620 = p2__24616_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24619,G__24620) : rf.call(null,G__24619,G__24620));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__24623 = null;
var G__24623__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24623__1 = (function (result){
var G__24622 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24622) : rf.call(null,G__24622));
});
var G__24623__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__24623 = function(result,input){
switch(arguments.length){
case 0:
return G__24623__0.call(this);
case 1:
return G__24623__1.call(this,result);
case 2:
return G__24623__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24623.cljs$core$IFn$_invoke$arity$0 = G__24623__0;
G__24623.cljs$core$IFn$_invoke$arity$1 = G__24623__1;
G__24623.cljs$core$IFn$_invoke$arity$2 = G__24623__2;
return G__24623;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__24632 = null;
var G__24632__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24632__1 = (function (result){
var G__24628 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24628) : rf.call(null,G__24628));
});
var G__24632__2 = (function (result,input){
var prior = (function (){var G__24629 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24629) : cljs.core.deref.call(null,G__24629));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__24630 = result;
var G__24631 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24630,G__24631) : rf.call(null,G__24630,G__24631));
}
});
G__24632 = function(result,input){
switch(arguments.length){
case 0:
return G__24632__0.call(this);
case 1:
return G__24632__1.call(this,result);
case 2:
return G__24632__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24632.cljs$core$IFn$_invoke$arity$0 = G__24632__0;
G__24632.cljs$core$IFn$_invoke$arity$1 = G__24632__1;
G__24632.cljs$core$IFn$_invoke$arity$2 = G__24632__2;
return G__24632;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__13621__auto__ = this;
return cljs.core.es6_iterator(this__13621__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__24634_SHARP_,p2__24633_SHARP_){
var G__24636 = p2__24633_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__24636) : proc.call(null,G__24636));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj24638 = {};
return obj24638;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._clj__GT_js[(function (){var G__24642 = x__13287__auto__;
return goog.typeOf(G__24642);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._key__GT_js[(function (){var G__24646 = x__13287__auto__;
return goog.typeOf(G__24646);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__24649 = k;
if(G__24649){
var bit__13324__auto__ = null;
if(cljs.core.truth_((function (){var or__12643__auto__ = bit__13324__auto__;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return G__24649.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24649.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24649);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24649);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__24650 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__24650) : cljs.core.clj__GT_js.call(null,G__24650));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__24666 = x;
if(G__24666){
var bit__13324__auto__ = null;
if(cljs.core.truth_((function (){var or__12643__auto__ = bit__13324__auto__;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return G__24666.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__24666.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24666);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__24666);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj24668 = {};
return obj24668;
})();
var seq__24669_24679 = cljs.core.seq(x);
var chunk__24670_24680 = null;
var count__24671_24681 = (0);
var i__24672_24682 = (0);
while(true){
if((i__24672_24682 < count__24671_24681)){
var vec__24673_24683 = chunk__24670_24680.cljs$core$IIndexed$_nth$arity$2(null,i__24672_24682);
var k_24684 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24673_24683,(0),null);
var v_24685 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24673_24683,(1),null);
(m[cljs.core.key__GT_js(k_24684)] = clj__GT_js(v_24685));

var G__24686 = seq__24669_24679;
var G__24687 = chunk__24670_24680;
var G__24688 = count__24671_24681;
var G__24689 = (i__24672_24682 + (1));
seq__24669_24679 = G__24686;
chunk__24670_24680 = G__24687;
count__24671_24681 = G__24688;
i__24672_24682 = G__24689;
continue;
} else {
var temp__4126__auto___24690 = cljs.core.seq(seq__24669_24679);
if(temp__4126__auto___24690){
var seq__24669_24691__$1 = temp__4126__auto___24690;
if(cljs.core.chunked_seq_QMARK_(seq__24669_24691__$1)){
var c__13430__auto___24692 = cljs.core.chunk_first(seq__24669_24691__$1);
var G__24693 = cljs.core.chunk_rest(seq__24669_24691__$1);
var G__24694 = c__13430__auto___24692;
var G__24695 = cljs.core.count(c__13430__auto___24692);
var G__24696 = (0);
seq__24669_24679 = G__24693;
chunk__24670_24680 = G__24694;
count__24671_24681 = G__24695;
i__24672_24682 = G__24696;
continue;
} else {
var vec__24674_24697 = cljs.core.first(seq__24669_24691__$1);
var k_24698 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24674_24697,(0),null);
var v_24699 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24674_24697,(1),null);
(m[cljs.core.key__GT_js(k_24698)] = clj__GT_js(v_24699));

var G__24700 = cljs.core.next(seq__24669_24691__$1);
var G__24701 = null;
var G__24702 = (0);
var G__24703 = (0);
seq__24669_24679 = G__24700;
chunk__24670_24680 = G__24701;
count__24671_24681 = G__24702;
i__24672_24682 = G__24703;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__24675_24704 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__24676_24705 = null;
var count__24677_24706 = (0);
var i__24678_24707 = (0);
while(true){
if((i__24678_24707 < count__24677_24706)){
var x_24708__$1 = chunk__24676_24705.cljs$core$IIndexed$_nth$arity$2(null,i__24678_24707);
arr.push(x_24708__$1);

var G__24709 = seq__24675_24704;
var G__24710 = chunk__24676_24705;
var G__24711 = count__24677_24706;
var G__24712 = (i__24678_24707 + (1));
seq__24675_24704 = G__24709;
chunk__24676_24705 = G__24710;
count__24677_24706 = G__24711;
i__24678_24707 = G__24712;
continue;
} else {
var temp__4126__auto___24713 = cljs.core.seq(seq__24675_24704);
if(temp__4126__auto___24713){
var seq__24675_24714__$1 = temp__4126__auto___24713;
if(cljs.core.chunked_seq_QMARK_(seq__24675_24714__$1)){
var c__13430__auto___24715 = cljs.core.chunk_first(seq__24675_24714__$1);
var G__24716 = cljs.core.chunk_rest(seq__24675_24714__$1);
var G__24717 = c__13430__auto___24715;
var G__24718 = cljs.core.count(c__13430__auto___24715);
var G__24719 = (0);
seq__24675_24704 = G__24716;
chunk__24676_24705 = G__24717;
count__24677_24706 = G__24718;
i__24678_24707 = G__24719;
continue;
} else {
var x_24720__$1 = cljs.core.first(seq__24675_24714__$1);
arr.push(x_24720__$1);

var G__24721 = cljs.core.next(seq__24675_24714__$1);
var G__24722 = null;
var G__24723 = (0);
var G__24724 = (0);
seq__24675_24704 = G__24721;
chunk__24676_24705 = G__24722;
count__24677_24706 = G__24723;
i__24678_24707 = G__24724;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj24726 = {};
return obj24726;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__12631__auto__ = x;
if(and__12631__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__12631__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13287__auto__ = (((x == null))?null:x);
return (function (){var or__12643__auto__ = (cljs.core._js__GT_clj[(function (){var G__24730 = x__13287__auto__;
return goog.typeOf(G__24730);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__24787__delegate = function (x,opts){
var map__24760 = opts;
var map__24760__$1 = ((cljs.core.seq_QMARK_(map__24760))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__24760):map__24760);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24760__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__24760,map__24760__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__24776 = x__$1;
if(G__24776){
var bit__13324__auto__ = null;
if(cljs.core.truth_((function (){var or__12643__auto__ = bit__13324__auto__;
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return G__24776.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__24776.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24776);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__24776);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__13399__auto__ = ((function (map__24760,map__24760__$1,keywordize_keys,keyfn){
return (function iter__24777(s__24778){
return (new cljs.core.LazySeq(null,((function (map__24760,map__24760__$1,keywordize_keys,keyfn){
return (function (){
var s__24778__$1 = s__24778;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__24778__$1);
if(temp__4126__auto__){
var s__24778__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__24778__$2)){
var c__13397__auto__ = cljs.core.chunk_first(s__24778__$2);
var size__13398__auto__ = cljs.core.count(c__13397__auto__);
var b__24780 = cljs.core.chunk_buffer(size__13398__auto__);
if((function (){var i__24779 = (0);
while(true){
if((i__24779 < size__13398__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__13397__auto__,i__24779);
cljs.core.chunk_append(b__24780,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24785 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24785) : keyfn.call(null,G__24785));
})(),thisfn((x__$1[k]))], null));

var G__24788 = (i__24779 + (1));
i__24779 = G__24788;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__24780),iter__24777(cljs.core.chunk_rest(s__24778__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__24780),null);
}
} else {
var k = cljs.core.first(s__24778__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__24786 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__24786) : keyfn.call(null,G__24786));
})(),thisfn((x__$1[k]))], null),iter__24777(cljs.core.rest(s__24778__$2)));
}
} else {
return null;
}
break;
}
});})(map__24760,map__24760__$1,keywordize_keys,keyfn))
,null,null));
});})(map__24760,map__24760__$1,keywordize_keys,keyfn))
;
return iter__13399__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__24760,map__24760__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__24787 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__24789__i = 0, G__24789__a = new Array(arguments.length -  1);
while (G__24789__i < G__24789__a.length) {G__24789__a[G__24789__i] = arguments[G__24789__i + 1]; ++G__24789__i;}
  opts = new cljs.core.IndexedSeq(G__24789__a,0);
} 
return G__24787__delegate.call(this,x,opts);};
G__24787.cljs$lang$maxFixedArity = 1;
G__24787.cljs$lang$applyTo = (function (arglist__24790){
var x = cljs.core.first(arglist__24790);
var opts = cljs.core.rest(arglist__24790);
return G__24787__delegate(x,opts);
});
G__24787.cljs$core$IFn$_invoke$arity$variadic = G__24787__delegate;
return G__24787;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__24791 = null;
if (arguments.length > 1) {
var G__24792__i = 0, G__24792__a = new Array(arguments.length -  1);
while (G__24792__i < G__24792__a.length) {G__24792__a[G__24792__i] = arguments[G__24792__i + 1]; ++G__24792__i;}
G__24791 = new cljs.core.IndexedSeq(G__24792__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__24795 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24795) : cljs.core.atom.call(null,G__24795));
})();
return ((function (mem){
return (function() { 
var G__24797__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__24796 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24796) : cljs.core.deref.call(null,G__24796));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__24797 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24798__i = 0, G__24798__a = new Array(arguments.length -  0);
while (G__24798__i < G__24798__a.length) {G__24798__a[G__24798__i] = arguments[G__24798__i + 0]; ++G__24798__i;}
  args = new cljs.core.IndexedSeq(G__24798__a,0);
} 
return G__24797__delegate.call(this,args);};
G__24797.cljs$lang$maxFixedArity = 0;
G__24797.cljs$lang$applyTo = (function (arglist__24799){
var args = cljs.core.seq(arglist__24799);
return G__24797__delegate(args);
});
G__24797.cljs$core$IFn$_invoke$arity$variadic = G__24797__delegate;
return G__24797;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__24801 = ret;
f = G__24801;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__24802__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__24802 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24803__i = 0, G__24803__a = new Array(arguments.length -  1);
while (G__24803__i < G__24803__a.length) {G__24803__a[G__24803__i] = arguments[G__24803__i + 1]; ++G__24803__i;}
  args = new cljs.core.IndexedSeq(G__24803__a,0);
} 
return G__24802__delegate.call(this,f,args);};
G__24802.cljs$lang$maxFixedArity = 1;
G__24802.cljs$lang$applyTo = (function (arglist__24804){
var f = cljs.core.first(arglist__24804);
var args = cljs.core.rest(arglist__24804);
return G__24802__delegate(f,args);
});
G__24802.cljs$core$IFn$_invoke$arity$variadic = G__24802__delegate;
return G__24802;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__24805 = null;
if (arguments.length > 1) {
var G__24806__i = 0, G__24806__a = new Array(arguments.length -  1);
while (G__24806__i < G__24806__a.length) {G__24806__a[G__24806__i] = arguments[G__24806__i + 1]; ++G__24806__i;}
G__24805 = new cljs.core.IndexedSeq(G__24806__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__24809 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__24809) : Math.floor.call(null,G__24809));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__24811 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24811) : f.call(null,G__24811));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__24813 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__24813) : cljs.core.atom.call(null,G__24813));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__24814__i = 0, G__24814__a = new Array(arguments.length -  1);
while (G__24814__i < G__24814__a.length) {G__24814__a[G__24814__i] = arguments[G__24814__i + 1]; ++G__24814__i;}
  args = new cljs.core.IndexedSeq(G__24814__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__24815){
var f = cljs.core.first(arglist__24815);
var args = cljs.core.rest(arglist__24815);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24880 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24880) : cljs.core.deref.call(null,G__24880));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__12643__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
var and__12631__auto__ = cljs.core.vector_QMARK_(parent);
if(and__12631__auto__){
var and__12631__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__12631__auto____$1){
var and__12631__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__12631__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__24905 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__24903 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__24903) : child.call(null,G__24903));
})(),(function (){var G__24904 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__24904) : parent.call(null,G__24904));
})());
var G__24906 = (i + (1));
ret = G__24905;
i = G__24906;
continue;
}
break;
}
} else {
return and__12631__auto____$2;
}
} else {
return and__12631__auto____$1;
}
} else {
return and__12631__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__24910 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24910) : cljs.core.deref.call(null,G__24910));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__24914 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24914) : cljs.core.deref.call(null,G__24914));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__24918 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24918) : cljs.core.deref.call(null,G__24918));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__24927 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__24927) : targets.call(null,G__24927));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__24928 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__24928) : sources.call(null,G__24928));
})()));
});})(tp,td,ta))
;
var or__12643__auto__ = ((cljs.core.contains_QMARK_((function (){var G__24932 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__24932) : tp.call(null,G__24932));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__24933 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24933) : ta.call(null,G__24933));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__24934 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__24934) : ta.call(null,G__24934));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__24941 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24941) : parentMap.call(null,G__24941));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__24942 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24942) : parentMap.call(null,G__24942));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__24935_SHARP_){
return cljs.core.cons(cljs.core.first(p1__24935_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__24935_SHARP_),cljs.core.second(p1__24935_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__24943 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__24943) : parentMap.call(null,G__24943));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__24936_SHARP_,p2__24937_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__24936_SHARP_,p2__24937_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__24946 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24946) : cljs.core.deref.call(null,G__24946));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__24947 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24947) : cljs.core.deref.call(null,G__24947));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__24963 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24963) : cljs.core.deref.call(null,G__24963));
})().call(null,x);
var or__12643__auto__ = (cljs.core.truth_((function (){var and__12631__auto__ = xprefs;
if(cljs.core.truth_(and__12631__auto__)){
var G__24965 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__24965) : xprefs.call(null,G__24965));
} else {
return and__12631__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__24966 = cljs.core.rest(ps);
ps = G__24966;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12643__auto____$1)){
return or__12643__auto____$1;
} else {
var or__12643__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__24967 = cljs.core.rest(ps);
ps = G__24967;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__12643__auto____$2)){
return or__12643__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__12643__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__12643__auto__)){
return or__12643__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__24981){
var vec__24982 = p__24981;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24982,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24982,(1),null);
var e = vec__24982;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__24983 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24983) : cljs.core.deref.call(null,G__24983));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__12643__auto__ = (be == null);
if(or__12643__auto__){
return or__12643__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__24984 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24984) : cljs.core.deref.call(null,G__24984));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__24985 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24985) : cljs.core.deref.call(null,G__24985));
})(),(function (){var G__24986 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24986) : cljs.core.deref.call(null,G__24986));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj24988 = {};
return obj24988;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._reset[(function (){var G__24992 = x__13287__auto__;
return goog.typeOf(G__24992);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._reset["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._add_method[(function (){var G__24996 = x__13287__auto__;
return goog.typeOf(G__24996);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._add_method["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._remove_method[(function (){var G__25000 = x__13287__auto__;
return goog.typeOf(G__25000);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._remove_method["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._prefer_method[(function (){var G__25004 = x__13287__auto__;
return goog.typeOf(G__25004);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._get_method[(function (){var G__25008 = x__13287__auto__;
return goog.typeOf(G__25008);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._get_method["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._methods[(function (){var G__25012 = x__13287__auto__;
return goog.typeOf(G__25012);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._methods["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__12631__auto__ = mf;
if(and__12631__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__12631__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13287__auto__ = (((mf == null))?null:mf);
return (function (){var or__12643__auto__ = (cljs.core._prefers[(function (){var G__25016 = x__13287__auto__;
return goog.typeOf(G__25016);
})()]);
if(or__12643__auto__){
return or__12643__auto__;
} else {
var or__12643__auto____$1 = (cljs.core._prefers["_"]);
if(or__12643__auto____$1){
return or__12643__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25018 = this$__$1;
return goog.getUid(G__25018);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25019 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25019) : cljs.core.deref.call(null,G__25019));
})(),(function (){var G__25020 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25020) : cljs.core.deref.call(null,G__25020));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__25021 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25021) : cljs.core.deref.call(null,G__25021));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__25022 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25022) : cljs.core.deref.call(null,G__25022));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25023 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25023) : cljs.core.deref.call(null,G__25023));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__25024 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25024) : cljs.core.deref.call(null,G__25024));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__25865 = null;
var G__25865__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__25865__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25025 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25025) : self__.dispatch_fn.call(null,G__25025));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25026 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25026) : target_fn.call(null,G__25026));
});
var G__25865__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25027 = a;
var G__25028 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25027,G__25028) : self__.dispatch_fn.call(null,G__25027,G__25028));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25029 = a;
var G__25030 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25029,G__25030) : target_fn.call(null,G__25029,G__25030));
});
var G__25865__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25031 = a;
var G__25032 = b;
var G__25033 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25031,G__25032,G__25033) : self__.dispatch_fn.call(null,G__25031,G__25032,G__25033));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25034 = a;
var G__25035 = b;
var G__25036 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25034,G__25035,G__25036) : target_fn.call(null,G__25034,G__25035,G__25036));
});
var G__25865__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25037 = a;
var G__25038 = b;
var G__25039 = c;
var G__25040 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25037,G__25038,G__25039,G__25040) : self__.dispatch_fn.call(null,G__25037,G__25038,G__25039,G__25040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25041 = a;
var G__25042 = b;
var G__25043 = c;
var G__25044 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25041,G__25042,G__25043,G__25044) : target_fn.call(null,G__25041,G__25042,G__25043,G__25044));
});
var G__25865__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25045 = a;
var G__25046 = b;
var G__25047 = c;
var G__25048 = d;
var G__25049 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25045,G__25046,G__25047,G__25048,G__25049) : self__.dispatch_fn.call(null,G__25045,G__25046,G__25047,G__25048,G__25049));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25050 = a;
var G__25051 = b;
var G__25052 = c;
var G__25053 = d;
var G__25054 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25050,G__25051,G__25052,G__25053,G__25054) : target_fn.call(null,G__25050,G__25051,G__25052,G__25053,G__25054));
});
var G__25865__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25055 = a;
var G__25056 = b;
var G__25057 = c;
var G__25058 = d;
var G__25059 = e;
var G__25060 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25055,G__25056,G__25057,G__25058,G__25059,G__25060) : self__.dispatch_fn.call(null,G__25055,G__25056,G__25057,G__25058,G__25059,G__25060));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25061 = a;
var G__25062 = b;
var G__25063 = c;
var G__25064 = d;
var G__25065 = e;
var G__25066 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25061,G__25062,G__25063,G__25064,G__25065,G__25066) : target_fn.call(null,G__25061,G__25062,G__25063,G__25064,G__25065,G__25066));
});
var G__25865__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25067 = a;
var G__25068 = b;
var G__25069 = c;
var G__25070 = d;
var G__25071 = e;
var G__25072 = f;
var G__25073 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073) : self__.dispatch_fn.call(null,G__25067,G__25068,G__25069,G__25070,G__25071,G__25072,G__25073));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25074 = a;
var G__25075 = b;
var G__25076 = c;
var G__25077 = d;
var G__25078 = e;
var G__25079 = f;
var G__25080 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080) : target_fn.call(null,G__25074,G__25075,G__25076,G__25077,G__25078,G__25079,G__25080));
});
var G__25865__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25081 = a;
var G__25082 = b;
var G__25083 = c;
var G__25084 = d;
var G__25085 = e;
var G__25086 = f;
var G__25087 = g;
var G__25088 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088) : self__.dispatch_fn.call(null,G__25081,G__25082,G__25083,G__25084,G__25085,G__25086,G__25087,G__25088));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25089 = a;
var G__25090 = b;
var G__25091 = c;
var G__25092 = d;
var G__25093 = e;
var G__25094 = f;
var G__25095 = g;
var G__25096 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096) : target_fn.call(null,G__25089,G__25090,G__25091,G__25092,G__25093,G__25094,G__25095,G__25096));
});
var G__25865__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25097 = a;
var G__25098 = b;
var G__25099 = c;
var G__25100 = d;
var G__25101 = e;
var G__25102 = f;
var G__25103 = g;
var G__25104 = h;
var G__25105 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105) : self__.dispatch_fn.call(null,G__25097,G__25098,G__25099,G__25100,G__25101,G__25102,G__25103,G__25104,G__25105));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25106 = a;
var G__25107 = b;
var G__25108 = c;
var G__25109 = d;
var G__25110 = e;
var G__25111 = f;
var G__25112 = g;
var G__25113 = h;
var G__25114 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114) : target_fn.call(null,G__25106,G__25107,G__25108,G__25109,G__25110,G__25111,G__25112,G__25113,G__25114));
});
var G__25865__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25115 = a;
var G__25116 = b;
var G__25117 = c;
var G__25118 = d;
var G__25119 = e;
var G__25120 = f;
var G__25121 = g;
var G__25122 = h;
var G__25123 = i;
var G__25124 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124) : self__.dispatch_fn.call(null,G__25115,G__25116,G__25117,G__25118,G__25119,G__25120,G__25121,G__25122,G__25123,G__25124));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25125 = a;
var G__25126 = b;
var G__25127 = c;
var G__25128 = d;
var G__25129 = e;
var G__25130 = f;
var G__25131 = g;
var G__25132 = h;
var G__25133 = i;
var G__25134 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134) : target_fn.call(null,G__25125,G__25126,G__25127,G__25128,G__25129,G__25130,G__25131,G__25132,G__25133,G__25134));
});
var G__25865__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25135 = a;
var G__25136 = b;
var G__25137 = c;
var G__25138 = d;
var G__25139 = e;
var G__25140 = f;
var G__25141 = g;
var G__25142 = h;
var G__25143 = i;
var G__25144 = j;
var G__25145 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145) : self__.dispatch_fn.call(null,G__25135,G__25136,G__25137,G__25138,G__25139,G__25140,G__25141,G__25142,G__25143,G__25144,G__25145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25146 = a;
var G__25147 = b;
var G__25148 = c;
var G__25149 = d;
var G__25150 = e;
var G__25151 = f;
var G__25152 = g;
var G__25153 = h;
var G__25154 = i;
var G__25155 = j;
var G__25156 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156) : target_fn.call(null,G__25146,G__25147,G__25148,G__25149,G__25150,G__25151,G__25152,G__25153,G__25154,G__25155,G__25156));
});
var G__25865__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25157 = a;
var G__25158 = b;
var G__25159 = c;
var G__25160 = d;
var G__25161 = e;
var G__25162 = f;
var G__25163 = g;
var G__25164 = h;
var G__25165 = i;
var G__25166 = j;
var G__25167 = k;
var G__25168 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168) : self__.dispatch_fn.call(null,G__25157,G__25158,G__25159,G__25160,G__25161,G__25162,G__25163,G__25164,G__25165,G__25166,G__25167,G__25168));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25169 = a;
var G__25170 = b;
var G__25171 = c;
var G__25172 = d;
var G__25173 = e;
var G__25174 = f;
var G__25175 = g;
var G__25176 = h;
var G__25177 = i;
var G__25178 = j;
var G__25179 = k;
var G__25180 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180) : target_fn.call(null,G__25169,G__25170,G__25171,G__25172,G__25173,G__25174,G__25175,G__25176,G__25177,G__25178,G__25179,G__25180));
});
var G__25865__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25181 = a;
var G__25182 = b;
var G__25183 = c;
var G__25184 = d;
var G__25185 = e;
var G__25186 = f;
var G__25187 = g;
var G__25188 = h;
var G__25189 = i;
var G__25190 = j;
var G__25191 = k;
var G__25192 = l;
var G__25193 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193) : self__.dispatch_fn.call(null,G__25181,G__25182,G__25183,G__25184,G__25185,G__25186,G__25187,G__25188,G__25189,G__25190,G__25191,G__25192,G__25193));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25194 = a;
var G__25195 = b;
var G__25196 = c;
var G__25197 = d;
var G__25198 = e;
var G__25199 = f;
var G__25200 = g;
var G__25201 = h;
var G__25202 = i;
var G__25203 = j;
var G__25204 = k;
var G__25205 = l;
var G__25206 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206) : target_fn.call(null,G__25194,G__25195,G__25196,G__25197,G__25198,G__25199,G__25200,G__25201,G__25202,G__25203,G__25204,G__25205,G__25206));
});
var G__25865__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25207 = a;
var G__25208 = b;
var G__25209 = c;
var G__25210 = d;
var G__25211 = e;
var G__25212 = f;
var G__25213 = g;
var G__25214 = h;
var G__25215 = i;
var G__25216 = j;
var G__25217 = k;
var G__25218 = l;
var G__25219 = m;
var G__25220 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220) : self__.dispatch_fn.call(null,G__25207,G__25208,G__25209,G__25210,G__25211,G__25212,G__25213,G__25214,G__25215,G__25216,G__25217,G__25218,G__25219,G__25220));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25221 = a;
var G__25222 = b;
var G__25223 = c;
var G__25224 = d;
var G__25225 = e;
var G__25226 = f;
var G__25227 = g;
var G__25228 = h;
var G__25229 = i;
var G__25230 = j;
var G__25231 = k;
var G__25232 = l;
var G__25233 = m;
var G__25234 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25221,G__25222,G__25223,G__25224,G__25225,G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234) : target_fn.call(null,G__25221,G__25222,G__25223,G__25224,G__25225,G__25226,G__25227,G__25228,G__25229,G__25230,G__25231,G__25232,G__25233,G__25234));
});
var G__25865__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25235 = a;
var G__25236 = b;
var G__25237 = c;
var G__25238 = d;
var G__25239 = e;
var G__25240 = f;
var G__25241 = g;
var G__25242 = h;
var G__25243 = i;
var G__25244 = j;
var G__25245 = k;
var G__25246 = l;
var G__25247 = m;
var G__25248 = n;
var G__25249 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25235,G__25236,G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249) : self__.dispatch_fn.call(null,G__25235,G__25236,G__25237,G__25238,G__25239,G__25240,G__25241,G__25242,G__25243,G__25244,G__25245,G__25246,G__25247,G__25248,G__25249));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25250 = a;
var G__25251 = b;
var G__25252 = c;
var G__25253 = d;
var G__25254 = e;
var G__25255 = f;
var G__25256 = g;
var G__25257 = h;
var G__25258 = i;
var G__25259 = j;
var G__25260 = k;
var G__25261 = l;
var G__25262 = m;
var G__25263 = n;
var G__25264 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25250,G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264) : target_fn.call(null,G__25250,G__25251,G__25252,G__25253,G__25254,G__25255,G__25256,G__25257,G__25258,G__25259,G__25260,G__25261,G__25262,G__25263,G__25264));
});
var G__25865__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25265 = a;
var G__25266 = b;
var G__25267 = c;
var G__25268 = d;
var G__25269 = e;
var G__25270 = f;
var G__25271 = g;
var G__25272 = h;
var G__25273 = i;
var G__25274 = j;
var G__25275 = k;
var G__25276 = l;
var G__25277 = m;
var G__25278 = n;
var G__25279 = o;
var G__25280 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280) : self__.dispatch_fn.call(null,G__25265,G__25266,G__25267,G__25268,G__25269,G__25270,G__25271,G__25272,G__25273,G__25274,G__25275,G__25276,G__25277,G__25278,G__25279,G__25280));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25281 = a;
var G__25282 = b;
var G__25283 = c;
var G__25284 = d;
var G__25285 = e;
var G__25286 = f;
var G__25287 = g;
var G__25288 = h;
var G__25289 = i;
var G__25290 = j;
var G__25291 = k;
var G__25292 = l;
var G__25293 = m;
var G__25294 = n;
var G__25295 = o;
var G__25296 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25281,G__25282,G__25283,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296) : target_fn.call(null,G__25281,G__25282,G__25283,G__25284,G__25285,G__25286,G__25287,G__25288,G__25289,G__25290,G__25291,G__25292,G__25293,G__25294,G__25295,G__25296));
});
var G__25865__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25297 = a;
var G__25298 = b;
var G__25299 = c;
var G__25300 = d;
var G__25301 = e;
var G__25302 = f;
var G__25303 = g;
var G__25304 = h;
var G__25305 = i;
var G__25306 = j;
var G__25307 = k;
var G__25308 = l;
var G__25309 = m;
var G__25310 = n;
var G__25311 = o;
var G__25312 = p;
var G__25313 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313) : self__.dispatch_fn.call(null,G__25297,G__25298,G__25299,G__25300,G__25301,G__25302,G__25303,G__25304,G__25305,G__25306,G__25307,G__25308,G__25309,G__25310,G__25311,G__25312,G__25313));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25314 = a;
var G__25315 = b;
var G__25316 = c;
var G__25317 = d;
var G__25318 = e;
var G__25319 = f;
var G__25320 = g;
var G__25321 = h;
var G__25322 = i;
var G__25323 = j;
var G__25324 = k;
var G__25325 = l;
var G__25326 = m;
var G__25327 = n;
var G__25328 = o;
var G__25329 = p;
var G__25330 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328,G__25329,G__25330) : target_fn.call(null,G__25314,G__25315,G__25316,G__25317,G__25318,G__25319,G__25320,G__25321,G__25322,G__25323,G__25324,G__25325,G__25326,G__25327,G__25328,G__25329,G__25330));
});
var G__25865__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25331 = a;
var G__25332 = b;
var G__25333 = c;
var G__25334 = d;
var G__25335 = e;
var G__25336 = f;
var G__25337 = g;
var G__25338 = h;
var G__25339 = i;
var G__25340 = j;
var G__25341 = k;
var G__25342 = l;
var G__25343 = m;
var G__25344 = n;
var G__25345 = o;
var G__25346 = p;
var G__25347 = q;
var G__25348 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348) : self__.dispatch_fn.call(null,G__25331,G__25332,G__25333,G__25334,G__25335,G__25336,G__25337,G__25338,G__25339,G__25340,G__25341,G__25342,G__25343,G__25344,G__25345,G__25346,G__25347,G__25348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25349 = a;
var G__25350 = b;
var G__25351 = c;
var G__25352 = d;
var G__25353 = e;
var G__25354 = f;
var G__25355 = g;
var G__25356 = h;
var G__25357 = i;
var G__25358 = j;
var G__25359 = k;
var G__25360 = l;
var G__25361 = m;
var G__25362 = n;
var G__25363 = o;
var G__25364 = p;
var G__25365 = q;
var G__25366 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365,G__25366) : target_fn.call(null,G__25349,G__25350,G__25351,G__25352,G__25353,G__25354,G__25355,G__25356,G__25357,G__25358,G__25359,G__25360,G__25361,G__25362,G__25363,G__25364,G__25365,G__25366));
});
var G__25865__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25367 = a;
var G__25368 = b;
var G__25369 = c;
var G__25370 = d;
var G__25371 = e;
var G__25372 = f;
var G__25373 = g;
var G__25374 = h;
var G__25375 = i;
var G__25376 = j;
var G__25377 = k;
var G__25378 = l;
var G__25379 = m;
var G__25380 = n;
var G__25381 = o;
var G__25382 = p;
var G__25383 = q;
var G__25384 = r;
var G__25385 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385) : self__.dispatch_fn.call(null,G__25367,G__25368,G__25369,G__25370,G__25371,G__25372,G__25373,G__25374,G__25375,G__25376,G__25377,G__25378,G__25379,G__25380,G__25381,G__25382,G__25383,G__25384,G__25385));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25386 = a;
var G__25387 = b;
var G__25388 = c;
var G__25389 = d;
var G__25390 = e;
var G__25391 = f;
var G__25392 = g;
var G__25393 = h;
var G__25394 = i;
var G__25395 = j;
var G__25396 = k;
var G__25397 = l;
var G__25398 = m;
var G__25399 = n;
var G__25400 = o;
var G__25401 = p;
var G__25402 = q;
var G__25403 = r;
var G__25404 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404) : target_fn.call(null,G__25386,G__25387,G__25388,G__25389,G__25390,G__25391,G__25392,G__25393,G__25394,G__25395,G__25396,G__25397,G__25398,G__25399,G__25400,G__25401,G__25402,G__25403,G__25404));
});
var G__25865__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__25405 = a;
var G__25406 = b;
var G__25407 = c;
var G__25408 = d;
var G__25409 = e;
var G__25410 = f;
var G__25411 = g;
var G__25412 = h;
var G__25413 = i;
var G__25414 = j;
var G__25415 = k;
var G__25416 = l;
var G__25417 = m;
var G__25418 = n;
var G__25419 = o;
var G__25420 = p;
var G__25421 = q;
var G__25422 = r;
var G__25423 = s;
var G__25424 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424) : self__.dispatch_fn.call(null,G__25405,G__25406,G__25407,G__25408,G__25409,G__25410,G__25411,G__25412,G__25413,G__25414,G__25415,G__25416,G__25417,G__25418,G__25419,G__25420,G__25421,G__25422,G__25423,G__25424));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25425 = a;
var G__25426 = b;
var G__25427 = c;
var G__25428 = d;
var G__25429 = e;
var G__25430 = f;
var G__25431 = g;
var G__25432 = h;
var G__25433 = i;
var G__25434 = j;
var G__25435 = k;
var G__25436 = l;
var G__25437 = m;
var G__25438 = n;
var G__25439 = o;
var G__25440 = p;
var G__25441 = q;
var G__25442 = r;
var G__25443 = s;
var G__25444 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444) : target_fn.call(null,G__25425,G__25426,G__25427,G__25428,G__25429,G__25430,G__25431,G__25432,G__25433,G__25434,G__25435,G__25436,G__25437,G__25438,G__25439,G__25440,G__25441,G__25442,G__25443,G__25444));
});
var G__25865__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__25865 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__25865__1.call(this,self__);
case 2:
return G__25865__2.call(this,self__,a);
case 3:
return G__25865__3.call(this,self__,a,b);
case 4:
return G__25865__4.call(this,self__,a,b,c);
case 5:
return G__25865__5.call(this,self__,a,b,c,d);
case 6:
return G__25865__6.call(this,self__,a,b,c,d,e);
case 7:
return G__25865__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__25865__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__25865__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__25865__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__25865__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__25865__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__25865__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__25865__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__25865__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__25865__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__25865__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__25865__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__25865__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__25865__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__25865__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__25865__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25865.cljs$core$IFn$_invoke$arity$1 = G__25865__1;
G__25865.cljs$core$IFn$_invoke$arity$2 = G__25865__2;
G__25865.cljs$core$IFn$_invoke$arity$3 = G__25865__3;
G__25865.cljs$core$IFn$_invoke$arity$4 = G__25865__4;
G__25865.cljs$core$IFn$_invoke$arity$5 = G__25865__5;
G__25865.cljs$core$IFn$_invoke$arity$6 = G__25865__6;
G__25865.cljs$core$IFn$_invoke$arity$7 = G__25865__7;
G__25865.cljs$core$IFn$_invoke$arity$8 = G__25865__8;
G__25865.cljs$core$IFn$_invoke$arity$9 = G__25865__9;
G__25865.cljs$core$IFn$_invoke$arity$10 = G__25865__10;
G__25865.cljs$core$IFn$_invoke$arity$11 = G__25865__11;
G__25865.cljs$core$IFn$_invoke$arity$12 = G__25865__12;
G__25865.cljs$core$IFn$_invoke$arity$13 = G__25865__13;
G__25865.cljs$core$IFn$_invoke$arity$14 = G__25865__14;
G__25865.cljs$core$IFn$_invoke$arity$15 = G__25865__15;
G__25865.cljs$core$IFn$_invoke$arity$16 = G__25865__16;
G__25865.cljs$core$IFn$_invoke$arity$17 = G__25865__17;
G__25865.cljs$core$IFn$_invoke$arity$18 = G__25865__18;
G__25865.cljs$core$IFn$_invoke$arity$19 = G__25865__19;
G__25865.cljs$core$IFn$_invoke$arity$20 = G__25865__20;
G__25865.cljs$core$IFn$_invoke$arity$21 = G__25865__21;
G__25865.cljs$core$IFn$_invoke$arity$22 = G__25865__22;
return G__25865;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args25017){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25017)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25445 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__25445) : self__.dispatch_fn.call(null,G__25445));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25446 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__25446) : target_fn.call(null,G__25446));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25447 = a;
var G__25448 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__25447,G__25448) : self__.dispatch_fn.call(null,G__25447,G__25448));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25449 = a;
var G__25450 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__25449,G__25450) : target_fn.call(null,G__25449,G__25450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25451 = a;
var G__25452 = b;
var G__25453 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__25451,G__25452,G__25453) : self__.dispatch_fn.call(null,G__25451,G__25452,G__25453));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25454 = a;
var G__25455 = b;
var G__25456 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__25454,G__25455,G__25456) : target_fn.call(null,G__25454,G__25455,G__25456));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25457 = a;
var G__25458 = b;
var G__25459 = c;
var G__25460 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__25457,G__25458,G__25459,G__25460) : self__.dispatch_fn.call(null,G__25457,G__25458,G__25459,G__25460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25461 = a;
var G__25462 = b;
var G__25463 = c;
var G__25464 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__25461,G__25462,G__25463,G__25464) : target_fn.call(null,G__25461,G__25462,G__25463,G__25464));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25465 = a;
var G__25466 = b;
var G__25467 = c;
var G__25468 = d;
var G__25469 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__25465,G__25466,G__25467,G__25468,G__25469) : self__.dispatch_fn.call(null,G__25465,G__25466,G__25467,G__25468,G__25469));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25470 = a;
var G__25471 = b;
var G__25472 = c;
var G__25473 = d;
var G__25474 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__25470,G__25471,G__25472,G__25473,G__25474) : target_fn.call(null,G__25470,G__25471,G__25472,G__25473,G__25474));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25475 = a;
var G__25476 = b;
var G__25477 = c;
var G__25478 = d;
var G__25479 = e;
var G__25480 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__25475,G__25476,G__25477,G__25478,G__25479,G__25480) : self__.dispatch_fn.call(null,G__25475,G__25476,G__25477,G__25478,G__25479,G__25480));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25481 = a;
var G__25482 = b;
var G__25483 = c;
var G__25484 = d;
var G__25485 = e;
var G__25486 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__25481,G__25482,G__25483,G__25484,G__25485,G__25486) : target_fn.call(null,G__25481,G__25482,G__25483,G__25484,G__25485,G__25486));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25487 = a;
var G__25488 = b;
var G__25489 = c;
var G__25490 = d;
var G__25491 = e;
var G__25492 = f;
var G__25493 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493) : self__.dispatch_fn.call(null,G__25487,G__25488,G__25489,G__25490,G__25491,G__25492,G__25493));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25494 = a;
var G__25495 = b;
var G__25496 = c;
var G__25497 = d;
var G__25498 = e;
var G__25499 = f;
var G__25500 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500) : target_fn.call(null,G__25494,G__25495,G__25496,G__25497,G__25498,G__25499,G__25500));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25501 = a;
var G__25502 = b;
var G__25503 = c;
var G__25504 = d;
var G__25505 = e;
var G__25506 = f;
var G__25507 = g;
var G__25508 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508) : self__.dispatch_fn.call(null,G__25501,G__25502,G__25503,G__25504,G__25505,G__25506,G__25507,G__25508));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25509 = a;
var G__25510 = b;
var G__25511 = c;
var G__25512 = d;
var G__25513 = e;
var G__25514 = f;
var G__25515 = g;
var G__25516 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516) : target_fn.call(null,G__25509,G__25510,G__25511,G__25512,G__25513,G__25514,G__25515,G__25516));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25517 = a;
var G__25518 = b;
var G__25519 = c;
var G__25520 = d;
var G__25521 = e;
var G__25522 = f;
var G__25523 = g;
var G__25524 = h;
var G__25525 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__25517,G__25518,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525) : self__.dispatch_fn.call(null,G__25517,G__25518,G__25519,G__25520,G__25521,G__25522,G__25523,G__25524,G__25525));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25526 = a;
var G__25527 = b;
var G__25528 = c;
var G__25529 = d;
var G__25530 = e;
var G__25531 = f;
var G__25532 = g;
var G__25533 = h;
var G__25534 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534) : target_fn.call(null,G__25526,G__25527,G__25528,G__25529,G__25530,G__25531,G__25532,G__25533,G__25534));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25535 = a;
var G__25536 = b;
var G__25537 = c;
var G__25538 = d;
var G__25539 = e;
var G__25540 = f;
var G__25541 = g;
var G__25542 = h;
var G__25543 = i;
var G__25544 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__25535,G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544) : self__.dispatch_fn.call(null,G__25535,G__25536,G__25537,G__25538,G__25539,G__25540,G__25541,G__25542,G__25543,G__25544));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25545 = a;
var G__25546 = b;
var G__25547 = c;
var G__25548 = d;
var G__25549 = e;
var G__25550 = f;
var G__25551 = g;
var G__25552 = h;
var G__25553 = i;
var G__25554 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554) : target_fn.call(null,G__25545,G__25546,G__25547,G__25548,G__25549,G__25550,G__25551,G__25552,G__25553,G__25554));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25555 = a;
var G__25556 = b;
var G__25557 = c;
var G__25558 = d;
var G__25559 = e;
var G__25560 = f;
var G__25561 = g;
var G__25562 = h;
var G__25563 = i;
var G__25564 = j;
var G__25565 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565) : self__.dispatch_fn.call(null,G__25555,G__25556,G__25557,G__25558,G__25559,G__25560,G__25561,G__25562,G__25563,G__25564,G__25565));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25566 = a;
var G__25567 = b;
var G__25568 = c;
var G__25569 = d;
var G__25570 = e;
var G__25571 = f;
var G__25572 = g;
var G__25573 = h;
var G__25574 = i;
var G__25575 = j;
var G__25576 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574,G__25575,G__25576) : target_fn.call(null,G__25566,G__25567,G__25568,G__25569,G__25570,G__25571,G__25572,G__25573,G__25574,G__25575,G__25576));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25577 = a;
var G__25578 = b;
var G__25579 = c;
var G__25580 = d;
var G__25581 = e;
var G__25582 = f;
var G__25583 = g;
var G__25584 = h;
var G__25585 = i;
var G__25586 = j;
var G__25587 = k;
var G__25588 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588) : self__.dispatch_fn.call(null,G__25577,G__25578,G__25579,G__25580,G__25581,G__25582,G__25583,G__25584,G__25585,G__25586,G__25587,G__25588));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25589 = a;
var G__25590 = b;
var G__25591 = c;
var G__25592 = d;
var G__25593 = e;
var G__25594 = f;
var G__25595 = g;
var G__25596 = h;
var G__25597 = i;
var G__25598 = j;
var G__25599 = k;
var G__25600 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__25589,G__25590,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600) : target_fn.call(null,G__25589,G__25590,G__25591,G__25592,G__25593,G__25594,G__25595,G__25596,G__25597,G__25598,G__25599,G__25600));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25601 = a;
var G__25602 = b;
var G__25603 = c;
var G__25604 = d;
var G__25605 = e;
var G__25606 = f;
var G__25607 = g;
var G__25608 = h;
var G__25609 = i;
var G__25610 = j;
var G__25611 = k;
var G__25612 = l;
var G__25613 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613) : self__.dispatch_fn.call(null,G__25601,G__25602,G__25603,G__25604,G__25605,G__25606,G__25607,G__25608,G__25609,G__25610,G__25611,G__25612,G__25613));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25614 = a;
var G__25615 = b;
var G__25616 = c;
var G__25617 = d;
var G__25618 = e;
var G__25619 = f;
var G__25620 = g;
var G__25621 = h;
var G__25622 = i;
var G__25623 = j;
var G__25624 = k;
var G__25625 = l;
var G__25626 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626) : target_fn.call(null,G__25614,G__25615,G__25616,G__25617,G__25618,G__25619,G__25620,G__25621,G__25622,G__25623,G__25624,G__25625,G__25626));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25627 = a;
var G__25628 = b;
var G__25629 = c;
var G__25630 = d;
var G__25631 = e;
var G__25632 = f;
var G__25633 = g;
var G__25634 = h;
var G__25635 = i;
var G__25636 = j;
var G__25637 = k;
var G__25638 = l;
var G__25639 = m;
var G__25640 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640) : self__.dispatch_fn.call(null,G__25627,G__25628,G__25629,G__25630,G__25631,G__25632,G__25633,G__25634,G__25635,G__25636,G__25637,G__25638,G__25639,G__25640));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25641 = a;
var G__25642 = b;
var G__25643 = c;
var G__25644 = d;
var G__25645 = e;
var G__25646 = f;
var G__25647 = g;
var G__25648 = h;
var G__25649 = i;
var G__25650 = j;
var G__25651 = k;
var G__25652 = l;
var G__25653 = m;
var G__25654 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__25641,G__25642,G__25643,G__25644,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654) : target_fn.call(null,G__25641,G__25642,G__25643,G__25644,G__25645,G__25646,G__25647,G__25648,G__25649,G__25650,G__25651,G__25652,G__25653,G__25654));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25655 = a;
var G__25656 = b;
var G__25657 = c;
var G__25658 = d;
var G__25659 = e;
var G__25660 = f;
var G__25661 = g;
var G__25662 = h;
var G__25663 = i;
var G__25664 = j;
var G__25665 = k;
var G__25666 = l;
var G__25667 = m;
var G__25668 = n;
var G__25669 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668,G__25669) : self__.dispatch_fn.call(null,G__25655,G__25656,G__25657,G__25658,G__25659,G__25660,G__25661,G__25662,G__25663,G__25664,G__25665,G__25666,G__25667,G__25668,G__25669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25670 = a;
var G__25671 = b;
var G__25672 = c;
var G__25673 = d;
var G__25674 = e;
var G__25675 = f;
var G__25676 = g;
var G__25677 = h;
var G__25678 = i;
var G__25679 = j;
var G__25680 = k;
var G__25681 = l;
var G__25682 = m;
var G__25683 = n;
var G__25684 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684) : target_fn.call(null,G__25670,G__25671,G__25672,G__25673,G__25674,G__25675,G__25676,G__25677,G__25678,G__25679,G__25680,G__25681,G__25682,G__25683,G__25684));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25685 = a;
var G__25686 = b;
var G__25687 = c;
var G__25688 = d;
var G__25689 = e;
var G__25690 = f;
var G__25691 = g;
var G__25692 = h;
var G__25693 = i;
var G__25694 = j;
var G__25695 = k;
var G__25696 = l;
var G__25697 = m;
var G__25698 = n;
var G__25699 = o;
var G__25700 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698,G__25699,G__25700) : self__.dispatch_fn.call(null,G__25685,G__25686,G__25687,G__25688,G__25689,G__25690,G__25691,G__25692,G__25693,G__25694,G__25695,G__25696,G__25697,G__25698,G__25699,G__25700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25701 = a;
var G__25702 = b;
var G__25703 = c;
var G__25704 = d;
var G__25705 = e;
var G__25706 = f;
var G__25707 = g;
var G__25708 = h;
var G__25709 = i;
var G__25710 = j;
var G__25711 = k;
var G__25712 = l;
var G__25713 = m;
var G__25714 = n;
var G__25715 = o;
var G__25716 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710,G__25711,G__25712,G__25713,G__25714,G__25715,G__25716) : target_fn.call(null,G__25701,G__25702,G__25703,G__25704,G__25705,G__25706,G__25707,G__25708,G__25709,G__25710,G__25711,G__25712,G__25713,G__25714,G__25715,G__25716));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25717 = a;
var G__25718 = b;
var G__25719 = c;
var G__25720 = d;
var G__25721 = e;
var G__25722 = f;
var G__25723 = g;
var G__25724 = h;
var G__25725 = i;
var G__25726 = j;
var G__25727 = k;
var G__25728 = l;
var G__25729 = m;
var G__25730 = n;
var G__25731 = o;
var G__25732 = p;
var G__25733 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723,G__25724,G__25725,G__25726,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733) : self__.dispatch_fn.call(null,G__25717,G__25718,G__25719,G__25720,G__25721,G__25722,G__25723,G__25724,G__25725,G__25726,G__25727,G__25728,G__25729,G__25730,G__25731,G__25732,G__25733));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25734 = a;
var G__25735 = b;
var G__25736 = c;
var G__25737 = d;
var G__25738 = e;
var G__25739 = f;
var G__25740 = g;
var G__25741 = h;
var G__25742 = i;
var G__25743 = j;
var G__25744 = k;
var G__25745 = l;
var G__25746 = m;
var G__25747 = n;
var G__25748 = o;
var G__25749 = p;
var G__25750 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750) : target_fn.call(null,G__25734,G__25735,G__25736,G__25737,G__25738,G__25739,G__25740,G__25741,G__25742,G__25743,G__25744,G__25745,G__25746,G__25747,G__25748,G__25749,G__25750));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25751 = a;
var G__25752 = b;
var G__25753 = c;
var G__25754 = d;
var G__25755 = e;
var G__25756 = f;
var G__25757 = g;
var G__25758 = h;
var G__25759 = i;
var G__25760 = j;
var G__25761 = k;
var G__25762 = l;
var G__25763 = m;
var G__25764 = n;
var G__25765 = o;
var G__25766 = p;
var G__25767 = q;
var G__25768 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768) : self__.dispatch_fn.call(null,G__25751,G__25752,G__25753,G__25754,G__25755,G__25756,G__25757,G__25758,G__25759,G__25760,G__25761,G__25762,G__25763,G__25764,G__25765,G__25766,G__25767,G__25768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25769 = a;
var G__25770 = b;
var G__25771 = c;
var G__25772 = d;
var G__25773 = e;
var G__25774 = f;
var G__25775 = g;
var G__25776 = h;
var G__25777 = i;
var G__25778 = j;
var G__25779 = k;
var G__25780 = l;
var G__25781 = m;
var G__25782 = n;
var G__25783 = o;
var G__25784 = p;
var G__25785 = q;
var G__25786 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785,G__25786) : target_fn.call(null,G__25769,G__25770,G__25771,G__25772,G__25773,G__25774,G__25775,G__25776,G__25777,G__25778,G__25779,G__25780,G__25781,G__25782,G__25783,G__25784,G__25785,G__25786));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25787 = a;
var G__25788 = b;
var G__25789 = c;
var G__25790 = d;
var G__25791 = e;
var G__25792 = f;
var G__25793 = g;
var G__25794 = h;
var G__25795 = i;
var G__25796 = j;
var G__25797 = k;
var G__25798 = l;
var G__25799 = m;
var G__25800 = n;
var G__25801 = o;
var G__25802 = p;
var G__25803 = q;
var G__25804 = r;
var G__25805 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805) : self__.dispatch_fn.call(null,G__25787,G__25788,G__25789,G__25790,G__25791,G__25792,G__25793,G__25794,G__25795,G__25796,G__25797,G__25798,G__25799,G__25800,G__25801,G__25802,G__25803,G__25804,G__25805));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25806 = a;
var G__25807 = b;
var G__25808 = c;
var G__25809 = d;
var G__25810 = e;
var G__25811 = f;
var G__25812 = g;
var G__25813 = h;
var G__25814 = i;
var G__25815 = j;
var G__25816 = k;
var G__25817 = l;
var G__25818 = m;
var G__25819 = n;
var G__25820 = o;
var G__25821 = p;
var G__25822 = q;
var G__25823 = r;
var G__25824 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824) : target_fn.call(null,G__25806,G__25807,G__25808,G__25809,G__25810,G__25811,G__25812,G__25813,G__25814,G__25815,G__25816,G__25817,G__25818,G__25819,G__25820,G__25821,G__25822,G__25823,G__25824));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__25825 = a;
var G__25826 = b;
var G__25827 = c;
var G__25828 = d;
var G__25829 = e;
var G__25830 = f;
var G__25831 = g;
var G__25832 = h;
var G__25833 = i;
var G__25834 = j;
var G__25835 = k;
var G__25836 = l;
var G__25837 = m;
var G__25838 = n;
var G__25839 = o;
var G__25840 = p;
var G__25841 = q;
var G__25842 = r;
var G__25843 = s;
var G__25844 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__25825,G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844) : self__.dispatch_fn.call(null,G__25825,G__25826,G__25827,G__25828,G__25829,G__25830,G__25831,G__25832,G__25833,G__25834,G__25835,G__25836,G__25837,G__25838,G__25839,G__25840,G__25841,G__25842,G__25843,G__25844));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__25845 = a;
var G__25846 = b;
var G__25847 = c;
var G__25848 = d;
var G__25849 = e;
var G__25850 = f;
var G__25851 = g;
var G__25852 = h;
var G__25853 = i;
var G__25854 = j;
var G__25855 = k;
var G__25856 = l;
var G__25857 = m;
var G__25858 = n;
var G__25859 = o;
var G__25860 = p;
var G__25861 = q;
var G__25862 = r;
var G__25863 = s;
var G__25864 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862,G__25863,G__25864) : target_fn.call(null,G__25845,G__25846,G__25847,G__25848,G__25849,G__25850,G__25851,G__25852,G__25853,G__25854,G__25855,G__25856,G__25857,G__25858,G__25859,G__25860,G__25861,G__25862,G__25863,G__25864));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__25866 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__25866);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13230__auto__,writer__13231__auto__,opt__13232__auto__){
return cljs.core._write(writer__13231__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__25871 = msg;
return Error(G__25871);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__25876 = x;
var G__25877 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25876,G__25877) : pred.call(null,G__25876,G__25877));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__25878 = y;
var G__25879 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__25878,G__25879) : pred.call(null,G__25878,G__25879));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map?rel=1422998148873